{"version":3,"file":"index-legacy-D3NQiwmV.js","sources":["../../src/canvas.js","../../src/websocket.js","../../src/auth.js","../../src/main.js"],"sourcesContent":["// src/canvas.js\n// Complete PixiJS Canvas Manager for CollabCanvas\nimport * as PIXI from 'pixi.js';\n\nexport class CanvasManager {\n  constructor(app) {\n    this.app = app;\n    this.viewport = new PIXI.Container();\n    this.objects = new Map(); // objectId -> PIXI Graphics\n    this.selectedObjects = new Set();\n    this.selectionIndicators = new Map(); // objectId -> selection box Graphics\n    this.remoteCursors = new Map(); // userId -> cursor container\n\n    // State\n    this.isPanning = false;\n    this.panStart = { x: 0, y: 0 };\n    this.currentTool = 'select'; // 'select', 'rectangle', 'circle', 'text'\n    this.currentColor = 0x3498db; // Default blue\n    \n    // Viewport setup\n    this.app.stage.addChild(this.viewport);\n    this.viewport.sortableChildren = true;\n    \n    // Grid background (optional visual aid)\n    this.drawGrid();\n    \n    // Setup interaction\n    this.setupPanZoom();\n    this.setupKeyboardShortcuts();\n    this.setupToolHandlers();\n    \n    console.log('Canvas initialized');\n  }\n  \n  // ==================== Grid ====================\n  \n  drawGrid() {\n    const grid = new PIXI.Graphics();\n    grid.lineStyle(1, 0x333333, 0.3);\n    \n    const gridSize = 50;\n    const gridExtent = 5000;\n    \n    // Vertical lines\n    for (let x = -gridExtent; x <= gridExtent; x += gridSize) {\n      grid.moveTo(x, -gridExtent);\n      grid.lineTo(x, gridExtent);\n    }\n    \n    // Horizontal lines\n    for (let y = -gridExtent; y <= gridExtent; y += gridSize) {\n      grid.moveTo(-gridExtent, y);\n      grid.lineTo(gridExtent, y);\n    }\n    \n    grid.zIndex = -1;\n    this.viewport.addChild(grid);\n  }\n  \n  // ==================== Pan & Zoom ====================\n  \n  setupPanZoom() {\n    const canvas = this.app.view;\n    \n    // Pan with middle mouse or Alt+drag\n    canvas.addEventListener('mousedown', (e) => {\n      if (e.button === 1 || (e.button === 0 && e.altKey)) {\n        this.isPanning = true;\n        this.panStart = { x: e.clientX, y: e.clientY };\n        canvas.style.cursor = 'grabbing';\n        e.preventDefault();\n      }\n    });\n    \n    canvas.addEventListener('mousemove', (e) => {\n      if (this.isPanning) {\n        const dx = e.clientX - this.panStart.x;\n        const dy = e.clientY - this.panStart.y;\n        \n        this.viewport.x += dx;\n        this.viewport.y += dy;\n        \n        this.panStart = { x: e.clientX, y: e.clientY };\n      }\n    });\n    \n    canvas.addEventListener('mouseup', () => {\n      if (this.isPanning) {\n        this.isPanning = false;\n        canvas.style.cursor = 'default';\n      }\n    });\n    \n    // Zoom with mouse wheel\n    canvas.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      \n      const zoomFactor = e.deltaY > 0 ? 0.9 : 1.1;\n      const mouseX = e.clientX;\n      const mouseY = e.clientY;\n      \n      // Get position before zoom\n      const worldPosBefore = this.screenToWorld(mouseX, mouseY);\n      \n      // Apply zoom\n      const newScale = this.viewport.scale.x * zoomFactor;\n      if (newScale >= 0.1 && newScale <= 10) {\n        this.viewport.scale.set(newScale);\n        \n        // Adjust position to keep mouse over same world point\n        const worldPosAfter = this.screenToWorld(mouseX, mouseY);\n        this.viewport.x += (worldPosAfter.x - worldPosBefore.x) * this.viewport.scale.x;\n        this.viewport.y += (worldPosAfter.y - worldPosBefore.y) * this.viewport.scale.y;\n      }\n    }, { passive: false });\n  }\n  \n  screenToWorld(screenX, screenY) {\n    return {\n      x: (screenX - this.viewport.x) / this.viewport.scale.x,\n      y: (screenY - this.viewport.y) / this.viewport.scale.y\n    };\n  }\n  \n  worldToScreen(worldX, worldY) {\n    return {\n      x: worldX * this.viewport.scale.x + this.viewport.x,\n      y: worldY * this.viewport.scale.y + this.viewport.y\n    };\n  }\n  \n  // ==================== Keyboard Shortcuts ====================\n  \n  setupKeyboardShortcuts() {\n    document.addEventListener('keydown', (e) => {\n      // Tool shortcuts\n      if (e.key === 'r' || e.key === 'R') {\n        this.setTool('rectangle');\n      } else if (e.key === 'c' || e.key === 'C') {\n        this.setTool('circle');\n      } else if (e.key === 't' || e.key === 'T') {\n        this.setTool('text');\n      } else if (e.key === 'v' || e.key === 'V' || e.key === 'Escape') {\n        this.setTool('select');\n      } else if (e.key === 'Delete' || e.key === 'Backspace') {\n        this.deleteSelected();\n      }\n    });\n  }\n  \n  setTool(tool) {\n    this.currentTool = tool;\n    console.log('Tool:', tool);\n    // Update UI indicator if you have one\n  }\n  \n  // ==================== Tool Handlers ====================\n  \n  setupToolHandlers() {\n    const canvas = this.app.view;\n    let drawStart = null;\n    let previewShape = null;\n\n    // Track cursor movement\n    canvas.addEventListener('mousemove', (e) => {\n      const worldPos = this.screenToWorld(e.clientX, e.clientY);\n\n      // Notify about cursor movement\n      if (this.onCursorMoved) {\n        this.onCursorMoved(worldPos.x, worldPos.y);\n      }\n\n      // Handle preview shape drawing\n      if (drawStart && previewShape) {\n        const width = worldPos.x - drawStart.x;\n        const height = worldPos.y - drawStart.y;\n\n        previewShape.clear();\n        previewShape.beginFill(this.currentColor);\n\n        if (this.currentTool === 'rectangle') {\n          previewShape.drawRect(drawStart.x, drawStart.y, width, height);\n        } else if (this.currentTool === 'circle') {\n          const radius = Math.sqrt(width * width + height * height);\n          previewShape.drawCircle(drawStart.x, drawStart.y, radius);\n        }\n\n        previewShape.endFill();\n      }\n    });\n\n    canvas.addEventListener('mousedown', (e) => {\n      if (e.button !== 0 || e.altKey) return; // Left click only, not panning\n      \n      const worldPos = this.screenToWorld(e.clientX, e.clientY);\n      \n      if (this.currentTool === 'rectangle' || this.currentTool === 'circle') {\n        drawStart = worldPos;\n        \n        // Create preview shape\n        previewShape = new PIXI.Graphics();\n        previewShape.alpha = 0.5;\n        this.viewport.addChild(previewShape);\n      }\n    });\n\n    canvas.addEventListener('mouseup', (e) => {\n      if (drawStart && previewShape) {\n        const worldPos = this.screenToWorld(e.clientX, e.clientY);\n        \n        // Create actual object\n        const objData = this.createToolObject(drawStart, worldPos);\n        \n        // Clean up preview\n        this.viewport.removeChild(previewShape);\n        previewShape = null;\n        drawStart = null;\n        \n        // Notify about new object (callback to WebSocket)\n        if (this.onObjectCreated) {\n          this.onObjectCreated(objData);\n        }\n      }\n    });\n  }\n  \n  createToolObject(start, end) {\n    const id = this.generateId();\n    \n    if (this.currentTool === 'rectangle') {\n      const width = Math.abs(end.x - start.x);\n      const height = Math.abs(end.y - start.y);\n      const x = Math.min(start.x, end.x);\n      const y = Math.min(start.y, end.y);\n      \n      this.createRectangle(id, x, y, width, height, this.currentColor);\n      \n      return {\n        id,\n        type: 'rectangle',\n        x, y, width, height,\n        color: this.currentColor\n      };\n    } else if (this.currentTool === 'circle') {\n      const dx = end.x - start.x;\n      const dy = end.y - start.y;\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      \n      this.createCircle(id, start.x, start.y, radius, this.currentColor);\n      \n      return {\n        id,\n        type: 'circle',\n        x: start.x,\n        y: start.y,\n        radius,\n        color: this.currentColor\n      };\n    }\n  }\n  \n  // ==================== Object Creation ====================\n  \n  createRectangle(id, x, y, width, height, color) {\n    const rect = new PIXI.Graphics();\n    rect.beginFill(color);\n    rect.drawRect(0, 0, width, height);\n    rect.endFill();\n    rect.x = x;\n    rect.y = y;\n    rect.interactive = true;\n    rect.buttonMode = true;\n\n    // Store dimensions for selection box\n    rect.userData = { width, height, type: 'rectangle' };\n\n    this.makeDraggable(rect, id);\n    this.makeSelectable(rect, id);\n\n    this.objects.set(id, rect);\n    this.viewport.addChild(rect);\n\n    return rect;\n  }\n  \n  createCircle(id, x, y, radius, color) {\n    const circle = new PIXI.Graphics();\n    circle.beginFill(color);\n    circle.drawCircle(0, 0, radius);\n    circle.endFill();\n    circle.x = x;\n    circle.y = y;\n    circle.interactive = true;\n    circle.buttonMode = true;\n\n    // Store dimensions for selection box\n    circle.userData = { radius, type: 'circle' };\n\n    this.makeDraggable(circle, id);\n    this.makeSelectable(circle, id);\n\n    this.objects.set(id, circle);\n    this.viewport.addChild(circle);\n\n    return circle;\n  }\n  \n  createText(id, text, x, y, fontSize, color) {\n    const textObj = new PIXI.Text(text, {\n      fontSize,\n      fill: color,\n      fontFamily: 'Arial'\n    });\n    textObj.x = x;\n    textObj.y = y;\n    textObj.interactive = true;\n    textObj.buttonMode = true;\n    \n    this.makeDraggable(textObj, id);\n    this.makeSelectable(textObj, id);\n    \n    this.objects.set(id, textObj);\n    this.viewport.addChild(textObj);\n    \n    return textObj;\n  }\n  \n  // ==================== Interaction ====================\n  \n  makeDraggable(obj, id) {\n    let dragData = null;\n    let dragOffset = { x: 0, y: 0 };\n    let lastDragUpdate = 0;\n    const dragUpdateInterval = 50; // Send updates every 50ms during drag (~20 FPS)\n\n    obj.on('pointerdown', (event) => {\n      if (this.currentTool !== 'select') return;\n\n      dragData = event.data;\n      obj.alpha = 0.7;\n      dragData.dragging = true;\n\n      // Store the offset between cursor and object position\n      const cursorPos = dragData.getLocalPosition(obj.parent);\n      dragOffset.x = cursorPos.x - obj.x;\n      dragOffset.y = cursorPos.y - obj.y;\n\n      event.stopPropagation();\n    });\n\n    obj.on('pointerup', () => {\n      if (dragData && dragData.dragging) {\n        obj.alpha = 1;\n        dragData.dragging = false;\n\n        // Send final position update\n        if (this.onObjectUpdated) {\n          this.onObjectUpdated(id, { x: obj.x, y: obj.y });\n        }\n\n        dragData = null;\n      }\n    });\n\n    obj.on('pointermove', () => {\n      if (dragData && dragData.dragging) {\n        const newPosition = dragData.getLocalPosition(obj.parent);\n        // Apply the offset to maintain cursor position relative to object\n        obj.x = newPosition.x - dragOffset.x;\n        obj.y = newPosition.y - dragOffset.y;\n\n        // Send throttled updates during drag for real-time visualization\n        const now = performance.now();\n        if (now - lastDragUpdate >= dragUpdateInterval) {\n          if (this.onObjectUpdated) {\n            this.onObjectUpdated(id, { x: obj.x, y: obj.y });\n          }\n          lastDragUpdate = now;\n        }\n      }\n    });\n  }\n  \n  makeSelectable(obj, id) {\n    obj.on('click', (event) => {\n      if (this.currentTool === 'select') {\n        if (event.data.originalEvent.shiftKey) {\n          // Multi-select\n          if (this.selectedObjects.has(id)) {\n            this.deselectObject(id);\n          } else {\n            this.selectObject(id);\n          }\n        } else {\n          // Single select\n          this.clearSelection();\n          this.selectObject(id);\n        }\n        event.stopPropagation();\n      }\n    });\n  }\n  \n  selectObject(id) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    this.selectedObjects.add(id);\n\n    // Remove existing selection indicator if any\n    const existingIndicator = this.selectionIndicators.get(id);\n    if (existingIndicator) {\n      this.viewport.removeChild(existingIndicator);\n      existingIndicator.destroy();\n    }\n\n    // Create selection indicator\n    const indicator = new PIXI.Graphics();\n    indicator.lineStyle(2, 0x00FF00);\n\n    if (obj.userData) {\n      if (obj.userData.type === 'rectangle') {\n        // Draw selection box around rectangle\n        const { width, height } = obj.userData;\n        indicator.drawRect(-2, -2, width + 4, height + 4);\n        indicator.x = obj.x;\n        indicator.y = obj.y;\n      } else if (obj.userData.type === 'circle') {\n        // Draw selection box around circle\n        const { radius } = obj.userData;\n        indicator.drawCircle(0, 0, radius + 2);\n        indicator.x = obj.x;\n        indicator.y = obj.y;\n      }\n    }\n\n    // Add to viewport and store reference\n    this.viewport.addChild(indicator);\n    this.selectionIndicators.set(id, indicator);\n  }\n\n  deselectObject(id) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    this.selectedObjects.delete(id);\n\n    // Remove selection indicator\n    const indicator = this.selectionIndicators.get(id);\n    if (indicator) {\n      this.viewport.removeChild(indicator);\n      indicator.destroy();\n      this.selectionIndicators.delete(id);\n    }\n  }\n  \n  clearSelection() {\n    this.selectedObjects.forEach(id => this.deselectObject(id));\n    this.selectedObjects.clear();\n  }\n  \n  deleteSelected() {\n    this.selectedObjects.forEach(id => {\n      this.deleteObject(id);\n      if (this.onObjectDeleted) {\n        this.onObjectDeleted(id);\n      }\n    });\n    this.selectedObjects.clear();\n  }\n  \n  // ==================== Object Management ====================\n\n  loadState(canvasState) {\n    console.error('========================================');\n    console.error('=== LOAD STATE CALLED ===');\n    console.error('========================================');\n    console.error('Canvas state received:', canvasState);\n    console.error('Canvas state type:', typeof canvasState);\n    console.error('Is array?', Array.isArray(canvasState));\n\n    // Clear existing objects\n    console.error('Clearing existing objects...');\n    this.objects.forEach((obj, id) => {\n      this.deleteObject(id);\n    });\n    console.error('Objects cleared. Map size:', this.objects.size);\n\n    // Load objects from state\n    if (canvasState && typeof canvasState === 'object') {\n      // If it's an array, iterate through it\n      if (Array.isArray(canvasState)) {\n        console.error(`=== Loading ${canvasState.length} objects from ARRAY ===`);\n        canvasState.forEach((objData, index) => {\n          console.error(`Loading object ${index}:`, JSON.stringify(objData));\n          this.createRemoteObject(objData);\n        });\n      } else {\n        // If it's an object/hash, iterate through its values\n        const values = Object.values(canvasState);\n        console.error(`=== Loading ${values.length} objects from OBJECT ===`);\n        values.forEach((objData, index) => {\n          console.error(`Loading object ${index}:`, JSON.stringify(objData));\n          this.createRemoteObject(objData);\n        });\n      }\n    } else {\n      console.error('!!! INVALID canvas state !!!:', canvasState);\n    }\n\n    console.error('========================================');\n    console.error(`=== LOAD STATE COMPLETE: ${this.objects.size} objects ===`);\n    console.error('Current objects in map:', Array.from(this.objects.keys()));\n    console.error('========================================');\n  }\n\n  updateObject(id, updates) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    if (updates.x !== undefined) obj.x = updates.x;\n    if (updates.y !== undefined) obj.y = updates.y;\n\n    // For Graphics objects, need to redraw if dimensions change\n    if (obj instanceof PIXI.Graphics) {\n      if (updates.width !== undefined || updates.height !== undefined) {\n        // Recreate the shape - this is simplistic, you might want a better approach\n        console.log('Dimension updates for Graphics require recreation');\n      }\n    }\n  }\n\n  deleteObject(id) {\n    const obj = this.objects.get(id);\n    if (obj) {\n      this.viewport.removeChild(obj);\n      this.objects.delete(id);\n      obj.destroy();\n\n      // Clean up selection indicator if it exists\n      const indicator = this.selectionIndicators.get(id);\n      if (indicator) {\n        this.viewport.removeChild(indicator);\n        indicator.destroy();\n        this.selectionIndicators.delete(id);\n      }\n\n      // Remove from selected objects set\n      this.selectedObjects.delete(id);\n    }\n  }\n\n  // ==================== Remote Object Sync ====================\n\n  createRemoteObject(objData) {\n    console.log('Creating remote object:', objData);\n    console.log('Object properties:', {\n      id: objData.id,\n      type: objData.type,\n      x: objData.x,\n      y: objData.y,\n      width: objData.width,\n      height: objData.height,\n      radius: objData.radius,\n      color: objData.color,\n      colorType: typeof objData.color\n    });\n\n    // Convert color to proper format (ensure it's a number)\n    const color = this.normalizeColor(objData.color);\n    console.log('Normalized color:', color, 'type:', typeof color);\n\n    // Infer type from data if missing (backwards compatibility)\n    let type = objData.type;\n    if (!type) {\n      console.warn('Object missing type field, inferring from properties:', objData);\n      if (objData.radius !== undefined) {\n        type = 'circle';\n      } else if (objData.width !== undefined && objData.height !== undefined) {\n        type = 'rectangle';\n      } else if (objData.text !== undefined) {\n        type = 'text';\n      } else {\n        console.error('Cannot infer type for object:', objData);\n        return;\n      }\n    }\n\n    if (type === 'rectangle') {\n      // Validate dimensions\n      if (!objData.width || !objData.height || objData.width <= 0 || objData.height <= 0) {\n        console.warn('Skipping rectangle with invalid dimensions:', objData);\n        return;\n      }\n\n      console.log('Creating rectangle with:', {\n        id: objData.id,\n        x: objData.x,\n        y: objData.y,\n        width: objData.width,\n        height: objData.height,\n        color: color\n      });\n      this.createRectangle(\n        objData.id,\n        objData.x,\n        objData.y,\n        objData.width,\n        objData.height,\n        color\n      );\n      console.log('Rectangle created successfully. Objects in map:', this.objects.size);\n    } else if (type === 'circle') {\n      console.log('Creating circle with:', {\n        id: objData.id,\n        x: objData.x,\n        y: objData.y,\n        radius: objData.radius,\n        color: color\n      });\n      this.createCircle(\n        objData.id,\n        objData.x,\n        objData.y,\n        objData.radius,\n        color\n      );\n      console.log('Circle created successfully');\n    } else if (type === 'text') {\n      console.log('Creating text with:', {\n        id: objData.id,\n        text: objData.text,\n        x: objData.x,\n        y: objData.y,\n        fontSize: objData.fontSize,\n        color: color\n      });\n      this.createText(\n        objData.id,\n        objData.text,\n        objData.x,\n        objData.y,\n        objData.fontSize,\n        color\n      );\n      console.log('Text created successfully');\n    } else {\n      console.error('Unknown object type:', type);\n    }\n  }\n\n  normalizeColor(color) {\n    // If it's already a number (0xRRGGBB format), return it\n    if (typeof color === 'number') {\n      return color;\n    }\n\n    // If it's a hex string like \"#3498db\", convert to number\n    if (typeof color === 'string') {\n      if (color.startsWith('#')) {\n        return parseInt(color.substring(1), 16);\n      }\n      // If it's a string number like \"3498db\", convert to number\n      return parseInt(color, 16);\n    }\n\n    // Default color if something goes wrong\n    return 0x3498db;\n  }\n\n  updateRemoteObject(objectId, updates) {\n    console.log('Updating remote object:', objectId, updates);\n    this.updateObject(objectId, updates);\n  }\n\n  deleteRemoteObject(objectId) {\n    console.log('Deleting remote object:', objectId);\n    this.deleteObject(objectId);\n  }\n  \n  getObject(id) {\n    return this.objects.get(id);\n  }\n  \n  getAllObjects() {\n    return Array.from(this.objects.entries()).map(([id, obj]) => ({\n      id,\n      type: obj.constructor.name,\n      x: obj.x,\n      y: obj.y\n    }));\n  }\n  \n  // ==================== Remote Cursors ====================\n  \n  updateRemoteCursor(userId, username, x, y, color) {\n    let cursor = this.remoteCursors.get(userId);\n\n    // Convert color string (like \"#FF6B6B\") to number\n    const colorNum = color && typeof color === 'string' && color.startsWith('#')\n      ? parseInt(color.substring(1), 16)\n      : 0xFF6B6B;\n\n    if (!cursor) {\n      // Create new cursor\n      cursor = new PIXI.Container();\n\n      // Cursor pointer (triangle)\n      const pointer = new PIXI.Graphics();\n      pointer.beginFill(colorNum);\n      pointer.moveTo(0, 0);\n      pointer.lineTo(12, 18);\n      pointer.lineTo(6, 18);\n      pointer.lineTo(0, 24);\n      pointer.endFill();\n\n      // Username label\n      const label = new PIXI.Text(username, {\n        fontSize: 12,\n        fill: 0xFFFFFF,\n        backgroundColor: colorNum,\n        padding: 4\n      });\n      label.x = 15;\n      label.y = 0;\n\n      cursor.addChild(pointer);\n      cursor.addChild(label);\n      cursor.zIndex = 1000;\n\n      this.remoteCursors.set(userId, cursor);\n      this.viewport.addChild(cursor);\n    }\n\n    cursor.x = x;\n    cursor.y = y;\n  }\n  \n  removeRemoteCursor(userId) {\n    const cursor = this.remoteCursors.get(userId);\n    if (cursor) {\n      this.viewport.removeChild(cursor);\n      cursor.destroy();\n      this.remoteCursors.delete(userId);\n    }\n  }\n  \n  // ==================== Utilities ====================\n  \n  generateId() {\n    return 'obj-' + Math.random().toString(36).substr(2, 9);\n  }\n  \n  setColor(color) {\n    this.currentColor = color;\n  }\n  \n  getCanvasState() {\n    const objects = [];\n    this.objects.forEach((obj, id) => {\n      // Serialize object data\n      objects.push({\n        id,\n        type: obj.constructor.name,\n        x: obj.x,\n        y: obj.y,\n        // Add more properties as needed\n      });\n    });\n    return { objects };\n  }\n  \n  // Callbacks - set these from outside\n  onObjectCreated = null;\n  onObjectMoved = null;\n  onObjectDeleted = null;\n  onCursorMoved = null;\n}\n","// websocket.js - WebSocket client for real-time synchronization\n\nexport class WebSocketClient {\n    constructor(url, sessionId, canvasId) {\n        this.url = url\n        this.sessionId = sessionId\n        this.canvasId = canvasId\n        this.ws = null\n        this.isConnected = false\n        this.reconnectAttempts = 0\n        this.maxReconnectAttempts = 5\n        this.reconnectDelay = 1000\n\n        // Improved cursor throttling\n        this.lastCursorSend = 0\n        this.cursorSendInterval = 16 // ~60 FPS\n        this.pendingCursor = null\n        this.cursorAnimationFrame = null\n\n        // Callbacks\n        this.onAuthSuccess = () => {}\n        this.onAuthFailed = () => {}\n        this.onUserConnected = () => {}\n        this.onUserDisconnected = () => {}\n        this.onPresenceUpdate = () => {}\n        this.onCursorUpdate = () => {}\n        this.onObjectCreated = () => {}\n        this.onObjectUpdated = () => {}\n        this.onObjectDeleted = () => {}\n        this.onError = () => {}\n        this.onReconnecting = () => {}\n        this.onReconnected = () => {}\n    }\n\n    connect() {\n        console.log(`Connecting to WebSocket: ${this.url}`)\n\n        try {\n            this.ws = new WebSocket(this.url)\n            this.setupEventHandlers()\n        } catch (error) {\n            console.error('WebSocket connection error:', error)\n            this.onError(error)\n            this.scheduleReconnect()\n        }\n    }\n\n    setupEventHandlers() {\n        this.ws.onopen = () => {\n            console.log('WebSocket connected')\n            this.isConnected = true\n            this.reconnectAttempts = 0\n\n            // Send authentication message\n            this.send({\n                type: 'auth',\n                sessionId: this.sessionId,\n                canvasId: this.canvasId\n            })\n\n            if (this.reconnectAttempts > 0) {\n                this.onReconnected()\n            }\n        }\n\n        this.ws.onmessage = (event) => {\n            try {\n                const data = JSON.parse(event.data)\n                this.handleMessage(data)\n            } catch (error) {\n                console.error('Error parsing WebSocket message:', error)\n                this.onError(error)\n            }\n        }\n\n        this.ws.onclose = (event) => {\n            console.log('WebSocket disconnected:', event.code, event.reason)\n            this.isConnected = false\n\n            if (!event.wasClean) {\n                this.scheduleReconnect()\n            }\n        }\n\n        this.ws.onerror = (error) => {\n            console.error('WebSocket error:', error)\n            this.onError(error)\n        }\n    }\n\n    handleMessage(data) {\n        switch (data.type) {\n            case 'auth-success':\n                this.onAuthSuccess(data)\n                break\n\n            case 'auth-failed':\n                this.onAuthFailed(data)\n                break\n\n            case 'user-connected':\n                this.onUserConnected(data)\n                break\n\n            case 'user-disconnected':\n                this.onUserDisconnected(data)\n                break\n\n            case 'presence':\n                this.onPresenceUpdate(data.users)\n                break\n\n            case 'cursor':\n                this.onCursorUpdate(data)\n                break\n\n            case 'object-create':\n                this.onObjectCreated(data)\n                break\n\n            case 'object-update':\n                this.onObjectUpdated(data)\n                break\n\n            case 'object-delete':\n                this.onObjectDeleted(data)\n                break\n\n            case 'error':\n                console.error('Server error:', data.message)\n                this.onError(new Error(data.message))\n                break\n\n            default:\n                console.warn('Unknown message type:', data.type)\n        }\n    }\n\n    send(data) {\n        if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n            this.ws.send(JSON.stringify(data))\n        } else {\n            console.warn('WebSocket not connected, message not sent:', data)\n        }\n    }\n\n    sendCursorUpdate(x, y) {\n        // Store pending cursor position\n        this.pendingCursor = { x, y }\n\n        // If we haven't scheduled a send, schedule one\n        if (!this.cursorAnimationFrame) {\n            this.cursorAnimationFrame = requestAnimationFrame(() => {\n                this.processCursorUpdate()\n            })\n        }\n    }\n\n    processCursorUpdate() {\n        const now = performance.now()\n\n        // Check if enough time has passed since last send\n        if (now - this.lastCursorSend >= this.cursorSendInterval && this.pendingCursor) {\n            this.send({\n                type: 'cursor',\n                x: this.pendingCursor.x,\n                y: this.pendingCursor.y\n            })\n            this.lastCursorSend = now\n            this.pendingCursor = null\n            this.cursorAnimationFrame = null\n        } else if (this.pendingCursor) {\n            // Schedule another check\n            this.cursorAnimationFrame = requestAnimationFrame(() => {\n                this.processCursorUpdate()\n            })\n        } else {\n            this.cursorAnimationFrame = null\n        }\n    }\n\n    sendObjectCreate(object) {\n        this.send({\n            type: 'object-create',\n            object: object\n        })\n    }\n\n    sendObjectUpdate(objectId, updates) {\n        this.send({\n            type: 'object-update',\n            'object-id': objectId,\n            updates: updates\n        })\n    }\n\n    sendObjectDelete(objectId) {\n        this.send({\n            type: 'object-delete',\n            'object-id': objectId\n        })\n    }\n\n    scheduleReconnect() {\n        if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n            console.error('Max reconnection attempts reached')\n            this.onError(new Error('Unable to reconnect to server'))\n            return\n        }\n\n        this.reconnectAttempts++\n        const delay = this.reconnectDelay * Math.pow(2, this.reconnectAttempts - 1)\n\n        console.log(`Attempting to reconnect in ${delay}ms (attempt ${this.reconnectAttempts}/${this.maxReconnectAttempts})`)\n        this.onReconnecting()\n\n        setTimeout(() => {\n            this.connect()\n        }, delay)\n    }\n\n    disconnect() {\n        if (this.ws) {\n            this.ws.close(1000, 'User disconnect')\n            this.ws = null\n            this.isConnected = false\n        }\n    }\n}","// auth.js - Authentication UI and logic for CollabCanvas\n\nexport class AuthManager {\n    constructor() {\n        this.modal = document.getElementById('auth-modal')\n        this.loginForm = document.getElementById('login-form')\n        this.registerForm = document.getElementById('register-form')\n        this.setupEventListeners()\n    }\n\n    setupEventListeners() {\n        // Tab switching\n        document.querySelectorAll('.tab-btn').forEach(btn => {\n            btn.addEventListener('click', () => {\n                const tab = btn.dataset.tab\n                this.switchTab(tab)\n            })\n        })\n\n        // Form submissions\n        this.loginForm.addEventListener('submit', async (e) => {\n            e.preventDefault()\n            await this.handleLogin()\n        })\n\n        this.registerForm.addEventListener('submit', async (e) => {\n            e.preventDefault()\n            await this.handleRegister()\n        })\n    }\n\n    switchTab(tab) {\n        // Update tab buttons\n        document.querySelectorAll('.tab-btn').forEach(btn => {\n            btn.classList.toggle('active', btn.dataset.tab === tab)\n        })\n\n        // Update forms\n        document.querySelectorAll('.auth-form').forEach(form => {\n            form.classList.toggle('active', form.id === `${tab}-form`)\n        })\n\n        // Clear errors\n        document.querySelectorAll('.error-message').forEach(err => {\n            err.textContent = ''\n        })\n    }\n\n    showModal() {\n        return new Promise((resolve) => {\n            this.modal.classList.remove('hidden')\n            this.resolveAuth = resolve\n        })\n    }\n\n    hideModal() {\n        this.modal.classList.add('hidden')\n    }\n\n    async handleLogin() {\n        const email = document.getElementById('login-email').value\n        const password = document.getElementById('login-password').value\n        const errorEl = document.getElementById('login-error')\n\n        try {\n            const response = await fetch('/api/login', {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ email, password })\n            })\n\n            const data = await response.json()\n\n            if (data.success && data.data) {\n                this.hideModal()\n                this.resolveAuth({\n                    sessionId: data.data['session-id'],\n                    userId: data.data['user-id'],\n                    username: data.data.username\n                })\n            } else {\n                errorEl.textContent = data.error || 'Login failed'\n            }\n        } catch (error) {\n            console.error('Login error:', error)\n            errorEl.textContent = 'Connection error. Please try again.'\n        }\n    }\n\n    async handleRegister() {\n        const username = document.getElementById('register-username').value\n        const email = document.getElementById('register-email').value\n        const password = document.getElementById('register-password').value\n        const errorEl = document.getElementById('register-error')\n\n        try {\n            const response = await fetch('/api/register', {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ username, email, password })\n            })\n\n            const data = await response.json()\n\n            if (data.success) {\n                // Auto-login after registration\n                await this.loginAfterRegister(email, password)\n            } else {\n                errorEl.textContent = data.error || 'Registration failed'\n            }\n        } catch (error) {\n            console.error('Registration error:', error)\n            errorEl.textContent = 'Connection error. Please try again.'\n        }\n    }\n\n    async loginAfterRegister(email, password) {\n        // Switch to login tab\n        this.switchTab('login')\n\n        // Fill in credentials\n        document.getElementById('login-email').value = email\n        document.getElementById('login-password').value = password\n\n        // Auto-submit\n        await this.handleLogin()\n    }\n}","// main.js - Application entry point for CollabCanvas\n\nimport './styles.css'\nimport * as PIXI from 'pixi.js'\nimport { CanvasManager } from './canvas.js'\nimport { WebSocketClient } from './websocket.js'\nimport { AuthManager } from './auth.js'\n\nclass CollabCanvas {\n    constructor() {\n        this.canvasManager = null\n        this.wsClient = null\n        this.authManager = null\n        this.sessionId = null\n        this.userId = null\n        this.username = null\n        this.canvasId = this.getCanvasId()\n        this.activeUsers = [] // Track active users\n    }\n\n    getCanvasId() {\n        // Get canvas ID from URL or use default shared canvas\n        const params = new URLSearchParams(window.location.search)\n        let canvasId = params.get('canvas')\n\n        if (!canvasId) {\n            // Use a fixed default canvas so all users join the same one\n            canvasId = 'default-canvas'\n            // Update URL without reload\n            const newUrl = new URL(window.location)\n            newUrl.searchParams.set('canvas', canvasId)\n            window.history.replaceState({}, '', newUrl)\n        }\n\n        return canvasId\n    }\n\n    async init() {\n        console.log('Initializing CollabCanvas...')\n\n        // Update canvas ID in status bar\n        document.getElementById('canvas-id').textContent = this.canvasId\n\n        // Initialize authentication\n        this.authManager = new AuthManager()\n\n        // Check for existing session\n        this.sessionId = localStorage.getItem('sessionId')\n\n        if (this.sessionId) {\n            // Validate session with backend\n            const isValid = await this.validateSession()\n\n            if (!isValid) {\n                this.sessionId = null\n                localStorage.removeItem('sessionId')\n            }\n        }\n\n        if (!this.sessionId) {\n            // Hide loading screen and show auth modal\n            this.hideLoadingScreen()\n            const authData = await this.authManager.showModal()\n            this.sessionId = authData.sessionId\n            this.userId = authData.userId\n            this.username = authData.username\n            localStorage.setItem('sessionId', this.sessionId)\n        }\n\n        // Hide loading screen (session is valid)\n        this.hideLoadingScreen()\n\n        // Initialize canvas\n        this.initCanvas()\n\n        // Initialize WebSocket connection\n        this.initWebSocket()\n\n        // Setup UI event handlers\n        this.setupUIHandlers()\n\n        console.log('CollabCanvas initialized successfully')\n    }\n\n    hideLoadingScreen() {\n        const loadingScreen = document.getElementById('loading-screen')\n        if (loadingScreen) {\n            loadingScreen.classList.add('hidden')\n        }\n    }\n\n    async validateSession() {\n        try {\n            const response = await fetch('/api/session', {\n                credentials: 'include',\n                headers: {\n                    'Authorization': this.sessionId\n                }\n            })\n\n            if (response.ok) {\n                const data = await response.json()\n                if (data.success && data.data && data.data.valid) {\n                    this.userId = data.data['user-id']\n                    this.username = data.data.username\n                    console.log('Session restored:', this.username)\n                    return true\n                }\n            }\n        } catch (error) {\n            console.error('Session validation failed:', error)\n        }\n\n        return false\n    }\n\n    initCanvas() {\n        const container = document.getElementById('canvas-container')\n\n        // Create PixiJS application\n        const app = new PIXI.Application({\n            width: window.innerWidth,\n            height: window.innerHeight,\n            backgroundColor: 0x1a1a1a,\n            resizeTo: window\n        })\n\n        container.appendChild(app.view)\n\n        this.canvasManager = new CanvasManager(app)\n\n        // Set up canvas callbacks for WebSocket synchronization\n        this.canvasManager.onCursorMoved = (x, y) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendCursorUpdate(x, y)\n            }\n        }\n\n        this.canvasManager.onObjectCreated = (object) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectCreate(object)\n            }\n        }\n\n        this.canvasManager.onObjectUpdated = (objectId, updates) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectUpdate(objectId, updates)\n            }\n        }\n\n        this.canvasManager.onObjectDeleted = (objectId) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectDelete(objectId)\n            }\n        }\n\n        // Update status bar callbacks\n        this.canvasManager.onToolChange = (tool) => {\n            document.getElementById('current-tool').textContent =\n                tool.charAt(0).toUpperCase() + tool.slice(1)\n        }\n\n        this.canvasManager.onMouseMove = (x, y) => {\n            document.getElementById('mouse-position').textContent = `${Math.round(x)}, ${Math.round(y)}`\n        }\n\n        this.canvasManager.onZoomChange = (zoom) => {\n            document.getElementById('zoom-level').textContent = `${Math.round(zoom * 100)}%`\n        }\n\n        this.canvasManager.onObjectCountChange = (count) => {\n            document.getElementById('object-count').textContent = count\n        }\n    }\n\n    initWebSocket() {\n        // Use wss:// for HTTPS pages, ws:// for HTTP\n        const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:'\n        // window.location.host includes port if non-standard (e.g., localhost:8080)\n        const wsUrl = `${wsProtocol}//${window.location.host}/ws/${this.canvasId}`\n\n        this.wsClient = new WebSocketClient(wsUrl, this.sessionId, this.canvasId)\n\n        // Set up WebSocket callbacks\n        this.wsClient.onAuthSuccess = (data) => {\n            console.error('=== WebSocket authenticated ===')\n            console.error('Auth data received:', data)\n\n            // Backend sends 'canvas-state' (kebab-case), not 'canvasState'\n            const canvasState = data['canvas-state'] || data.canvasState\n            console.error('canvasState exists?', !!canvasState)\n            console.error('canvasState type:', typeof canvasState)\n            console.error('canvasState length:', canvasState ? canvasState.length : 0)\n\n            // Load initial canvas state\n            if (canvasState) {\n                console.error('=== CALLING loadState ===')\n                this.canvasManager.loadState(canvasState)\n                console.error('=== loadState RETURNED ===')\n            } else {\n                console.error('=== NO CANVAS STATE IN AUTH RESPONSE ===')\n            }\n        }\n\n        this.wsClient.onUserConnected = (data) => {\n            // Add new user to active users list\n            this.activeUsers.push({\n                'user-id': data.userId || data['user-id'],\n                username: data.username,\n                color: data.color\n            })\n            this.updatePresenceList(this.activeUsers)\n            this.showNotification(`${data.username} joined`, 'info')\n        }\n\n        this.wsClient.onUserDisconnected = (data) => {\n            // Remove user from active users list\n            const userId = data.userId || data['user-id']\n            this.activeUsers = this.activeUsers.filter(u =>\n                (u['user-id'] || u.userId) !== userId\n            )\n            this.updatePresenceList(this.activeUsers)\n            this.canvasManager.removeRemoteCursor(userId)\n            this.showNotification(`${data.username} left`, 'info')\n        }\n\n        this.wsClient.onPresenceUpdate = (users) => {\n            // Replace entire active users list with server's authoritative list\n            this.activeUsers = users\n            this.updatePresenceList(this.activeUsers)\n        }\n\n        this.wsClient.onCursorUpdate = (data) => {\n            this.canvasManager.updateRemoteCursor(\n                data.userId,\n                data.username,\n                data.x,\n                data.y,\n                data.color\n            )\n        }\n\n        this.wsClient.onObjectCreated = (data) => {\n            this.canvasManager.createRemoteObject(data.object)\n        }\n\n        this.wsClient.onObjectUpdated = (data) => {\n            // Backend sends 'object-id' (kebab-case)\n            const objectId = data['object-id'] || data.objectId\n            this.canvasManager.updateRemoteObject(objectId, data.updates)\n        }\n\n        this.wsClient.onObjectDeleted = (data) => {\n            // Backend sends 'object-id' (kebab-case)\n            const objectId = data['object-id'] || data.objectId\n            this.canvasManager.deleteRemoteObject(objectId)\n        }\n\n        this.wsClient.onError = (error) => {\n            console.error('WebSocket error:', error)\n            this.showNotification('Connection error', 'error')\n        }\n\n        this.wsClient.onReconnecting = () => {\n            this.showNotification('Reconnecting...', 'warning')\n        }\n\n        this.wsClient.onReconnected = () => {\n            this.showNotification('Reconnected', 'success')\n        }\n\n        // Connect to WebSocket\n        this.wsClient.connect()\n    }\n\n    setupUIHandlers() {\n        // Tool buttons\n        document.querySelectorAll('.tool-btn').forEach(btn => {\n            btn.addEventListener('click', () => {\n                const tool = btn.dataset.tool\n                this.canvasManager.setTool(tool)\n\n                // Update active button\n                document.querySelectorAll('.tool-btn').forEach(b =>\n                    b.classList.remove('active'))\n                btn.classList.add('active')\n            })\n        })\n\n        // Color picker\n        const colorPicker = document.getElementById('color-picker')\n        colorPicker.addEventListener('change', (e) => {\n            this.canvasManager.setColor(e.target.value)\n        })\n\n        // Keyboard shortcuts\n        document.addEventListener('keydown', (e) => {\n            // Prevent shortcuts when typing in inputs\n            if (e.target.tagName === 'INPUT') return\n\n            switch(e.key.toLowerCase()) {\n                case 'v':\n                    this.selectTool('select')\n                    break\n                case 'r':\n                    this.selectTool('rectangle')\n                    break\n                case 'c':\n                    this.selectTool('circle')\n                    break\n                case 'delete':\n                case 'backspace':\n                    if (!e.target.isContentEditable) {\n                        e.preventDefault()\n                        this.canvasManager.deleteSelected()\n                    }\n                    break\n                case 'z':\n                    if (e.ctrlKey || e.metaKey) {\n                        e.preventDefault()\n                        if (e.shiftKey) {\n                            this.canvasManager.redo()\n                        } else {\n                            this.canvasManager.undo()\n                        }\n                    }\n                    break\n            }\n        })\n\n        // Logout button (if added to UI)\n        const logoutBtn = document.getElementById('logout-btn')\n        if (logoutBtn) {\n            logoutBtn.addEventListener('click', async () => {\n                await this.logout()\n            })\n        }\n    }\n\n    selectTool(tool) {\n        this.canvasManager.setTool(tool)\n\n        // Update UI\n        document.querySelectorAll('.tool-btn').forEach(btn => {\n            if (btn.dataset.tool === tool) {\n                btn.classList.add('active')\n            } else {\n                btn.classList.remove('active')\n            }\n        })\n    }\n\n    updatePresenceList(users = []) {\n        const container = document.getElementById('users-container')\n        container.innerHTML = ''\n\n        users.forEach(user => {\n            const userItem = document.createElement('div')\n            userItem.className = 'user-item'\n            // Handle both kebab-case and camelCase keys\n            const username = user.username\n            const color = user.color\n            userItem.innerHTML = `\n                <span class=\"user-indicator\" style=\"background-color: ${color}\"></span>\n                <span>${username}</span>\n            `\n            container.appendChild(userItem)\n        })\n    }\n\n    showNotification(message, type = 'info') {\n        // Simple notification system (can be enhanced with a library)\n        console.log(`[${type.toUpperCase()}] ${message}`)\n\n        // TODO: Implement visual notifications\n    }\n\n    async logout() {\n        try {\n            await fetch('/api/logout', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': this.sessionId\n                }\n            })\n        } catch (error) {\n            console.error('Logout error:', error)\n        }\n\n        // Clean up\n        localStorage.removeItem('sessionId')\n        this.wsClient.disconnect()\n\n        // Reload page to show login\n        window.location.reload()\n    }\n}\n\n// Initialize application when DOM is ready\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n        const app = new CollabCanvas()\n        app.init()\n        window.collabCanvas = app // For debugging\n    })\n} else {\n    const app = new CollabCanvas()\n    app.init()\n    window.collabCanvas = app // For debugging\n}"],"names":["CanvasManager","constructor","app","this","viewport","PIXI.Container","objects","Map","selectedObjects","Set","selectionIndicators","remoteCursors","isPanning","panStart","x","y","currentTool","currentColor","stage","addChild","sortableChildren","drawGrid","setupPanZoom","setupKeyboardShortcuts","setupToolHandlers","console","log","grid","PIXI.Graphics","lineStyle","gridExtent","moveTo","lineTo","zIndex","canvas","view","addEventListener","e","button","altKey","clientX","clientY","style","cursor","preventDefault","dx","dy","zoomFactor","deltaY","mouseX","mouseY","worldPosBefore","screenToWorld","newScale","scale","set","worldPosAfter","passive","screenX","screenY","worldToScreen","worldX","worldY","document","key","setTool","deleteSelected","tool","drawStart","previewShape","worldPos","onCursorMoved","width","height","clear","beginFill","drawRect","radius","Math","sqrt","drawCircle","endFill","alpha","objData","createToolObject","removeChild","onObjectCreated","start","end","id","generateId","abs","min","createRectangle","type","color","createCircle","rect","interactive","buttonMode","userData","makeDraggable","makeSelectable","circle","createText","text","fontSize","textObj","PIXI.Text","fill","fontFamily","obj","dragData","dragOffset","lastDragUpdate","on","event","data","dragging","cursorPos","getLocalPosition","parent","stopPropagation","onObjectUpdated","newPosition","now","performance","originalEvent","shiftKey","has","deselectObject","selectObject","clearSelection","get","add","existingIndicator","destroy","indicator","delete","forEach","deleteObject","onObjectDeleted","loadState","canvasState","error","Array","isArray","size","length","index","JSON","stringify","createRemoteObject","values","Object","from","keys","updateObject","updates","undefined","colorType","normalizeColor","warn","startsWith","parseInt","substring","updateRemoteObject","objectId","deleteRemoteObject","getObject","getAllObjects","entries","map","name","updateRemoteCursor","userId","username","colorNum","pointer","label","backgroundColor","padding","removeRemoteCursor","random","toString","substr","setColor","getCanvasState","push","onObjectMoved","WebSocketClient","url","sessionId","canvasId","ws","isConnected","reconnectAttempts","maxReconnectAttempts","reconnectDelay","lastCursorSend","cursorSendInterval","pendingCursor","cursorAnimationFrame","onAuthSuccess","onAuthFailed","onUserConnected","onUserDisconnected","onPresenceUpdate","onCursorUpdate","onError","onReconnecting","onReconnected","connect","WebSocket","setupEventHandlers","scheduleReconnect","onopen","send","onmessage","parse","handleMessage","onclose","code","reason","wasClean","onerror","users","message","Error","readyState","OPEN","sendCursorUpdate","requestAnimationFrame","processCursorUpdate","sendObjectCreate","object","sendObjectUpdate","sendObjectDelete","delay","pow","setTimeout","disconnect","close","AuthManager","modal","getElementById","loginForm","registerForm","setupEventListeners","querySelectorAll","btn","tab","dataset","switchTab","async","handleLogin","handleRegister","classList","toggle","form","err","textContent","showModal","Promise","resolve","remove","resolveAuth","hideModal","email","value","password","errorEl","response","fetch","method","credentials","headers","body","json","success","loginAfterRegister","CollabCanvas","canvasManager","wsClient","authManager","getCanvasId","activeUsers","URLSearchParams","window","location","search","newUrl","URL","searchParams","history","replaceState","init","localStorage","getItem","validateSession","removeItem","hideLoadingScreen","authData","setItem","initCanvas","initWebSocket","setupUIHandlers","loadingScreen","Authorization","ok","valid","container","PIXI.Application","innerWidth","innerHeight","resizeTo","appendChild","onToolChange","charAt","toUpperCase","slice","onMouseMove","round","onZoomChange","zoom","onObjectCountChange","count","wsUrl","protocol","host","updatePresenceList","showNotification","filter","u","b","target","tagName","toLowerCase","selectTool","isContentEditable","ctrlKey","metaKey","redo","undo","logoutBtn","logout","innerHTML","user","userItem","createElement","className","reload","collabCanvas"],"mappings":"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"}
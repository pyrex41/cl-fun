System.register(["./pixi-legacy-CZ6miFXY.js"],function(e,t){"use strict";var s,i,o,n,r,a,c,l,h;return{setters:[e=>{s=e.e,i=e.b,o=e.C,n=e.G,r=e.S,a=e.T,c=e.c,l=e.d,h=e.f}],execute:function(){var e=document.createElement("style");e.textContent="#canvas-wrapper{transition:background-color .3s ease}#canvas-wrapper canvas{transition:filter .3s ease}:root[data-theme=dark] #canvas-wrapper{background-color:#16161f}:root[data-theme=dark] #canvas-wrapper canvas{filter:brightness(1)}:root[data-theme=light] #canvas-wrapper{background-color:#fff}:root[data-theme=light] #canvas-wrapper canvas{filter:brightness(1.05)}.remote-cursor{position:absolute;pointer-events:none;z-index:1000;transition:left .1s ease-out,top .1s ease-out;filter:drop-shadow(0 2px 8px rgba(0,0,0,.3))}.remote-cursor-pointer{width:0;height:0;border-left:8px solid transparent;border-right:8px solid transparent;border-top:22px solid;transform:rotate(-45deg);transform-origin:center top}.remote-cursor-label{position:absolute;top:22px;left:12px;padding:4px 10px;background:rgba(0,0,0,.85);backdrop-filter:blur(8px);-webkit-backdrop-filter:blur(8px);color:#fff;font-size:12px;font-weight:600;border-radius:6px;white-space:nowrap;user-select:none;box-shadow:0 2px 8px rgba(0,0,0,.3);letter-spacing:.3px}.selection-box{position:absolute;border:2px solid #8b5cf6;background:rgba(139,92,246,.08);pointer-events:none;z-index:999;border-radius:2px;box-shadow:0 0 0 1px rgba(139,92,246,.2),0 4px 12px rgba(139,92,246,.15)}.resize-handle{position:absolute;width:10px;height:10px;background:#fff;border:2px solid #8b5cf6;border-radius:3px;box-shadow:0 2px 6px rgba(0,0,0,.3),0 0 0 1px rgba(139,92,246,.2);transition:all .15s ease}.resize-handle:hover{transform:scale(1.2);background:#8b5cf6;box-shadow:0 3px 10px rgba(139,92,246,.4),0 0 0 2px rgba(139,92,246,.3)}.resize-handle.nw{cursor:nw-resize;top:-6px;left:-6px}.resize-handle.ne{cursor:ne-resize;top:-6px;right:-6px}.resize-handle.sw{cursor:sw-resize;bottom:-6px;left:-6px}.resize-handle.se{cursor:se-resize;bottom:-6px;right:-6px}.resize-handle.n{cursor:n-resize;top:-6px;left:50%;transform:translate(-50%)}.resize-handle.s{cursor:s-resize;bottom:-6px;left:50%;transform:translate(-50%)}.resize-handle.w{cursor:w-resize;left:-6px;top:50%;transform:translateY(-50%)}.resize-handle.e{cursor:e-resize;right:-6px;top:50%;transform:translateY(-50%)}.resize-handle.n:hover,.resize-handle.s:hover{transform:translate(-50%) scale(1.2)}.resize-handle.w:hover,.resize-handle.e:hover{transform:translateY(-50%) scale(1.2)}.notification{position:fixed;bottom:24px;right:24px;padding:14px 20px;border-radius:12px;color:#fff;font-size:14px;font-weight:500;z-index:10000;backdrop-filter:blur(20px) saturate(180%);-webkit-backdrop-filter:blur(20px) saturate(180%);border:1px solid rgba(255,255,255,.1);box-shadow:0 8px 32px rgba(0,0,0,.4),0 2px 8px rgba(0,0,0,.2);animation:slideIn .3s cubic-bezier(.4,0,.2,1)}@keyframes slideIn{0%{transform:translate(100%);opacity:0}to{transform:translate(0);opacity:1}}.notification.info{background:rgba(99,102,241,.9)}.notification.success{background:rgba(34,197,94,.9)}.notification.warning{background:rgba(251,146,60,.9)}.notification.error{background:rgba(239,68,68,.9)}.loading-spinner{border:3px solid rgba(139,92,246,.2);border-radius:50%;border-top:3px solid #8b5cf6;border-right:3px solid #6366f1;width:24px;height:24px;animation:spin .8s linear infinite}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}@media (max-width: 1024px){#left-sidebar{width:60px}#right-sidebar{width:280px}.tool-btn,#color-picker,#theme-toggle{width:40px;height:40px;font-size:18px}.user-avatar{width:32px;height:32px;font-size:12px}.sidebar-section{padding:16px}.section-title{font-size:10px;margin-bottom:12px}}@media (max-width: 768px){#left-sidebar{width:56px;padding:12px 0}#right-sidebar{position:fixed;right:-320px;top:0;height:100%;transition:right .3s ease;z-index:200}#right-sidebar.open{right:0}.tool-btn,#color-picker,#theme-toggle{width:36px;height:36px;font-size:16px}.user-avatar{width:28px;height:28px;font-size:11px}.info-grid{grid-template-columns:1fr}.notification{bottom:16px;right:16px;font-size:13px;padding:12px 16px}}:root[data-theme=light] .resize-handle{background:#fff;border-color:#8b5cf6;box-shadow:0 2px 6px rgba(0,0,0,.15),0 0 0 1px rgba(139,92,246,.3)}:root[data-theme=light] .selection-box{background:rgba(139,92,246,.12)}:root[data-theme=light] .remote-cursor-label{background:rgba(0,0,0,.9)}@media print{#left-sidebar,#right-sidebar,#auth-modal,.notification{display:none!important}body,#canvas-wrapper{background:#fff}}@media (prefers-contrast: high){.tool-btn{border-width:2px}.tool-btn.active{border-width:3px}#left-sidebar,#right-sidebar,.info-item,.object-item{border-width:2px}}@media (prefers-reduced-motion: reduce){*,*:before,*:after{animation-duration:.01ms!important;animation-iteration-count:1!important;transition-duration:.01ms!important}.user-avatar:after{animation:none}}\n/*$vite$:1*/",document.head.appendChild(e);const t=.02;class d{constructor(e){this.id=e.id,this.type=e.type,this.x=e.x,this.y=e.y,this.oldX=e.oldX||e.x,this.oldY=e.oldY||e.y,this.vx=e.vx||0,this.vy=e.vy||0,this.ax=e.ax||0,this.ay=e.ay||0,this.radius=e.radius,this.width=e.width,this.height=e.height,this.mass=e.mass,this.isDynamic=void 0===e.isDynamic||e.isDynamic,this.restitution=e.restitution||.7,this.friction=e.friction||.02,this.color=e.color||"#3498db"}}class u{constructor(){this.objects=new Map,this.globalGravity=9.8,this.paused=!0,this.boundaryMode="contain"}createCircle(e,t,s,i,o={}){const n=void 0===o.isDynamic||o.isDynamic,r=o.color||"#3498db",a=this.calculateMassFromRadius(i),c=new d({id:e,type:"circle",x:t,y:s,oldX:t,oldY:s,vx:0,vy:0,ax:0,ay:0,radius:i,mass:a,isDynamic:n,restitution:.7,friction:.02,color:r});return this.objects.set(e,c),c}createRectangle(e,t,s,i,o,n={}){const r=n.color||"#95a5a6",a=new d({id:e,type:"rectangle",x:t,y:s,oldX:t,oldY:s,vx:0,vy:0,ax:0,ay:0,width:i,height:o,mass:0,isDynamic:!1,restitution:.8,friction:.1,color:r});return this.objects.set(e,a),a}removeObject(e){return this.objects.delete(e)}getObject(e){return this.objects.get(e)}clearAll(){this.objects.clear()}calculateMassFromRadius(e){return Math.PI*e*e}integrateVerlet(e,t){if(!e.isDynamic)return;const s=t*t;let i=e.x-e.oldX,o=e.y-e.oldY;const n=1-e.friction;i*=n,o*=n;const r=e.x+i+e.ax*s,a=e.y+o+e.ay*s;e.oldX=e.x,e.oldY=e.y,e.x=r,e.y=a,e.vx=i/t,e.vy=o/t,e.ax=0,e.ay=0}applyGravity(e){e.isDynamic&&(e.ay+=this.globalGravity)}applyForce(e,t,s){e.isDynamic&&e.mass>0&&(e.ax+=t/e.mass,e.ay+=s/e.mass)}applyBoundaryConstraints(e){if(e.isDynamic&&"circle"===e.type){const t=e.radius,s=e.restitution;if(e.x<t){e.x=t;const i=e.x-e.oldX;e.oldX=e.x+i*s}if(e.x>4e3-t){e.x=4e3-t;const i=e.x-e.oldX;e.oldX=e.x+i*s}if(e.y<t){e.y=t;const i=e.y-e.oldY;e.oldY=e.y+i*s}if(e.y>3e3-t){e.y=3e3-t;const i=e.y-e.oldY;e.oldY=e.y+i*s}}}checkCircleCircleCollision(e,t){const s=t.x-e.x,i=t.y-e.y,o=s*s+i*i,n=e.radius+t.radius;if(o<n*n){const r=Math.sqrt(o),a=n-r,c=s/r,l=i/r,h=e.mass+t.mass,d=h>0?t.mass/h:.5,u=h>0?e.mass/h:.5;e.isDynamic&&(e.x-=a*c*d,e.y-=a*l*d),t.isDynamic&&(t.x+=a*c*u,t.y+=a*l*u);const g=Math.min(e.restitution,t.restitution);if(e.isDynamic&&t.isDynamic){const s=e.x-e.oldX,i=e.y-e.oldY,o=(s-(t.x-t.oldX))*c+(i-(t.y-t.oldY))*l;if(o<0){const s=(1-g)*o;e.oldX-=s*c*d,e.oldY-=s*l*d,t.oldX+=s*c*u,t.oldY+=s*l*u}}return!0}return!1}checkCircleRectangleCollision(e,t){const s=e.x,i=e.y,o=e.radius,n=t.x,r=t.y,a=t.width,c=t.height,l=s-Math.max(n,Math.min(s,n+a)),h=i-Math.max(r,Math.min(i,r+c)),d=l*l+h*h;if(d<o*o){const t=Math.sqrt(d),s=o-t,i=t>0?l/t:0,n=t>0?h/t:-1,r=e.restitution;if(e.isDynamic){e.x+=s*i,e.y+=s*n;const t=e.x-e.oldX,o=e.y-e.oldY,a=2*(t*i+o*n);e.oldX=e.x-(t-a*i)*r,e.oldY=e.y-(o-a*n)*r}return!0}return!1}resolveAllCollisions(){const e=Array.from(this.objects.values());let t=0;for(let s=0;s<e.length;s++)for(let i=s+1;i<e.length;i++){const o=e[s],n=e[i];"circle"===o.type&&"circle"===n.type&&(o.isDynamic||n.isDynamic)&&this.checkCircleCircleCollision(o,n)&&t++}for(const s of e)if("circle"===s.type&&s.isDynamic)for(const i of e)"rectangle"===i.type&&this.checkCircleRectangleCollision(s,i)&&t++;return t}step(){if(!this.paused){for(const e of this.objects.values())this.applyGravity(e);for(const e of this.objects.values())this.integrateVerlet(e,.02);for(const e of this.objects.values())this.applyBoundaryConstraints(e);for(let e=0;e<3;e++)this.resolveAllCollisions()}}getStateSnapshot(){const e=[];for(const t of this.objects.values())t.isDynamic&&e.push({id:t.id,x:t.x,y:t.y,rotation:0});return e}setGlobalGravity(e){this.globalGravity=e}pause(){this.paused=!0}resume(){this.paused=!1}reset(){this.pause(),this.clearAll()}isPaused(){return this.paused}syncCanvasObject(e){const t=e.id,s=e.type,i=e.x,o=e.y,n=e.color,r=e.isDynamic;if("circle"===s){const s=e.radius;this.getObject(t)||this.createCircle(t,i,o,s,{isDynamic:void 0===r||r,color:n||"#3498db"})}else if("rectangle"===s){const s=e.width,r=e.height;this.getObject(t)||this.createRectangle(t,i,o,s,r,{color:n||"#95a5a6"})}}updateObjectPosition(e,t,s){const i=this.getObject(e);i&&(i.x=t,i.y=s,i.oldX=t,i.oldY=s,i.vx=0,i.vy=0)}}try{s&&i&&(s.add(i),console.log("CullerPlugin registered successfully"))}catch(w){console.log("CullerPlugin not available, using custom culling implementation")}class g{constructor(e,t){this.app=e,this.canvasManager=t,this.fpsHistory=[],this.maxHistorySize=60,this.currentFps=60,this.lastTime=performance.now(),this.frameCount=0,this.app.ticker.add(this.update.bind(this)),console.log("PerformanceMonitor initialized")}update(e){const t=performance.now(),s=t-this.lastTime;if(s>0&&(this.currentFps=Math.round(1e3/s)),this.lastTime=t,this.fpsHistory.push(this.currentFps),this.fpsHistory.length>this.maxHistorySize&&this.fpsHistory.shift(),this.currentFps<55){const e=this.getAverageFps(),t=this.canvasManager?this.canvasManager.objects.size:0;console.warn(`⚠️ Low FPS detected: ${this.currentFps} FPS (avg: ${e.toFixed(1)}, objects: ${t})`)}}getAverageFps(){return 0===this.fpsHistory.length?60:this.fpsHistory.reduce((e,t)=>e+t,0)/this.fpsHistory.length}getStats(){return 0===this.fpsHistory.length?{current:this.currentFps,average:60,min:60,max:60}:{current:this.currentFps,average:Math.round(10*this.getAverageFps())/10,min:Math.min(...this.fpsHistory),max:Math.max(...this.fpsHistory)}}destroy(){this.app&&this.app.ticker&&this.app.ticker.remove(this.update.bind(this))}}class p{constructor(e){this.app=e,this.viewport=new o,this.objects=new Map,this.selectedObjects=new Set,this.selectionIndicators=new Map,this.remoteCursors=new Map,this.isPanning=!1,this.panStart={x:0,y:0},this.currentTool="select",this.currentColor=3447003,this.isDragging=!1,this.draggedObject=null,this.draggedObjectId=null,this.dragOffset={x:0,y:0},this.lastDragUpdate=0,this.cullingEnabled=!0,this.cullingPadding=200,this.lastViewportBounds=null,this.performanceMonitor=new g(e,this),this.cursorTexture=this.createSharedCursorTexture(),this.physicsEngine=new u,this.physicsEngine.pause(),this.physicsEnabled=!1,this.lastPhysicsUpdate=0,this.physicsAccumulator=0,this.reconciliationLerpFactor=.3,this.lastServerSnapshot=null,this.serverSnapshotTime=0,this.app.stage.addChild(this.viewport),this.viewport.sortableChildren=!0,this.viewport.cullable=!0,this.drawGrid(),this.setupPanZoom(),this.setupCentralizedDrag(),this.setupKeyboardShortcuts(),this.setupToolHandlers(),this.setupViewportCulling(),console.log("Canvas initialized")}createSharedCursorTexture(){const e=new n;e.poly([{x:0,y:0},{x:12,y:18},{x:6,y:18},{x:0,y:24}]).fill(16777215);const t=this.app.renderer.generateTexture(e,{resolution:1,scaleMode:r.LINEAR});return e.destroy(),t}drawGrid(){const e=new n;e.roundPixels=!1;const t=5e3;for(let s=-5e3;s<=t;s+=50)e.moveTo(s,-5e3),e.lineTo(s,t);for(let s=-5e3;s<=t;s+=50)e.moveTo(-5e3,s),e.lineTo(t,s);e.stroke({width:1,color:3355443,alpha:.3}),e.zIndex=-1,e.interactive=!1,e.interactiveChildren=!1,this.viewport.addChild(e)}setupPanZoom(){const e=this.app.canvas;e.addEventListener("mousedown",t=>{(1===t.button||0===t.button&&t.altKey)&&(this.isPanning=!0,this.panStart={x:t.clientX,y:t.clientY},e.style.cursor="grabbing",t.preventDefault())}),e.addEventListener("mousemove",e=>{if(this.isPanning){const t=e.clientX-this.panStart.x,s=e.clientY-this.panStart.y;this.viewport.x+=t,this.viewport.y+=s,this.panStart={x:e.clientX,y:e.clientY}}}),e.addEventListener("mouseup",()=>{this.isPanning&&(this.isPanning=!1,e.style.cursor="default")}),e.addEventListener("wheel",e=>{e.preventDefault();const t=e.deltaY>0?.9:1.1,s=e.clientX,i=e.clientY,o=this.screenToWorld(s,i),n=this.viewport.scale.x*t;if(n>=.1&&n<=10){this.viewport.scale.set(n);const e=this.screenToWorld(s,i);this.viewport.x+=(e.x-o.x)*this.viewport.scale.x,this.viewport.y+=(e.y-o.y)*this.viewport.scale.y}},{passive:!1})}setupCentralizedDrag(){const e=this.app.canvas;e.addEventListener("mousemove",e=>{if(this.isDragging&&this.draggedObject){const t=this.screenToWorld(e.clientX,e.clientY);this.draggedObject.x=t.x-this.dragOffset.x,this.draggedObject.y=t.y-this.dragOffset.y;const s=performance.now();s-this.lastDragUpdate>=16&&(this.onObjectUpdated&&this.onObjectUpdated(this.draggedObjectId,{x:this.draggedObject.x,y:this.draggedObject.y}),this.lastDragUpdate=s)}}),e.addEventListener("mouseup",()=>{this.isDragging&&this.draggedObject&&(this.draggedObject.alpha=1,this.onObjectUpdated&&this.onObjectUpdated(this.draggedObjectId,{x:this.draggedObject.x,y:this.draggedObject.y}),this.isDragging=!1,this.draggedObject=null,this.draggedObjectId=null)})}screenToWorld(e,t){return{x:(e-this.viewport.x)/this.viewport.scale.x,y:(t-this.viewport.y)/this.viewport.scale.y}}worldToScreen(e,t){return{x:e*this.viewport.scale.x+this.viewport.x,y:t*this.viewport.scale.y+this.viewport.y}}setupKeyboardShortcuts(){document.addEventListener("keydown",e=>{"r"===e.key||"R"===e.key?this.setTool("rectangle"):"c"===e.key||"C"===e.key?this.setTool("circle"):"e"===e.key||"E"===e.key?this.setTool("emitter"):"t"===e.key||"T"===e.key?this.setTool("text"):"v"===e.key||"V"===e.key||"Escape"===e.key?this.setTool("select"):"Delete"!==e.key&&"Backspace"!==e.key||this.deleteSelected()})}setTool(e){this.currentTool=e,console.log("Tool:",e)}setupToolHandlers(){const e=this.app.canvas;let t=null,s=null,i=0,o=!1;e.addEventListener("mousemove",e=>{const n=this.screenToWorld(e.clientX,e.clientY);this.onCursorMoved&&this.onCursorMoved(n.x,n.y),t&&s&&!o&&(o=!0,requestAnimationFrame(()=>{const n=performance.now();if(n-i>=16){const o=this.screenToWorld(e.clientX,e.clientY),r=o.x-t.x,a=o.y-t.y;if(s.clear(),"rectangle"===this.currentTool)s.rect(t.x,t.y,r,a).fill(this.currentColor);else if("circle"===this.currentTool){const e=Math.sqrt(r*r+a*a);s.circle(t.x,t.y,e).fill(this.currentColor)}i=n}o=!1}))}),e.addEventListener("mousedown",e=>{if(0!==e.button||e.altKey)return;const i=this.screenToWorld(e.clientX,e.clientY);if("rectangle"===this.currentTool||"circle"===this.currentTool)t=i,s=new n,s.alpha=.5,s.roundPixels=!1,this.viewport.addChild(s);else if("emitter"===this.currentTool){const e=this.createToolObject(i,i);this.onObjectCreated&&this.onObjectCreated(e)}}),e.addEventListener("mouseup",e=>{if(t&&s){const i=this.screenToWorld(e.clientX,e.clientY),o=this.createToolObject(t,i);this.viewport.removeChild(s),s=null,t=null,this.onObjectCreated&&this.onObjectCreated(o)}})}setupViewportCulling(){this.app.ticker.add(()=>{this.cullingEnabled&&this.updateVisibleObjects()}),this.app.ticker.add(e=>{this.physicsEnabled&&!this.physicsEngine.isPaused()&&this.updatePhysicsPrediction(e)})}updateVisibleObjects(){const e=this.getViewportBounds();(!this.lastViewportBounds||Math.abs(e.left-this.lastViewportBounds.left)>50||Math.abs(e.top-this.lastViewportBounds.top)>50||Math.abs(e.right-this.lastViewportBounds.right)>50||Math.abs(e.bottom-this.lastViewportBounds.bottom)>50)&&(this.lastViewportBounds=e,this.objects.forEach((t,s)=>{const i=this.getObjectBounds(t),o=this.isBoundsVisible(i,e);t.visible!==o&&(t.visible=o)}))}getViewportBounds(){const e=this.app.renderer.width,t=this.app.renderer.height,s=this.screenToWorld(0,0),i=this.screenToWorld(e,t);return{left:s.x-this.cullingPadding,top:s.y-this.cullingPadding,right:i.x+this.cullingPadding,bottom:i.y+this.cullingPadding}}getObjectBounds(e){if(e.userData){if("rectangle"===e.userData.type)return{left:e.x,top:e.y,right:e.x+e.userData.width,bottom:e.y+e.userData.height};if("circle"===e.userData.type){const t=e.userData.radius;return{left:e.x-t,top:e.y-t,right:e.x+t,bottom:e.y+t}}}return e.width&&e.height?{left:e.x,top:e.y,right:e.x+e.width,bottom:e.y+e.height}:{left:e.x,top:e.y,right:e.x,bottom:e.y}}isBoundsVisible(e,t){return!(e.right<t.left||e.left>t.right||e.bottom<t.top||e.top>t.bottom)}updatePhysicsPrediction(e){const s=e/60;for(this.physicsAccumulator+=s;this.physicsAccumulator>=t;)this.physicsEngine.step(),this.physicsAccumulator-=t;this.syncVisualFromPhysics()}syncVisualFromPhysics(){for(const[e,t]of this.physicsEngine.objects){const s=this.objects.get(e);s&&t.isDynamic&&(s.x=t.x,s.y=t.y)}}handlePhysicsSnapshot(e){this.physicsEnabled&&(this.lastServerSnapshot=e,this.serverSnapshotTime=performance.now(),e.forEach(e=>{const t=e.id,s=this.physicsEngine.getObject(t),i=this.objects.get(t);if(!s||!i)return void(i&&this.syncObjectToPhysics(t));if(!s.isDynamic)return;const o=e.x-s.x,n=e.y-s.y,r=Math.sqrt(o*o+n*n);if(r>100)console.warn(`Large divergence detected for ${t}: ${r.toFixed(2)}px - snapping`),s.x=e.x,s.y=e.y,s.oldX=e.x,s.oldY=e.y,i.x=e.x,i.y=e.y;else if(r>1){const e=s.x+o*this.reconciliationLerpFactor,t=s.y+n*this.reconciliationLerpFactor;s.x=e,s.y=t;const r=s.x-s.oldX,a=s.y-s.oldY;s.oldX=e-r,s.oldY=t-a,i.x=e,i.y=t}}))}syncObjectToPhysics(e){const t=this.objects.get(e);if(!t||!t.userData)return;const s={id:e,type:t.userData.type,x:t.x,y:t.y,color:this.colorToHexString(t.tint||3447003),isDynamic:void 0!==t.userData.isDynamic?t.userData.isDynamic:"circle"===t.userData.type};"circle"===t.userData.type?s.radius=t.userData.radius:"rectangle"===t.userData.type&&(s.width=t.userData.width,s.height=t.userData.height),this.physicsEngine.syncCanvasObject(s)}enablePhysics(){this.physicsEnabled||(console.log("Enabling physics simulation..."),this.physicsEnabled=!0,this.objects.forEach((e,t)=>{this.syncObjectToPhysics(t)}),this.physicsEngine.resume(),console.log(`Physics enabled with ${this.physicsEngine.objects.size} objects`))}disablePhysics(){this.physicsEnabled&&(console.log("Disabling physics simulation..."),this.physicsEnabled=!1,this.physicsEngine.pause())}setGravity(e){this.physicsEngine.setGlobalGravity(e),console.log(`Gravity set to: ${e}`)}createToolObject(e,t){const s=this.generateId();if("rectangle"===this.currentTool){const i=Math.abs(t.x-e.x),o=Math.abs(t.y-e.y),n=Math.min(e.x,t.x),r=Math.min(e.y,t.y);return this.createRectangle(s,n,r,i,o,this.currentColor),{id:s,type:"rectangle",x:n,y:r,width:i,height:o,color:this.colorToHexString(this.currentColor),isDynamic:!1,friction:.02,restitution:.7}}if("circle"===this.currentTool){const i=t.x-e.x,o=t.y-e.y,n=Math.sqrt(i*i+o*o);return this.createCircle(s,e.x,e.y,n,this.currentColor),{id:s,type:"circle",x:e.x,y:e.y,radius:n,color:this.colorToHexString(this.currentColor),isDynamic:!0,friction:.02,restitution:.7}}}createRectangle(e,t,s,i,o,r){const a=new n;return a.rect(0,0,i,o).fill(r),a.x=t,a.y=s,a.interactive=!0,a.cursor="pointer",a.visible=!0,a.roundPixels=!1,a.userData={width:i,height:o,type:"rectangle",isDynamic:!1},this.makeDraggable(a,e),this.makeSelectable(a,e),this.objects.set(e,a),this.viewport.addChild(a),this.physicsEnabled&&this.syncObjectToPhysics(e),a}createCircle(e,t,s,i,o){const r=new n;return r.circle(0,0,i).fill(o),r.x=t,r.y=s,r.interactive=!0,r.cursor="pointer",r.visible=!0,r.roundPixels=!1,r.userData={radius:i,type:"circle",isDynamic:!0},this.makeDraggable(r,e),this.makeSelectable(r,e),this.objects.set(e,r),this.viewport.addChild(r),this.physicsEnabled&&this.syncObjectToPhysics(e),r}createEmitter(e,t,s,i,r,a,c,l){const h=new o;h.x=t,h.y=s,h.interactive=!0,h.cursor="pointer",h.visible=!0;const d=new n,u=[];for(let o=0;o<16;o++){const e=o*Math.PI/8,t=o%2==0?20:10;u.push({x:Math.cos(e)*t,y:Math.sin(e)*t})}d.poly(u).fill(l),d.circle(0,0,5).fill(16777215),d.roundPixels=!1;let g=0;const p=e=>{g+=.05*e;const t=1+.1*Math.sin(g);d.scale.set(t)};return h.addChild(d),h.userData={type:"emitter",rate:i,lifespan:r,particleSize:a,initialVelocity:c,pulseAnimation:p,isDynamic:!1},this.app.ticker.add(p),this.makeDraggable(h,e),this.makeSelectable(h,e),this.objects.set(e,h),this.viewport.addChild(h),h}createText(e,t,s,i,o,n){const r=new a(t,{fontSize:o,fill:n,fontFamily:"Arial"});return r.x=s,r.y=i,r.interactive=!0,r.buttonMode=!0,r.visible=!0,this.makeDraggable(r,e),this.makeSelectable(r,e),this.objects.set(e,r),this.viewport.addChild(r),r}makeDraggable(e,t){e.on("pointerdown",s=>{if("select"!==this.currentTool)return;const i=this.screenToWorld(s.data.global.x,s.data.global.y);this.isDragging=!0,this.draggedObject=e,this.draggedObjectId=t,this.dragOffset.x=i.x-e.x,this.dragOffset.y=i.y-e.y,e.alpha=.7,s.stopPropagation()})}makeSelectable(e,t){e.on("click",e=>{"select"===this.currentTool&&(e.data.originalEvent.shiftKey?this.selectedObjects.has(t)?this.deselectObject(t):this.selectObject(t):(this.clearSelection(),this.selectObject(t)),e.stopPropagation())})}selectObject(e){const t=this.objects.get(e);if(!t)return;this.selectedObjects.add(e),this.onSelectionChange&&this.onSelectionChange(this.selectedObjects);const s=this.selectionIndicators.get(e);s&&(this.viewport.removeChild(s),s.destroy());const i=new n;if(i.roundPixels=!1,t.userData)if("rectangle"===t.userData.type){const{width:e,height:s}=t.userData;i.rect(-2,-2,e+4,s+4).stroke({width:2,color:65280,alignment:.5}),i.x=t.x,i.y=t.y}else if("circle"===t.userData.type){const{radius:e}=t.userData;i.circle(0,0,e+2).stroke({width:2,color:65280,alignment:.5}),i.x=t.x,i.y=t.y}i.interactive=!1,i.interactiveChildren=!1,this.viewport.addChild(i),this.selectionIndicators.set(e,i)}deselectObject(e){if(!this.objects.get(e))return;this.selectedObjects.delete(e),this.onSelectionChange&&this.onSelectionChange(this.selectedObjects);const t=this.selectionIndicators.get(e);t&&(this.viewport.removeChild(t),t.destroy(),this.selectionIndicators.delete(e))}clearSelection(){this.selectedObjects.forEach(e=>this.deselectObject(e)),this.selectedObjects.clear(),this.onSelectionChange&&this.onSelectionChange(this.selectedObjects)}deleteSelected(){if(0===this.selectedObjects.size)return;const e=Array.from(this.selectedObjects),t=this.deleteObjects(e);this.selectedObjects.clear(),this.onObjectsDeleted&&t.length>0&&this.onObjectsDeleted(t),console.log(`Deleted ${t.length} selected objects`)}loadState(e){if(console.error("========================================"),console.error("=== LOAD STATE CALLED ==="),console.error("========================================"),console.error("Canvas state received:",e),console.error("Canvas state type:",typeof e),console.error("Is array?",Array.isArray(e)),console.error("Clearing existing objects..."),this.objects.forEach((e,t)=>{this.deleteObject(t)}),console.error("Objects cleared. Map size:",this.objects.size),e&&"object"==typeof e)if(Array.isArray(e))console.error(`=== Loading ${e.length} objects from ARRAY ===`),e.forEach((e,t)=>{console.error(`Loading object ${t}:`,JSON.stringify(e)),this.createRemoteObject(e)});else{const t=Object.values(e);console.error(`=== Loading ${t.length} objects from OBJECT ===`),t.forEach((e,t)=>{console.error(`Loading object ${t}:`,JSON.stringify(e)),this.createRemoteObject(e)})}else console.error("!!! INVALID canvas state !!!:",e);console.error("========================================"),console.error(`=== LOAD STATE COMPLETE: ${this.objects.size} objects ===`),console.error("Current objects in map:",Array.from(this.objects.keys())),console.error("========================================"),this.cullingEnabled&&this.updateVisibleObjects()}applyDelta(e,t){const s=this.objects.get(e);if(s){for(const[e,i]of Object.entries(t))"x"!==e&&"y"!==e||(s[e]=i);void 0!==t.isDynamic&&s.userData&&(s.userData.isDynamic=t.isDynamic),void 0!==t.friction&&s.userData&&(s.userData.friction=t.friction),void 0!==t.restitution&&s.userData&&(s.userData.restitution=t.restitution),s instanceof n&&(void 0===t.width&&void 0===t.height&&void 0===t.color&&void 0===t.rotation||this.redrawGraphicsObject(s)),!this.physicsEnabled||void 0===t.isDynamic&&void 0===t.friction&&void 0===t.restitution||this.syncObjectToPhysics(e)}}redrawGraphicsObject(e){e.clear(),e.width&&e.height&&e.rect(0,0,e.width,e.height).fill(e.color||16711680),e.rotation&&(e.rotation=e.rotation)}updateObject(e,t){const s=this.objects.get(e);s&&(void 0!==t.x&&(s.x=t.x),void 0!==t.y&&(s.y=t.y),s instanceof n&&(void 0===t.width&&void 0===t.height||console.log("Dimension updates for Graphics require recreation")))}deleteObject(e){const t=this.objects.get(e);if(t){this.viewport.removeChild(t),this.objects.delete(e),t.destroy({children:!0,texture:!1,baseTexture:!1});const s=this.selectionIndicators.get(e);s&&(this.viewport.removeChild(s),s.destroy({children:!0,texture:!1,baseTexture:!1}),this.selectionIndicators.delete(e)),this.selectedObjects.delete(e),console.log(`Deleted object ${e} with proper texture preservation`)}}deleteObjects(e){if(!Array.isArray(e)||0===e.length)return void console.warn("deleteObjects: Expected non-empty array of IDs");console.log(`Bulk deleting ${e.length} objects:`,e);const t=[];return e.forEach(e=>{const s=this.objects.get(e);if(s){this.viewport.removeChild(s),this.objects.delete(e),s.destroy({children:!0,texture:!1,baseTexture:!1});const i=this.selectionIndicators.get(e);i&&(this.viewport.removeChild(i),i.destroy({children:!0,texture:!1,baseTexture:!1}),this.selectionIndicators.delete(e)),this.selectedObjects.delete(e),t.push(e)}else console.warn(`Object ${e} not found for deletion`)}),console.log(`Bulk deleted ${t.length} objects successfully`),t}verifyObjectDeletion(e){Array.isArray(e)||(e=[e]);let t=!0;const s=[];e.forEach(e=>{this.objects.has(e)&&(s.push(`Object ${e} still in objects map`),t=!1),this.selectionIndicators.has(e)&&(s.push(`Selection indicator for ${e} still exists`),t=!1),this.selectedObjects.has(e)&&(s.push(`Object ${e} still in selectedObjects set`),t=!1),this.viewport.children.find(t=>t._objectId===e)&&(s.push(`Object ${e} still in viewport children`),t=!1)});const i=this.viewport.children.filter(e=>e._objectId&&!this.objects.has(e._objectId));i.length>0&&(s.push(`${i.length} orphaned PIXI objects found in viewport`),t=!1);const o=c?Object.keys(c._cache).length:0;return o>100&&s.push(`High texture count detected: ${o} textures in cache`),t?console.log(`Memory leak verification passed for ${e.length} deleted objects`):console.warn("Memory leak verification failed:",s),{success:t,issues:s,textureCount:o,orphanedObjects:i.length}}getMemoryStats(){const e=this.viewport.children.length,t=this.objects.size,s=this.selectionIndicators.size,i=this.selectedObjects.size,o=this.remoteCursors.size;return{pixiChildren:e,objectsInMap:t,selectionIndicators:s,selectedObjects:i,remoteCursors:o,totalTrackedObjects:t+s+i+o,textureCacheSize:c?Object.keys(c._cache).length:0,baseTextureCacheSize:0}}createRemoteObject(e){console.log("Creating remote object:",e),console.log("Object properties:",{id:e.id,type:e.type,x:e.x,y:e.y,width:e.width,height:e.height,radius:e.radius,color:e.color,colorType:typeof e.color});const t=this.normalizeColor(e.color);console.log("Normalized color:",t,"type:",typeof t);let s=e.type;if(!s)if(console.warn("Object missing type field, inferring from properties:",e),void 0!==e.radius)s="circle";else if(void 0!==e.width&&void 0!==e.height)s="rectangle";else{if(void 0===e.text)return void console.error("Cannot infer type for object:",e);s="text"}if("rectangle"===s){if(!e.width||!e.height||e.width<=0||e.height<=0)return void console.warn("Skipping rectangle with invalid dimensions:",e);console.log("Creating rectangle with:",{id:e.id,x:e.x,y:e.y,width:e.width,height:e.height,color:t}),this.createRectangle(e.id,e.x,e.y,e.width,e.height,t),console.log("Rectangle created successfully. Objects in map:",this.objects.size)}else"circle"===s?(console.log("Creating circle with:",{id:e.id,x:e.x,y:e.y,radius:e.radius,color:t}),this.createCircle(e.id,e.x,e.y,e.radius,t),console.log("Circle created successfully")):"text"===s?(console.log("Creating text with:",{id:e.id,text:e.text,x:e.x,y:e.y,fontSize:e.fontSize,color:t}),this.createText(e.id,e.text,e.x,e.y,e.fontSize,t),console.log("Text created successfully")):console.error("Unknown object type:",s)}normalizeColor(e){return"number"==typeof e?e:"string"==typeof e?e.startsWith("#")?parseInt(e.substring(1),16):parseInt(e,16):3447003}updateRemoteObject(e,t){console.log("Updating remote object with delta:",e,t),this.applyDelta(e,t)}deleteRemoteObject(e){console.log("Deleting remote object:",e),this.deleteObject(e)}getObject(e){return this.objects.get(e)}getObjectById(e){return this.objects.get(e)}getAllObjects(){return Array.from(this.objects.entries()).map(([e,t])=>({id:e,type:t.constructor.name,x:t.x,y:t.y}))}getPerformanceStats(){return this.performanceMonitor.getStats()}updateRemoteCursor(e,t,s,i,n){let r=this.remoteCursors.get(e);const c=n&&"string"==typeof n&&n.startsWith("#")?parseInt(n.substring(1),16):16739179;if(!r){r=new o;const s=new l(this.cursorTexture);s.tint=c;const i=new a(t,{fontSize:12,fill:16777215,fontWeight:"bold",stroke:c,strokeThickness:2,dropShadow:!0,dropShadowColor:0,dropShadowAlpha:.7,dropShadowDistance:1});i.x=15,i.y=-5,r.addChild(s),r.addChild(i),r.zIndex=1e3,r.interactive=!1,r.interactiveChildren=!1,this.remoteCursors.set(e,r),this.viewport.addChild(r)}r.lastUpdate||(r.lastUpdate={x:s,y:i,time:performance.now()});const h=performance.now(),d=h-r.lastUpdate.time;if(d>0&&d<100){const e=Math.min(d/100,1);r.x=r.lastUpdate.x+(s-r.lastUpdate.x)*e,r.y=r.lastUpdate.y+(i-r.lastUpdate.y)*e}else r.x=s,r.y=i;r.lastUpdate={x:s,y:i,time:h}}removeRemoteCursor(e){const t=this.remoteCursors.get(e);t&&(this.viewport.removeChild(t),t.destroy(),this.remoteCursors.delete(e))}clearAllRemoteCursors(){console.log(`Clearing all remote cursors (${this.remoteCursors.size} cursors)`),this.remoteCursors.forEach((e,t)=>{this.viewport.removeChild(e),e.destroy()}),this.remoteCursors.clear(),console.log("All remote cursors cleared")}startPeriodicCleanup(e=6e4){this.cleanupInterval=setInterval(()=>{this.performCleanup()},e),console.log(`Started periodic cleanup (every ${e/1e3}s)`)}stopPeriodicCleanup(){this.cleanupInterval&&(clearInterval(this.cleanupInterval),this.cleanupInterval=null,console.log("Stopped periodic cleanup"))}performCleanup(){console.log("=== Performing periodic cleanup ===");let e=0,t=0;this.selectionIndicators.forEach((t,s)=>{this.objects.has(s)||(this.viewport.removeChild(t),t.destroy(),this.selectionIndicators.delete(s),e++)}),this.selectedObjects.forEach(e=>{this.objects.has(e)||this.selectedObjects.delete(e)});const s=performance.now()-3e5;this.remoteCursors.forEach((e,i)=>{e.lastUpdate&&e.lastUpdate.time<s&&(this.removeRemoteCursor(i),t++)}),e>0||t>0?console.log(`Cleanup complete: ${e} indicators, ${t} cursors removed`):console.log("Cleanup complete: No orphaned objects found")}generateId(){return"obj-"+Math.random().toString(36).substr(2,9)}setColor(e){this.currentColor=e}colorToHexString(e){return"number"==typeof e?"#"+e.toString(16).padStart(6,"0"):"string"==typeof e&&e.startsWith("#")?e:"#3498db"}getCanvasState(){const e=[];return this.objects.forEach((t,s)=>{e.push({id:s,type:t.constructor.name,x:t.x,y:t.y})}),{objects:e}}destroy(){this.performanceMonitor&&this.performanceMonitor.destroy(),this.cursorTexture&&this.cursorTexture.destroy(),this.objects.forEach(e=>{e&&"function"==typeof e.destroy&&e.destroy()}),this.objects.clear(),this.selectionIndicators.forEach(e=>{e&&"function"==typeof e.destroy&&e.destroy()}),this.selectionIndicators.clear(),this.remoteCursors.forEach(e=>{e&&"function"==typeof e.destroy&&e.destroy()}),this.remoteCursors.clear()}onObjectCreated=null;onObjectMoved=null;onObjectDeleted=null;onCursorMoved=null;onSelectionChange=null}class y{constructor(e={}){this.maxHistorySize=e.maxHistorySize||1e3,this.warningThreshold=e.warningThreshold||100,this.pendingMessages=new Map,this.latencyHistory=[],this.stats={totalMessages:0,averageLatency:0,minLatency:1/0,maxLatency:0,warningCount:0}}startTracking(e,t){this.pendingMessages.set(e,{sentTime:performance.now(),type:t})}endTracking(e){const t=this.pendingMessages.get(e);if(!t)return null;const s=performance.now()-t.sentTime;return this.pendingMessages.delete(e),this.recordLatency(s,t.type),s>this.warningThreshold&&(console.warn(`⚠️ High latency detected: ${Math.round(s)}ms for ${t.type} message`),this.stats.warningCount++),s}recordLatency(e,t){this.latencyHistory.push({latency:e,type:t,timestamp:Date.now()}),this.latencyHistory.length>this.maxHistorySize&&this.latencyHistory.shift(),this.stats.totalMessages++,this.stats.minLatency=Math.min(this.stats.minLatency,e),this.stats.maxLatency=Math.max(this.stats.maxLatency,e);const s=this.latencyHistory.reduce((e,t)=>e+t.latency,0);this.stats.averageLatency=s/this.latencyHistory.length}getPercentile(e){if(0===this.latencyHistory.length)return 0;const t=this.latencyHistory.map(e=>e.latency).sort((e,t)=>e-t),s=Math.ceil(e/100*t.length)-1;return t[Math.max(0,s)]}getStats(){return{totalMessages:this.stats.totalMessages,averageLatency:Math.round(100*this.stats.averageLatency)/100,minLatency:this.stats.minLatency===1/0?0:Math.round(100*this.stats.minLatency)/100,maxLatency:Math.round(100*this.stats.maxLatency)/100,p50:Math.round(100*this.getPercentile(50))/100,p95:Math.round(100*this.getPercentile(95))/100,p99:Math.round(100*this.getPercentile(99))/100,warningCount:this.stats.warningCount,historySize:this.latencyHistory.length,pendingMessages:this.pendingMessages.size}}getStatsByType(e){const t=this.latencyHistory.filter(t=>t.type===e);if(0===t.length)return null;const s=t.map(e=>e.latency).sort((e,t)=>e-t),i=s.reduce((e,t)=>e+t,0),o=e=>{const t=Math.ceil(e/100*s.length)-1;return s[Math.max(0,t)]};return{messageType:e,count:t.length,averageLatency:Math.round(i/t.length*100)/100,minLatency:Math.round(100*s[0])/100,maxLatency:Math.round(100*s[s.length-1])/100,p50:Math.round(100*o(50))/100,p95:Math.round(100*o(95))/100,p99:Math.round(100*o(99))/100}}logStats(){const e=this.getStats();console.log("=== Latency Statistics ==="),console.log(`Total messages: ${e.totalMessages}`),console.log(`Average latency: ${e.averageLatency}ms`),console.log(`Min latency: ${e.minLatency}ms`),console.log(`Max latency: ${e.maxLatency}ms`),console.log(`P50 (median): ${e.p50}ms`),console.log(`P95: ${e.p95}ms`),console.log(`P99: ${e.p99}ms`),console.log(`High latency warnings: ${e.warningCount}`),console.log(`History size: ${e.historySize}`),console.log(`Pending messages: ${e.pendingMessages}`)}reset(){this.pendingMessages.clear(),this.latencyHistory=[],this.stats={totalMessages:0,averageLatency:0,minLatency:1/0,maxLatency:0,warningCount:0}}}class b{constructor(e,t=50){this.sendCallback=e,this.intervalMs=t,this.pendingCursor=null,this.intervalId=null,this.start()}start(){this.intervalId=setInterval(()=>{this.pendingCursor&&(this.sendCallback(this.pendingCursor.x,this.pendingCursor.y),this.pendingCursor=null)},this.intervalMs)}update(e,t){this.pendingCursor={x:e,y:t}}stop(){this.intervalId&&(clearInterval(this.intervalId),this.intervalId=null)}}class m{constructor(e,t,s){this.url=e,this.sessionId=t,this.canvasId=s,this.ws=null,this.isConnected=!1,this.reconnectAttempts=0,this.maxReconnectAttempts=5,this.reconnectDelay=1e3,this.messageIdCounter=0,this.latencyMonitor=new y({maxHistorySize:1e3,warningThreshold:100}),this.bandwidthStats={totalBytesReceived:0,objectUpdateMessages:0,startTime:Date.now()},this.cursorThrottle=new b((e,t)=>{this.send({type:"cursor",x:e,y:t})}),this.onAuthSuccess=()=>{},this.onAuthFailed=()=>{},this.onUserConnected=()=>{},this.onUserDisconnected=()=>{},this.onPresenceUpdate=()=>{},this.onCursorUpdate=()=>{},this.onObjectCreated=()=>{},this.onObjectUpdated=()=>{},this.onObjectDeleted=()=>{},this.onObjectsDeleted=()=>{},this.onPhysicsSnapshot=()=>{},this.onPhysicsStateChange=()=>{},this.onError=()=>{},this.onReconnecting=()=>{},this.onReconnected=()=>{}}connect(){console.log(`Connecting to WebSocket: ${this.url}`);try{this.ws=new WebSocket(this.url),this.setupEventHandlers()}catch(e){console.error("WebSocket connection error:",e),this.onError(e),this.scheduleReconnect()}}setupEventHandlers(){this.ws.onopen=()=>{console.log("WebSocket connected"),this.isConnected=!0,this.reconnectAttempts=0,this.send({type:"auth",sessionId:this.sessionId,canvasId:this.canvasId}),this.reconnectAttempts>0&&this.onReconnected()},this.ws.onmessage=e=>{try{const t=JSON.parse(e.data);this.handleMessage(t)}catch(t){console.error("Error parsing WebSocket message:",t),this.onError(t)}},this.ws.onclose=e=>{console.log("WebSocket disconnected:",e.code,e.reason),this.isConnected=!1,e.wasClean||this.scheduleReconnect()},this.ws.onerror=e=>{console.error("WebSocket error:",e),this.onError(e)}}handleMessage(e){if(e.messageId){const t=this.latencyMonitor.endTracking(e.messageId);null!==t&&t<100&&console.debug(`Message ${e.type} latency: ${Math.round(t)}ms`)}switch(e.type){case"auth-success":this.onAuthSuccess(e);break;case"auth-failed":this.onAuthFailed(e);break;case"user-connected":this.onUserConnected(e);break;case"user-disconnected":this.onUserDisconnected(e);break;case"presence":this.onPresenceUpdate(e.users);break;case"cursor":this.onCursorUpdate(e);break;case"cursor-batch":e.cursors&&Array.isArray(e.cursors)&&e.cursors.forEach(e=>{this.onCursorUpdate(e)});break;case"object-create":this.onObjectCreated(e);break;case"object-update":const t=JSON.stringify(e).length;this.bandwidthStats.totalBytesReceived+=t,this.bandwidthStats.objectUpdateMessages++,console.log(`Object update received: ${t} bytes (total: ${this.bandwidthStats.totalBytesReceived} bytes, ${this.bandwidthStats.objectUpdateMessages} messages)`),this.onObjectUpdated(e);break;case"object-delete":this.onObjectDeleted(e);break;case"objects-delete":this.onObjectsDeleted(e);break;case"physics-snapshot":e.snapshot&&Array.isArray(e.snapshot)&&this.onPhysicsSnapshot(e.snapshot);break;case"physics-state-change":this.onPhysicsStateChange(e);break;case"error":console.error("Server error:",e.message),this.onError(new Error(e.message));break;default:console.warn("Unknown message type:",e.type)}}send(e,t=!1){this.ws&&this.ws.readyState===WebSocket.OPEN?(t&&"cursor"!==e.type&&(e.messageId=++this.messageIdCounter,this.latencyMonitor.startTracking(e.messageId,e.type)),this.ws.send(JSON.stringify(e))):console.warn("WebSocket not connected, message not sent:",e)}sendCursorUpdate(e,t){this.cursorThrottle.update(e,t)}sendObjectCreate(e){this.send({type:"object-create",object:e},!0)}sendObjectUpdate(e,t){this.send({type:"object-update","object-id":e,updates:t},!0)}sendObjectDelete(e){this.send({type:"object-delete","object-id":e},!0)}scheduleReconnect(){if(this.reconnectAttempts>=this.maxReconnectAttempts)return console.error("Max reconnection attempts reached"),void this.onError(new Error("Unable to reconnect to server"));this.reconnectAttempts++;const e=this.reconnectDelay*Math.pow(2,this.reconnectAttempts-1);console.log(`Attempting to reconnect in ${e}ms (attempt ${this.reconnectAttempts}/${this.maxReconnectAttempts})`),this.onReconnecting(),setTimeout(()=>{this.connect()},e)}getBandwidthStats(){const e=(Date.now()-this.bandwidthStats.startTime)/6e4;return{totalBytes:this.bandwidthStats.totalBytesReceived,messageCount:this.bandwidthStats.objectUpdateMessages,averageBytesPerMessage:this.bandwidthStats.objectUpdateMessages>0?Math.round(this.bandwidthStats.totalBytesReceived/this.bandwidthStats.objectUpdateMessages):0,bytesPerMinute:e>0?Math.round(this.bandwidthStats.totalBytesReceived/e):0,elapsedMinutes:Math.round(10*e)/10}}getLatencyStats(){return this.latencyMonitor.getStats()}getLatencyStatsByType(e){return this.latencyMonitor.getStatsByType(e)}logLatencyStats(){this.latencyMonitor.logStats()}logBandwidthStats(){const e=this.getBandwidthStats();console.log("Bandwidth Stats (Delta Compression):",{"Total bytes received":`${e.totalBytes} bytes`,"Object update messages":e.messageCount,"Avg bytes per message":`${e.averageBytesPerMessage} bytes`,"Bytes per minute":`${e.bytesPerMinute} bytes/min`,"Elapsed time":`${e.elapsedMinutes} minutes`})}disconnect(){this.bandwidthStats.objectUpdateMessages>0&&(console.log("=== Final Bandwidth Stats (Delta Compression) ==="),this.logBandwidthStats()),this.cursorThrottle&&(this.cursorThrottle.stop(),console.log("Stopped cursor throttle timer")),this.ws&&(this.ws.close(1e3,"User disconnect"),this.ws=null,this.isConnected=!1),console.log("=== Disconnect cleanup complete ===")}sendObjectsDelete(e){this.send({type:"objects-delete","object-ids":e})}sendPhysicsControl(e,t=null){const s={type:"physics-control",action:e};null!==t&&(s.value=t),this.send(s)}}class f{constructor(){this.modal=document.getElementById("auth-modal"),this.loginForm=document.getElementById("login-form"),this.registerForm=document.getElementById("register-form"),this.auth0Domain=void 0,this.auth0ClientId=void 0,this.setupEventListeners(),this.checkAuthCallback()}setupEventListeners(){document.querySelectorAll(".tab-btn").forEach(e=>{e.addEventListener("click",()=>{const t=e.dataset.tab;this.switchTab(t)})}),this.loginForm.addEventListener("submit",async e=>{e.preventDefault(),await this.handleLogin()}),this.registerForm.addEventListener("submit",async e=>{e.preventDefault(),await this.handleRegister()});const e=document.getElementById("auth0-login-btn");e&&e.addEventListener("click",()=>this.loginWithAuth0());const t=document.getElementById("google-login-btn");t&&t.addEventListener("click",()=>this.loginWithGoogle());const s=document.getElementById("github-login-btn");s&&s.addEventListener("click",()=>this.loginWithGithub())}switchTab(e){document.querySelectorAll(".tab-btn").forEach(t=>{t.classList.toggle("active",t.dataset.tab===e)}),document.querySelectorAll(".auth-form").forEach(t=>{t.classList.toggle("active",t.id===`${e}-form`)}),document.querySelectorAll(".error-message").forEach(e=>{e.textContent=""})}showModal(){return new Promise(e=>{this.modal.classList.remove("hidden"),this.resolveAuth=e})}hideModal(){this.modal.classList.add("hidden")}showError(e,t="login"){const s=document.getElementById(`${t}-error`);s&&(s.textContent=e,s.style.display="block")}async loginWithAuth0(){try{const e=await fetch("/auth0/login",{method:"HEAD"});if(!e.ok&&405!==e.status)throw new Error("Authentication service unavailable");window.location.href="/auth0/login"}catch(e){console.error("Auth0 login error:",e),this.showError("Could not connect to authentication service. Please try again.")}}async loginWithGoogle(){try{const e=await fetch("/auth0/login?connection=google-oauth2",{method:"HEAD"});if(!e.ok&&405!==e.status)throw new Error("Authentication service unavailable");window.location.href="/auth0/login?connection=google-oauth2"}catch(e){console.error("Google login error:",e),this.showError("Could not connect to Google authentication. Please try again.")}}async loginWithGithub(){try{const e=await fetch("/auth0/login?connection=github",{method:"HEAD"});if(!e.ok&&405!==e.status)throw new Error("Authentication service unavailable");window.location.href="/auth0/login?connection=github"}catch(e){console.error("GitHub login error:",e),this.showError("Could not connect to GitHub authentication. Please try again.")}}checkAuthCallback(){const e=new URL(window.location),t=e.searchParams.get("code"),s=e.searchParams.get("error"),i=e.searchParams.get("error_description");if(s){console.error("OAuth error:",s,i);let e="Authentication failed. ";e+="access_denied"===s?"Access was denied. Please try again.":i||"Please try again or contact support.",this.showError(e),window.history.replaceState({},document.title,window.location.pathname)}else t&&console.log("Auth0 callback detected, processing...")}async handleLogin(){const e=document.getElementById("login-email").value,t=document.getElementById("login-password").value,s=document.getElementById("login-error");try{const i=await fetch("/api/login",{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:t})}),o=await i.json();o.success&&o.data?(this.hideModal(),this.resolveAuth({sessionId:o.data["session-id"],userId:o.data["user-id"],username:o.data.username})):s.textContent=o.error||"Login failed"}catch(i){console.error("Login error:",i),s.textContent="Connection error. Please try again."}}async handleRegister(){const e=document.getElementById("register-username").value,t=document.getElementById("register-email").value,s=document.getElementById("register-password").value,i=document.getElementById("register-error");try{const o=await fetch("/api/register",{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,email:t,password:s})}),n=await o.json();n.success?await this.loginAfterRegister(t,s):i.textContent=n.error||"Registration failed"}catch(o){console.error("Registration error:",o),i.textContent="Connection error. Please try again."}}async loginAfterRegister(e,t){this.switchTab("login"),document.getElementById("login-email").value=e,document.getElementById("login-password").value=t,await this.handleLogin()}}class v{constructor(){this.canvasManager=null,this.wsClient=null,this.authManager=null,this.sessionId=null,this.userId=null,this.username=null,this.canvasId=this.getCanvasId(),this.activeUsers=[]}getCanvasId(){let e=new URLSearchParams(window.location.search).get("canvas");if(!e){e="default-canvas";const t=new URL(window.location);t.searchParams.set("canvas",e),window.history.replaceState({},"",t)}return e}async init(){if(console.log("Initializing CollabCanvas..."),document.getElementById("canvas-id").textContent=this.canvasId,this.authManager=new f,this.sessionId=localStorage.getItem("sessionId"),this.sessionId&&(await this.validateSession()||(this.sessionId=null,localStorage.removeItem("sessionId"))),!this.sessionId){this.hideLoadingScreen();const e=await this.authManager.showModal();this.sessionId=e.sessionId,this.userId=e.userId,this.username=e.username,localStorage.setItem("sessionId",this.sessionId)}this.hideLoadingScreen(),await this.initCanvas(),this.initWebSocket(),this.setupUIHandlers(),console.log("CollabCanvas initialized successfully")}hideLoadingScreen(){const e=document.getElementById("loading-screen");e&&e.classList.add("hidden")}async validateSession(){console.log("[FRONTEND] Validating session..."),console.log("[FRONTEND] sessionId from localStorage:",this.sessionId);try{const e=await fetch("/api/session",{credentials:"include",headers:{"X-Session-ID":this.sessionId}});if(console.log("[FRONTEND] Response status:",e.status),console.log("[FRONTEND] Response ok:",e.ok),e.ok){const t=await e.json();if(console.log("[FRONTEND] Response data:",t),t.success&&t.data&&t.data.valid)return this.userId=t.data["user-id"],this.username=t.data.username,console.log("[FRONTEND] Session restored:",this.username),!0;console.log("[FRONTEND] Session validation failed - data.success:",t.success,"data.data:",t.data,"data.data.valid:",t.data?.valid)}else{const t=await e.json();console.log("[FRONTEND] Error response:",t)}}catch(e){console.error("[FRONTEND] Session validation exception:",e)}return!1}async initCanvas(){const e=document.getElementById("canvas-container"),t="dark"===(document.documentElement.getAttribute("data-theme")||"dark")?1447455:16777215,s=new h;await s.init({width:window.innerWidth,height:window.innerHeight,backgroundColor:t,resizeTo:window,antialias:!0,autoDensity:!0,resolution:window.devicePixelRatio||1}),e.appendChild(s.canvas);const i=document.getElementById("theme-toggle");i&&i.addEventListener("click",()=>{setTimeout(()=>{const e="dark"===document.documentElement.getAttribute("data-theme")?1447455:16777215;s.renderer.background.color=e},50)}),this.canvasManager=new p(s),window.getPerformanceStats=()=>this.canvasManager.getPerformanceStats(),window.getLatencyStats=()=>this.wsClient?this.wsClient.getLatencyStats():null,window.logLatencyStats=()=>{this.wsClient?this.wsClient.logLatencyStats():console.warn("WebSocket client not initialized")},window.getLatencyStatsByType=e=>this.wsClient?this.wsClient.getLatencyStatsByType(e):null,this.canvasManager.onCursorMoved=(e,t)=>{this.wsClient&&this.wsClient.isConnected&&this.wsClient.sendCursorUpdate(e,t)},this.canvasManager.onObjectCreated=e=>{this.wsClient&&this.wsClient.isConnected&&this.wsClient.sendObjectCreate(e)},this.canvasManager.onObjectUpdated=(e,t)=>{this.wsClient&&this.wsClient.isConnected&&this.wsClient.sendObjectUpdate(e,t)},this.canvasManager.onObjectDeleted=e=>{this.wsClient&&this.wsClient.isConnected&&this.wsClient.sendObjectDelete(e)},this.canvasManager.onObjectsDeleted=e=>{this.wsClient&&this.wsClient.isConnected&&this.wsClient.sendObjectsDelete(e)},this.canvasManager.onToolChange=e=>{document.getElementById("current-tool").textContent=e.charAt(0).toUpperCase()+e.slice(1)},this.canvasManager.onMouseMove=(e,t)=>{document.getElementById("mouse-position").textContent=`${Math.round(e)}, ${Math.round(t)}`},this.canvasManager.onZoomChange=e=>{document.getElementById("zoom-level").textContent=`${Math.round(100*e)}%`},this.canvasManager.onObjectCountChange=e=>{document.getElementById("object-count").textContent=e},this.canvasManager.onSelectionChange=e=>{this.updatePhysicsPropertiesUI(e)},this.canvasManager.startPeriodicCleanup(6e4),console.log("Started periodic memory cleanup (60s interval)")}initWebSocket(){const e=`${"https:"===window.location.protocol?"wss:":"ws:"}//${window.location.host}/ws/${this.canvasId}`;this.wsClient=new m(e,this.sessionId,this.canvasId),this.wsClient.onAuthSuccess=e=>{console.error("=== WebSocket authenticated ==="),console.error("Auth data received:",e);const t=e["canvas-state"]||e.canvasState;console.error("canvasState exists?",!!t),console.error("canvasState type:",typeof t),console.error("canvasState length:",t?t.length:0),t?(console.error("=== CALLING loadState ==="),this.canvasManager.loadState(t),console.error("=== loadState RETURNED ===")):console.error("=== NO CANVAS STATE IN AUTH RESPONSE ===")},this.wsClient.onUserConnected=e=>{this.activeUsers.push({"user-id":e.userId||e["user-id"],username:e.username,color:e.color}),this.updatePresenceList(this.activeUsers),this.showNotification(`${e.username} joined`,"info")},this.wsClient.onUserDisconnected=e=>{const t=e.userId||e["user-id"];this.activeUsers=this.activeUsers.filter(e=>(e["user-id"]||e.userId)!==t),this.updatePresenceList(this.activeUsers),this.canvasManager.removeRemoteCursor(t),this.showNotification(`${e.username} left`,"info")},this.wsClient.onPresenceUpdate=e=>{this.activeUsers=e,this.updatePresenceList(this.activeUsers)},this.wsClient.onCursorUpdate=e=>{this.canvasManager.updateRemoteCursor(e.userId,e.username,e.x,e.y,e.color)},this.wsClient.onObjectCreated=e=>{this.canvasManager.createRemoteObject(e.object)},this.wsClient.onObjectUpdated=e=>{const t=e["object-id"]||e.objectId;this.canvasManager.updateRemoteObject(t,e.delta)},this.wsClient.onObjectDeleted=e=>{const t=e.userId||e["user-id"];this.activeUsers=this.activeUsers.filter(e=>(e["user-id"]||e.userId)!==t),this.updatePresenceList(this.activeUsers),this.canvasManager.removeRemoteCursor(t),this.showNotification(`${e.username} left`,"info")},this.wsClient.onObjectsDeleted=e=>{const t=e["object-ids"]||e.objectIds||[];console.log("Received bulk delete for objects:",t),t.length>0&&(t.forEach(e=>{this.canvasManager.deleteObject(e)}),console.log(`Processed remote bulk deletion of ${t.length} objects`))},this.wsClient.onPhysicsSnapshot=e=>{this.canvasManager.handlePhysicsSnapshot(e)},this.wsClient.onPhysicsStateChange=e=>{const t=e.action||e.state;if(console.log(`Physics state changed: ${t}`),"play"===t||"playing"===t)this.canvasManager.enablePhysics(),this.showNotification("Physics simulation started","info");else if("pause"===t||"paused"===t)this.canvasManager.disablePhysics(),this.showNotification("Physics simulation paused","info");else if("reset"===t)this.canvasManager.disablePhysics(),this.canvasManager.physicsEngine.reset(),this.showNotification("Physics simulation reset","info");else if("set-gravity"===t){const t=e.value||e.gravity;this.canvasManager.setGravity(t),this.showNotification(`Gravity set to ${t}`,"info")}},this.wsClient.onError=e=>{console.error("WebSocket error:",e),this.showNotification("Connection error","error")},this.wsClient.onReconnecting=()=>{this.showNotification("Reconnecting...","warning")},this.wsClient.onReconnected=()=>{this.showNotification("Reconnected","success")},this.wsClient.connect()}setupUIHandlers(){document.querySelectorAll(".tool-btn").forEach(e=>{e.addEventListener("click",()=>{const t=e.dataset.tool;this.canvasManager.setTool(t),document.querySelectorAll(".tool-btn").forEach(e=>e.classList.remove("active")),e.classList.add("active")})}),document.getElementById("color-picker").addEventListener("change",e=>{this.canvasManager.setColor(e.target.value)}),this.setupPhysicsControls(),this.setupPhysicsPropertiesUI(),document.addEventListener("keydown",e=>{if("INPUT"!==e.target.tagName)switch(e.key.toLowerCase()){case"v":this.selectTool("select");break;case"r":this.selectTool("rectangle");break;case"c":this.selectTool("circle");break;case"p":e.ctrlKey&&e.shiftKey&&(e.preventDefault(),this.runPerformanceTest());break;case"delete":case"backspace":e.target.isContentEditable||(e.preventDefault(),this.canvasManager.deleteSelected());break;case"z":(e.ctrlKey||e.metaKey)&&(e.preventDefault(),e.shiftKey?this.canvasManager.redo():this.canvasManager.undo())}});const e=document.getElementById("logout-btn");e&&e.addEventListener("click",async()=>{await this.logout()})}selectTool(e){this.canvasManager.setTool(e),document.querySelectorAll(".tool-btn").forEach(t=>{t.dataset.tool===e?t.classList.add("active"):t.classList.remove("active")})}setupPhysicsControls(){const e=document.getElementById("play-btn");e&&e.addEventListener("click",()=>{this.wsClient&&this.wsClient.isConnected&&(this.wsClient.sendPhysicsControl("play"),console.log("Sent physics control: play"))});const t=document.getElementById("pause-btn");t&&t.addEventListener("click",()=>{this.wsClient&&this.wsClient.isConnected&&(this.wsClient.sendPhysicsControl("pause"),console.log("Sent physics control: pause"))});const s=document.getElementById("reset-btn");s&&s.addEventListener("click",()=>{this.wsClient&&this.wsClient.isConnected&&(this.wsClient.sendPhysicsControl("reset"),console.log("Sent physics control: reset"))});const i=document.getElementById("gravity-slider"),o=document.getElementById("gravity-value");i&&o&&(i.addEventListener("input",e=>{const t=parseFloat(e.target.value);o.textContent=t.toFixed(1)}),i.addEventListener("change",e=>{const t=parseFloat(e.target.value);this.wsClient&&this.wsClient.isConnected&&(this.wsClient.sendPhysicsControl("set-gravity",t),console.log("Sent physics control: set-gravity",t))}));const n=document.getElementById("boundary-selector");n&&n.addEventListener("change",e=>{const t=e.target.value;this.wsClient&&this.wsClient.isConnected&&(this.wsClient.sendPhysicsControl("set-boundary",t),console.log("Sent physics control: set-boundary",t))})}updatePresenceList(e=[]){const t=document.getElementById("users-container");t.innerHTML="",e.forEach(e=>{const s=document.createElement("div");s.className="user-item";const i=e.username,o=e.color;s.innerHTML=`\n                <span class="user-indicator" style="background-color: ${o}"></span>\n                <span>${i}</span>\n            `,t.appendChild(s)})}setupPhysicsPropertiesUI(){const e=document.getElementById("prop-isDynamic");e&&e.addEventListener("change",e=>{this.updateSelectedObjectPhysicsProperty("isDynamic",e.target.checked)});const t=document.getElementById("prop-friction"),s=document.getElementById("prop-friction-value");t&&s&&(t.addEventListener("input",e=>{s.textContent=parseFloat(e.target.value).toFixed(2)}),t.addEventListener("change",e=>{const t=parseFloat(e.target.value);this.updateSelectedObjectPhysicsProperty("friction",t)}));const i=document.getElementById("prop-restitution"),o=document.getElementById("prop-restitution-value");i&&o&&(i.addEventListener("input",e=>{o.textContent=parseFloat(e.target.value).toFixed(2)}),i.addEventListener("change",e=>{const t=parseFloat(e.target.value);this.updateSelectedObjectPhysicsProperty("restitution",t)}))}updatePhysicsPropertiesUI(e){const t=document.getElementById("properties-section"),s=document.getElementById("prop-isDynamic"),i=document.getElementById("prop-isDynamic-hint"),o=document.getElementById("prop-friction"),n=document.getElementById("prop-friction-value"),r=document.getElementById("prop-restitution"),a=document.getElementById("prop-restitution-value");if(0===e.size)return void(t.style.display="none");t.style.display="block";const c=Array.from(e)[0],l=this.canvasManager.getObjectById(c);if(!l)return void(t.style.display="none");if(e.size>1)return s.disabled=!0,o.disabled=!0,r.disabled=!0,void(i.textContent="Select a single object to edit properties");o.disabled=!1,r.disabled=!1,"rectangle"===l.type?(s.disabled=!0,s.checked=!1,i.textContent="Rectangles are always static (boundaries)"):(s.disabled=!1,s.checked=l.isDynamic||!1,i.textContent="");const h=void 0!==l.friction?l.friction:.02,d=void 0!==l.restitution?l.restitution:.7;o.value=h,n.textContent=h.toFixed(2),r.value=d,a.textContent=d.toFixed(2)}updateSelectedObjectPhysicsProperty(e,t){if(1!==this.canvasManager.selectedObjects.size)return void console.warn("Cannot update physics properties for multiple objects");const s=Array.from(this.canvasManager.selectedObjects)[0],i=this.canvasManager.getObjectById(s);if(i)if("isDynamic"!==e||!0!==t||"rectangle"!==i.type){if(i[e]=t,console.log(`Updated object ${s} ${e} to ${t}`),this.wsClient&&this.wsClient.isConnected){const i={};i[e]=t,this.wsClient.sendObjectUpdate(s,i),console.log("Sent physics property update via WebSocket:",i)}}else console.warn("Rectangles cannot be dynamic (they are static boundaries)");else console.warn("Selected object not found:",s)}showNotification(e,t="info"){console.log(`[${t.toUpperCase()}] ${e}`)}async logout(){try{await fetch("/api/logout",{method:"POST",headers:{"Content-Type":"application/json",Authorization:this.sessionId}})}catch(e){console.error("Logout error:",e)}localStorage.removeItem("sessionId"),this.canvasManager&&this.canvasManager.stopPeriodicCleanup(),this.wsClient&&this.wsClient.disconnect(),window.location.reload()}async runPerformanceTest(){console.log("Performance testing is not available in production build"),console.log("Use development build (npm run dev) for performance testing")}}if("loading"===document.readyState)document.addEventListener("DOMContentLoaded",()=>{const e=new v;e.init(),window.collabCanvas=e});else{const e=new v;e.init(),window.collabCanvas=e}}}});
//# sourceMappingURL=index-legacy-BJ1L9zAs.js.map

{"version":3,"file":"index-CI0HO3qk.js","sources":["../../src/canvas.js","../../src/websocket.js","../../src/auth.js","../../src/main.js"],"sourcesContent":["// src/canvas.js\n// Complete PixiJS Canvas Manager for CollabCanvas\nimport * as PIXI from 'pixi.js';\n\nexport class PerformanceMonitor {\n  constructor(app, canvasManager) {\n    this.app = app;\n    this.canvasManager = canvasManager;\n    this.fpsHistory = [];\n    this.maxHistorySize = 60;\n    this.currentFps = 60;\n    this.lastTime = performance.now();\n    this.frameCount = 0;\n\n    // Bind ticker update\n    this.app.ticker.add(this.update.bind(this));\n\n    console.log('PerformanceMonitor initialized');\n  }\n\n  update(deltaTime) {\n    // Calculate FPS based on delta time (in seconds)\n    const now = performance.now();\n    const deltaMs = now - this.lastTime;\n\n    if (deltaMs > 0) {\n      this.currentFps = Math.round(1000 / deltaMs);\n    }\n\n    this.lastTime = now;\n\n    // Add to history\n    this.fpsHistory.push(this.currentFps);\n    if (this.fpsHistory.length > this.maxHistorySize) {\n      this.fpsHistory.shift(); // Remove oldest entry\n    }\n\n    // Check for low FPS and log warnings\n    if (this.currentFps < 55) {\n      const avgFps = this.getAverageFps();\n      const objectCount = this.canvasManager ? this.canvasManager.objects.size : 0;\n      console.warn(`⚠️ Low FPS detected: ${this.currentFps} FPS (avg: ${avgFps.toFixed(1)}, objects: ${objectCount})`);\n    }\n  }\n\n  getAverageFps() {\n    if (this.fpsHistory.length === 0) return 60;\n    const sum = this.fpsHistory.reduce((a, b) => a + b, 0);\n    return sum / this.fpsHistory.length;\n  }\n\n  getStats() {\n    if (this.fpsHistory.length === 0) {\n      return {\n        current: this.currentFps,\n        average: 60,\n        min: 60,\n        max: 60\n      };\n    }\n\n    return {\n      current: this.currentFps,\n      average: Math.round(this.getAverageFps() * 10) / 10,\n      min: Math.min(...this.fpsHistory),\n      max: Math.max(...this.fpsHistory)\n    };\n  }\n\n  destroy() {\n    if (this.app && this.app.ticker) {\n      this.app.ticker.remove(this.update.bind(this));\n    }\n  }\n}\n\nexport class CanvasManager {\n  constructor(app) {\n    this.app = app;\n    this.viewport = new PIXI.Container();\n    this.objects = new Map(); // objectId -> PIXI Graphics\n    this.selectedObjects = new Set();\n    this.selectionIndicators = new Map(); // objectId -> selection box Graphics\n    this.remoteCursors = new Map(); // userId -> cursor container\n\n    // State\n    this.isPanning = false;\n    this.panStart = { x: 0, y: 0 };\n    this.currentTool = 'select'; // 'select', 'rectangle', 'circle', 'text'\n    this.currentColor = 0x3498db; // Default blue\n\n    // Viewport culling\n    this.cullingEnabled = true;\n    this.cullingPadding = 200; // Extra padding around viewport for smooth scrolling\n    this.lastViewportBounds = null;\n\n    // Performance monitoring\n    this.performanceMonitor = new PerformanceMonitor(app, this);\n\n    // Shared cursor texture for performance optimization\n    this.cursorTexture = this.createSharedCursorTexture();\n\n    // Viewport setup\n    this.app.stage.addChild(this.viewport);\n    this.viewport.sortableChildren = true;\n\n    // Grid background (optional visual aid)\n    this.drawGrid();\n\n    // Setup interaction\n    this.setupPanZoom();\n    this.setupKeyboardShortcuts();\n    this.setupToolHandlers();\n    this.setupViewportCulling();\n\n    console.log('Canvas initialized');\n  }\n\n  createSharedCursorTexture() {\n    // Create cursor shape using Graphics\n    const graphics = new PIXI.Graphics();\n\n    // Draw cursor pointer (triangle)\n    graphics.beginFill(0xFFFFFF); // White fill (will be tinted)\n    graphics.moveTo(0, 0);\n    graphics.lineTo(12, 18);\n    graphics.lineTo(6, 18);\n    graphics.lineTo(0, 24);\n    graphics.endFill();\n\n    // Render to texture\n    const texture = this.app.renderer.generateTexture(graphics, {\n      resolution: 1,\n      scaleMode: PIXI.SCALE_MODES.LINEAR\n    });\n\n    // Clean up graphics object\n    graphics.destroy();\n\n    return texture;\n  }\n\n  // ==================== Grid ====================\n  \n  drawGrid() {\n    const grid = new PIXI.Graphics();\n    grid.lineStyle(1, 0x333333, 0.3);\n    \n    const gridSize = 50;\n    const gridExtent = 5000;\n    \n    // Vertical lines\n    for (let x = -gridExtent; x <= gridExtent; x += gridSize) {\n      grid.moveTo(x, -gridExtent);\n      grid.lineTo(x, gridExtent);\n    }\n    \n    // Horizontal lines\n    for (let y = -gridExtent; y <= gridExtent; y += gridSize) {\n      grid.moveTo(-gridExtent, y);\n      grid.lineTo(gridExtent, y);\n    }\n    \n    grid.zIndex = -1;\n    this.viewport.addChild(grid);\n  }\n  \n  // ==================== Pan & Zoom ====================\n  \n  setupPanZoom() {\n    const canvas = this.app.view;\n    \n    // Pan with middle mouse or Alt+drag\n    canvas.addEventListener('mousedown', (e) => {\n      if (e.button === 1 || (e.button === 0 && e.altKey)) {\n        this.isPanning = true;\n        this.panStart = { x: e.clientX, y: e.clientY };\n        canvas.style.cursor = 'grabbing';\n        e.preventDefault();\n      }\n    });\n    \n    canvas.addEventListener('mousemove', (e) => {\n      if (this.isPanning) {\n        const dx = e.clientX - this.panStart.x;\n        const dy = e.clientY - this.panStart.y;\n        \n        this.viewport.x += dx;\n        this.viewport.y += dy;\n        \n        this.panStart = { x: e.clientX, y: e.clientY };\n      }\n    });\n    \n    canvas.addEventListener('mouseup', () => {\n      if (this.isPanning) {\n        this.isPanning = false;\n        canvas.style.cursor = 'default';\n      }\n    });\n    \n    // Zoom with mouse wheel\n    canvas.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      \n      const zoomFactor = e.deltaY > 0 ? 0.9 : 1.1;\n      const mouseX = e.clientX;\n      const mouseY = e.clientY;\n      \n      // Get position before zoom\n      const worldPosBefore = this.screenToWorld(mouseX, mouseY);\n      \n      // Apply zoom\n      const newScale = this.viewport.scale.x * zoomFactor;\n      if (newScale >= 0.1 && newScale <= 10) {\n        this.viewport.scale.set(newScale);\n        \n        // Adjust position to keep mouse over same world point\n        const worldPosAfter = this.screenToWorld(mouseX, mouseY);\n        this.viewport.x += (worldPosAfter.x - worldPosBefore.x) * this.viewport.scale.x;\n        this.viewport.y += (worldPosAfter.y - worldPosBefore.y) * this.viewport.scale.y;\n      }\n    }, { passive: false });\n  }\n  \n  screenToWorld(screenX, screenY) {\n    return {\n      x: (screenX - this.viewport.x) / this.viewport.scale.x,\n      y: (screenY - this.viewport.y) / this.viewport.scale.y\n    };\n  }\n  \n  worldToScreen(worldX, worldY) {\n    return {\n      x: worldX * this.viewport.scale.x + this.viewport.x,\n      y: worldY * this.viewport.scale.y + this.viewport.y\n    };\n  }\n  \n  // ==================== Keyboard Shortcuts ====================\n  \n  setupKeyboardShortcuts() {\n    document.addEventListener('keydown', (e) => {\n      // Tool shortcuts\n      if (e.key === 'r' || e.key === 'R') {\n        this.setTool('rectangle');\n      } else if (e.key === 'c' || e.key === 'C') {\n        this.setTool('circle');\n      } else if (e.key === 't' || e.key === 'T') {\n        this.setTool('text');\n      } else if (e.key === 'v' || e.key === 'V' || e.key === 'Escape') {\n        this.setTool('select');\n      } else if (e.key === 'Delete' || e.key === 'Backspace') {\n        this.deleteSelected();\n      }\n    });\n  }\n  \n  setTool(tool) {\n    this.currentTool = tool;\n    console.log('Tool:', tool);\n    // Update UI indicator if you have one\n  }\n  \n  // ==================== Tool Handlers ====================\n  \n  setupToolHandlers() {\n    const canvas = this.app.view;\n    let drawStart = null;\n    let previewShape = null;\n\n    // Track cursor movement\n    canvas.addEventListener('mousemove', (e) => {\n      const worldPos = this.screenToWorld(e.clientX, e.clientY);\n\n      // Notify about cursor movement\n      if (this.onCursorMoved) {\n        this.onCursorMoved(worldPos.x, worldPos.y);\n      }\n\n      // Handle preview shape drawing\n      if (drawStart && previewShape) {\n        const width = worldPos.x - drawStart.x;\n        const height = worldPos.y - drawStart.y;\n\n        previewShape.clear();\n        previewShape.beginFill(this.currentColor);\n\n        if (this.currentTool === 'rectangle') {\n          previewShape.drawRect(drawStart.x, drawStart.y, width, height);\n        } else if (this.currentTool === 'circle') {\n          const radius = Math.sqrt(width * width + height * height);\n          previewShape.drawCircle(drawStart.x, drawStart.y, radius);\n        }\n\n        previewShape.endFill();\n      }\n    });\n\n    canvas.addEventListener('mousedown', (e) => {\n      if (e.button !== 0 || e.altKey) return; // Left click only, not panning\n      \n      const worldPos = this.screenToWorld(e.clientX, e.clientY);\n      \n      if (this.currentTool === 'rectangle' || this.currentTool === 'circle') {\n        drawStart = worldPos;\n        \n        // Create preview shape\n        previewShape = new PIXI.Graphics();\n        previewShape.alpha = 0.5;\n        this.viewport.addChild(previewShape);\n      }\n    });\n\n    canvas.addEventListener('mouseup', (e) => {\n      if (drawStart && previewShape) {\n        const worldPos = this.screenToWorld(e.clientX, e.clientY);\n        \n        // Create actual object\n        const objData = this.createToolObject(drawStart, worldPos);\n        \n        // Clean up preview\n        this.viewport.removeChild(previewShape);\n        previewShape = null;\n        drawStart = null;\n        \n        // Notify about new object (callback to WebSocket)\n        if (this.onObjectCreated) {\n          this.onObjectCreated(objData);\n        }\n      }\n    });\n  }\n\n  // ==================== Viewport Culling ====================\n\n  setupViewportCulling() {\n    // Listen for viewport changes (pan and zoom)\n    this.app.ticker.add(() => {\n      if (this.cullingEnabled) {\n        this.updateVisibleObjects();\n      }\n    });\n  }\n\n  updateVisibleObjects() {\n    // Calculate current viewport bounds in world coordinates\n    const viewportBounds = this.getViewportBounds();\n\n    // Check if viewport has changed significantly\n    if (!this.lastViewportBounds ||\n        Math.abs(viewportBounds.left - this.lastViewportBounds.left) > 50 ||\n        Math.abs(viewportBounds.top - this.lastViewportBounds.top) > 50 ||\n        Math.abs(viewportBounds.right - this.lastViewportBounds.right) > 50 ||\n        Math.abs(viewportBounds.bottom - this.lastViewportBounds.bottom) > 50) {\n\n      this.lastViewportBounds = viewportBounds;\n\n      // Update visibility for all objects\n      this.objects.forEach((obj, id) => {\n        const objBounds = this.getObjectBounds(obj);\n        const isVisible = this.isBoundsVisible(objBounds, viewportBounds);\n\n        // Only change visibility if it actually changed to avoid unnecessary operations\n        if (obj.visible !== isVisible) {\n          obj.visible = isVisible;\n        }\n      });\n    }\n  }\n\n  getViewportBounds() {\n    // Get screen dimensions\n    const screenWidth = this.app.renderer.width;\n    const screenHeight = this.app.renderer.height;\n\n    // Convert screen corners to world coordinates\n    const topLeft = this.screenToWorld(0, 0);\n    const bottomRight = this.screenToWorld(screenWidth, screenHeight);\n\n    return {\n      left: topLeft.x - this.cullingPadding,\n      top: topLeft.y - this.cullingPadding,\n      right: bottomRight.x + this.cullingPadding,\n      bottom: bottomRight.y + this.cullingPadding\n    };\n  }\n\n  getObjectBounds(obj) {\n    // Calculate object bounds based on type\n    if (obj.userData) {\n      if (obj.userData.type === 'rectangle') {\n        return {\n          left: obj.x,\n          top: obj.y,\n          right: obj.x + obj.userData.width,\n          bottom: obj.y + obj.userData.height\n        };\n      } else if (obj.userData.type === 'circle') {\n        const radius = obj.userData.radius;\n        return {\n          left: obj.x - radius,\n          top: obj.y - radius,\n          right: obj.x + radius,\n          bottom: obj.y + radius\n        };\n      }\n    }\n\n    // Fallback for objects without userData (like text)\n    if (obj.width && obj.height) {\n      return {\n        left: obj.x,\n        top: obj.y,\n        right: obj.x + obj.width,\n        bottom: obj.y + obj.height\n      };\n    }\n\n    // Last resort - treat as point\n    return {\n      left: obj.x,\n      top: obj.y,\n      right: obj.x,\n      bottom: obj.y\n    };\n  }\n\n  isBoundsVisible(objBounds, viewportBounds) {\n    // Check if object bounds intersect with viewport bounds\n    return !(objBounds.right < viewportBounds.left ||\n             objBounds.left > viewportBounds.right ||\n             objBounds.bottom < viewportBounds.top ||\n             objBounds.top > viewportBounds.bottom);\n  }\n\n  createToolObject(start, end) {\n    const id = this.generateId();\n    \n    if (this.currentTool === 'rectangle') {\n      const width = Math.abs(end.x - start.x);\n      const height = Math.abs(end.y - start.y);\n      const x = Math.min(start.x, end.x);\n      const y = Math.min(start.y, end.y);\n      \n      this.createRectangle(id, x, y, width, height, this.currentColor);\n      \n      return {\n        id,\n        type: 'rectangle',\n        x, y, width, height,\n        color: this.currentColor\n      };\n    } else if (this.currentTool === 'circle') {\n      const dx = end.x - start.x;\n      const dy = end.y - start.y;\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      \n      this.createCircle(id, start.x, start.y, radius, this.currentColor);\n      \n      return {\n        id,\n        type: 'circle',\n        x: start.x,\n        y: start.y,\n        radius,\n        color: this.currentColor\n      };\n    }\n  }\n  \n  // ==================== Object Creation ====================\n  \n  createRectangle(id, x, y, width, height, color) {\n    const rect = new PIXI.Graphics();\n    rect.beginFill(color);\n    rect.drawRect(0, 0, width, height);\n    rect.endFill();\n    rect.x = x;\n    rect.y = y;\n    rect.interactive = true;\n    rect.buttonMode = true;\n    rect.visible = true; // Start visible, culling will handle visibility\n\n    // Store dimensions for selection box\n    rect.userData = { width, height, type: 'rectangle' };\n\n    this.makeDraggable(rect, id);\n    this.makeSelectable(rect, id);\n\n    this.objects.set(id, rect);\n    this.viewport.addChild(rect);\n\n    return rect;\n  }\n  \n  createCircle(id, x, y, radius, color) {\n    const circle = new PIXI.Graphics();\n    circle.beginFill(color);\n    circle.drawCircle(0, 0, radius);\n    circle.endFill();\n    circle.x = x;\n    circle.y = y;\n    circle.interactive = true;\n    circle.buttonMode = true;\n    circle.visible = true; // Start visible, culling will handle visibility\n\n    // Store dimensions for selection box\n    circle.userData = { radius, type: 'circle' };\n\n    this.makeDraggable(circle, id);\n    this.makeSelectable(circle, id);\n\n    this.objects.set(id, circle);\n    this.viewport.addChild(circle);\n\n    return circle;\n  }\n  \n  createText(id, text, x, y, fontSize, color) {\n    const textObj = new PIXI.Text(text, {\n      fontSize,\n      fill: color,\n      fontFamily: 'Arial'\n    });\n    textObj.x = x;\n    textObj.y = y;\n    textObj.interactive = true;\n    textObj.buttonMode = true;\n    textObj.visible = true; // Start visible, culling will handle visibility\n\n    this.makeDraggable(textObj, id);\n    this.makeSelectable(textObj, id);\n\n    this.objects.set(id, textObj);\n    this.viewport.addChild(textObj);\n\n    return textObj;\n  }\n  \n  // ==================== Interaction ====================\n  \n  makeDraggable(obj, id) {\n    let dragData = null;\n    let dragOffset = { x: 0, y: 0 };\n    let lastDragUpdate = 0;\n    const dragUpdateInterval = 50; // Send updates every 50ms during drag (~20 FPS)\n\n    obj.on('pointerdown', (event) => {\n      if (this.currentTool !== 'select') return;\n\n      dragData = event.data;\n      obj.alpha = 0.7;\n      dragData.dragging = true;\n\n      // Store the offset between cursor and object position\n      const cursorPos = dragData.getLocalPosition(obj.parent);\n      dragOffset.x = cursorPos.x - obj.x;\n      dragOffset.y = cursorPos.y - obj.y;\n\n      event.stopPropagation();\n    });\n\n    obj.on('pointerup', () => {\n      if (dragData && dragData.dragging) {\n        obj.alpha = 1;\n        dragData.dragging = false;\n\n        // Send final position update\n        if (this.onObjectUpdated) {\n          this.onObjectUpdated(id, { x: obj.x, y: obj.y });\n        }\n\n        dragData = null;\n      }\n    });\n\n    obj.on('pointermove', () => {\n      if (dragData && dragData.dragging) {\n        const newPosition = dragData.getLocalPosition(obj.parent);\n        // Apply the offset to maintain cursor position relative to object\n        obj.x = newPosition.x - dragOffset.x;\n        obj.y = newPosition.y - dragOffset.y;\n\n        // Send throttled updates during drag for real-time visualization\n        const now = performance.now();\n        if (now - lastDragUpdate >= dragUpdateInterval) {\n          if (this.onObjectUpdated) {\n            this.onObjectUpdated(id, { x: obj.x, y: obj.y });\n          }\n          lastDragUpdate = now;\n        }\n      }\n    });\n  }\n  \n  makeSelectable(obj, id) {\n    obj.on('click', (event) => {\n      if (this.currentTool === 'select') {\n        if (event.data.originalEvent.shiftKey) {\n          // Multi-select\n          if (this.selectedObjects.has(id)) {\n            this.deselectObject(id);\n          } else {\n            this.selectObject(id);\n          }\n        } else {\n          // Single select\n          this.clearSelection();\n          this.selectObject(id);\n        }\n        event.stopPropagation();\n      }\n    });\n  }\n  \n  selectObject(id) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    this.selectedObjects.add(id);\n\n    // Remove existing selection indicator if any\n    const existingIndicator = this.selectionIndicators.get(id);\n    if (existingIndicator) {\n      this.viewport.removeChild(existingIndicator);\n      existingIndicator.destroy();\n    }\n\n    // Create selection indicator\n    const indicator = new PIXI.Graphics();\n    indicator.lineStyle(2, 0x00FF00);\n\n    if (obj.userData) {\n      if (obj.userData.type === 'rectangle') {\n        // Draw selection box around rectangle\n        const { width, height } = obj.userData;\n        indicator.drawRect(-2, -2, width + 4, height + 4);\n        indicator.x = obj.x;\n        indicator.y = obj.y;\n      } else if (obj.userData.type === 'circle') {\n        // Draw selection box around circle\n        const { radius } = obj.userData;\n        indicator.drawCircle(0, 0, radius + 2);\n        indicator.x = obj.x;\n        indicator.y = obj.y;\n      }\n    }\n\n    // Add to viewport and store reference\n    this.viewport.addChild(indicator);\n    this.selectionIndicators.set(id, indicator);\n  }\n\n  deselectObject(id) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    this.selectedObjects.delete(id);\n\n    // Remove selection indicator\n    const indicator = this.selectionIndicators.get(id);\n    if (indicator) {\n      this.viewport.removeChild(indicator);\n      indicator.destroy();\n      this.selectionIndicators.delete(id);\n    }\n  }\n  \n  clearSelection() {\n    this.selectedObjects.forEach(id => this.deselectObject(id));\n    this.selectedObjects.clear();\n  }\n  \n  deleteSelected() {\n    if (this.selectedObjects.size === 0) {\n      return;\n    }\n\n    const idsToDelete = Array.from(this.selectedObjects);\n\n    // Use bulk deletion for better performance\n    const deletedIds = this.deleteObjects(idsToDelete);\n\n    // Clear selection\n    this.selectedObjects.clear();\n\n    // Notify about bulk deletion\n    if (this.onObjectsDeleted && deletedIds.length > 0) {\n      this.onObjectsDeleted(deletedIds);\n    }\n\n    console.log(`Deleted ${deletedIds.length} selected objects`);\n  }\n  \n  // ==================== Object Management ====================\n\n  loadState(canvasState) {\n    console.error('========================================');\n    console.error('=== LOAD STATE CALLED ===');\n    console.error('========================================');\n    console.error('Canvas state received:', canvasState);\n    console.error('Canvas state type:', typeof canvasState);\n    console.error('Is array?', Array.isArray(canvasState));\n\n    // Clear existing objects\n    console.error('Clearing existing objects...');\n    this.objects.forEach((obj, id) => {\n      this.deleteObject(id);\n    });\n    console.error('Objects cleared. Map size:', this.objects.size);\n\n    // Load objects from state\n    if (canvasState && typeof canvasState === 'object') {\n      // If it's an array, iterate through it\n      if (Array.isArray(canvasState)) {\n        console.error(`=== Loading ${canvasState.length} objects from ARRAY ===`);\n        canvasState.forEach((objData, index) => {\n          console.error(`Loading object ${index}:`, JSON.stringify(objData));\n          this.createRemoteObject(objData);\n        });\n      } else {\n        // If it's an object/hash, iterate through its values\n        const values = Object.values(canvasState);\n        console.error(`=== Loading ${values.length} objects from OBJECT ===`);\n        values.forEach((objData, index) => {\n          console.error(`Loading object ${index}:`, JSON.stringify(objData));\n          this.createRemoteObject(objData);\n        });\n      }\n    } else {\n      console.error('!!! INVALID canvas state !!!:', canvasState);\n    }\n\n    console.error('========================================');\n    console.error(`=== LOAD STATE COMPLETE: ${this.objects.size} objects ===`);\n    console.error('Current objects in map:', Array.from(this.objects.keys()));\n    console.error('========================================');\n\n    // Trigger viewport culling after loading objects\n    if (this.cullingEnabled) {\n      this.updateVisibleObjects();\n    }\n  }\n\n  applyDelta(id, delta) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    // Apply all properties from delta\n    for (const [key, value] of Object.entries(delta)) {\n      obj[key] = value;\n    }\n\n    // Handle special cases for Graphics objects\n    if (obj instanceof PIXI.Graphics) {\n      if (delta.width !== undefined || delta.height !== undefined ||\n          delta.color !== undefined || delta.rotation !== undefined) {\n        // Trigger redraw for visual properties\n        this.redrawGraphicsObject(obj);\n      }\n    }\n  }\n\n  redrawGraphicsObject(obj) {\n    // Clear and redraw the graphics object based on its current properties\n    obj.clear();\n\n    // Basic rectangle drawing - you might want to extend this for other shapes\n    if (obj.width && obj.height) {\n      obj.beginFill(obj.color || 0xFF0000);\n      obj.drawRect(0, 0, obj.width, obj.height);\n      obj.endFill();\n    }\n\n    // Apply rotation if set\n    if (obj.rotation) {\n      obj.rotation = obj.rotation;\n    }\n  }\n\n  updateObject(id, updates) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    if (updates.x !== undefined) obj.x = updates.x;\n    if (updates.y !== undefined) obj.y = updates.y;\n\n    // For Graphics objects, need to redraw if dimensions change\n    if (obj instanceof PIXI.Graphics) {\n      if (updates.width !== undefined || updates.height !== undefined) {\n        // Recreate the shape - this is simplistic, you might want a better approach\n        console.log('Dimension updates for Graphics require recreation');\n      }\n    }\n  }\n\n  deleteObject(id) {\n    const obj = this.objects.get(id);\n    if (obj) {\n      this.viewport.removeChild(obj);\n      this.objects.delete(id);\n\n      // Destroy object but preserve shared textures\n      obj.destroy({ children: true, texture: false, baseTexture: false });\n\n      // Clean up selection indicator if it exists\n      const indicator = this.selectionIndicators.get(id);\n      if (indicator) {\n        this.viewport.removeChild(indicator);\n        indicator.destroy({ children: true, texture: false, baseTexture: false });\n        this.selectionIndicators.delete(id);\n      }\n\n      // Remove from selected objects set\n      this.selectedObjects.delete(id);\n\n      console.log(`Deleted object ${id} with proper texture preservation`);\n    }\n  }\n\n  deleteObjects(ids) {\n    if (!Array.isArray(ids) || ids.length === 0) {\n      console.warn('deleteObjects: Expected non-empty array of IDs');\n      return;\n    }\n\n    console.log(`Bulk deleting ${ids.length} objects:`, ids);\n\n    // Collect objects to delete for broadcasting\n    const deletedObjects = [];\n\n    // Delete each object\n    ids.forEach(id => {\n      const obj = this.objects.get(id);\n      if (obj) {\n        this.viewport.removeChild(obj);\n        this.objects.delete(id);\n\n        // Destroy object but preserve shared textures\n        obj.destroy({ children: true, texture: false, baseTexture: false });\n\n        // Clean up selection indicator if it exists\n        const indicator = this.selectionIndicators.get(id);\n        if (indicator) {\n          this.viewport.removeChild(indicator);\n          indicator.destroy({ children: true, texture: false, baseTexture: false });\n          this.selectionIndicators.delete(id);\n        }\n\n        // Remove from selected objects set\n        this.selectedObjects.delete(id);\n\n        deletedObjects.push(id);\n      } else {\n        console.warn(`Object ${id} not found for deletion`);\n      }\n    });\n\n    console.log(`Bulk deleted ${deletedObjects.length} objects successfully`);\n\n    // Return deleted IDs for broadcasting\n    return deletedObjects;\n  }\n\n  verifyObjectDeletion(ids) {\n    if (!Array.isArray(ids)) {\n      ids = [ids];\n    }\n\n    let allClean = true;\n    const issues = [];\n\n    ids.forEach(id => {\n      // Check if object still exists in maps\n      if (this.objects.has(id)) {\n        issues.push(`Object ${id} still in objects map`);\n        allClean = false;\n      }\n\n      if (this.selectionIndicators.has(id)) {\n        issues.push(`Selection indicator for ${id} still exists`);\n        allClean = false;\n      }\n\n      if (this.selectedObjects.has(id)) {\n        issues.push(`Object ${id} still in selectedObjects set`);\n        allClean = false;\n      }\n\n      // Check if PIXI object still has parent (indicating it's still in scene)\n      const obj = this.viewport.children.find(child => child._objectId === id);\n      if (obj) {\n        issues.push(`Object ${id} still in viewport children`);\n        allClean = false;\n      }\n    });\n\n    // Check for orphaned PIXI objects in viewport\n    const orphanedPixiObjects = this.viewport.children.filter(child => {\n      // Look for objects that don't have corresponding entries in our maps\n      return child._objectId && !this.objects.has(child._objectId);\n    });\n\n    if (orphanedPixiObjects.length > 0) {\n      issues.push(`${orphanedPixiObjects.length} orphaned PIXI objects found in viewport`);\n      allClean = false;\n    }\n\n    // Check texture memory (basic check)\n    const textureCount = Object.keys(PIXI.utils.TextureCache).length;\n    if (textureCount > 100) { // Arbitrary threshold\n      issues.push(`High texture count detected: ${textureCount} textures in cache`);\n    }\n\n    if (!allClean) {\n      console.warn('Memory leak verification failed:', issues);\n    } else {\n      console.log(`Memory leak verification passed for ${ids.length} deleted objects`);\n    }\n\n    return {\n      success: allClean,\n      issues: issues,\n      textureCount: textureCount,\n      orphanedObjects: orphanedPixiObjects.length\n    };\n  }\n\n  getMemoryStats() {\n    const pixiChildren = this.viewport.children.length;\n    const objectsInMap = this.objects.size;\n    const selectionIndicators = this.selectionIndicators.size;\n    const selectedObjects = this.selectedObjects.size;\n    const remoteCursors = this.remoteCursors.size;\n\n    return {\n      pixiChildren,\n      objectsInMap,\n      selectionIndicators,\n      selectedObjects,\n      remoteCursors,\n      totalTrackedObjects: objectsInMap + selectionIndicators + selectedObjects + remoteCursors,\n      textureCacheSize: Object.keys(PIXI.utils.TextureCache).length,\n      baseTextureCacheSize: Object.keys(PIXI.utils.BaseTextureCache).length\n    };\n  }\n\n  // ==================== Remote Object Sync ====================\n\n  createRemoteObject(objData) {\n    console.log('Creating remote object:', objData);\n    console.log('Object properties:', {\n      id: objData.id,\n      type: objData.type,\n      x: objData.x,\n      y: objData.y,\n      width: objData.width,\n      height: objData.height,\n      radius: objData.radius,\n      color: objData.color,\n      colorType: typeof objData.color\n    });\n\n    // Convert color to proper format (ensure it's a number)\n    const color = this.normalizeColor(objData.color);\n    console.log('Normalized color:', color, 'type:', typeof color);\n\n    // Infer type from data if missing (backwards compatibility)\n    let type = objData.type;\n    if (!type) {\n      console.warn('Object missing type field, inferring from properties:', objData);\n      if (objData.radius !== undefined) {\n        type = 'circle';\n      } else if (objData.width !== undefined && objData.height !== undefined) {\n        type = 'rectangle';\n      } else if (objData.text !== undefined) {\n        type = 'text';\n      } else {\n        console.error('Cannot infer type for object:', objData);\n        return;\n      }\n    }\n\n    if (type === 'rectangle') {\n      // Validate dimensions\n      if (!objData.width || !objData.height || objData.width <= 0 || objData.height <= 0) {\n        console.warn('Skipping rectangle with invalid dimensions:', objData);\n        return;\n      }\n\n      console.log('Creating rectangle with:', {\n        id: objData.id,\n        x: objData.x,\n        y: objData.y,\n        width: objData.width,\n        height: objData.height,\n        color: color\n      });\n      this.createRectangle(\n        objData.id,\n        objData.x,\n        objData.y,\n        objData.width,\n        objData.height,\n        color\n      );\n      console.log('Rectangle created successfully. Objects in map:', this.objects.size);\n    } else if (type === 'circle') {\n      console.log('Creating circle with:', {\n        id: objData.id,\n        x: objData.x,\n        y: objData.y,\n        radius: objData.radius,\n        color: color\n      });\n      this.createCircle(\n        objData.id,\n        objData.x,\n        objData.y,\n        objData.radius,\n        color\n      );\n      console.log('Circle created successfully');\n    } else if (type === 'text') {\n      console.log('Creating text with:', {\n        id: objData.id,\n        text: objData.text,\n        x: objData.x,\n        y: objData.y,\n        fontSize: objData.fontSize,\n        color: color\n      });\n      this.createText(\n        objData.id,\n        objData.text,\n        objData.x,\n        objData.y,\n        objData.fontSize,\n        color\n      );\n      console.log('Text created successfully');\n    } else {\n      console.error('Unknown object type:', type);\n    }\n  }\n\n  normalizeColor(color) {\n    // If it's already a number (0xRRGGBB format), return it\n    if (typeof color === 'number') {\n      return color;\n    }\n\n    // If it's a hex string like \"#3498db\", convert to number\n    if (typeof color === 'string') {\n      if (color.startsWith('#')) {\n        return parseInt(color.substring(1), 16);\n      }\n      // If it's a string number like \"3498db\", convert to number\n      return parseInt(color, 16);\n    }\n\n    // Default color if something goes wrong\n    return 0x3498db;\n  }\n\n  updateRemoteObject(objectId, delta) {\n    console.log('Updating remote object with delta:', objectId, delta);\n    this.applyDelta(objectId, delta);\n  }\n\n  deleteRemoteObject(objectId) {\n    console.log('Deleting remote object:', objectId);\n    this.deleteObject(objectId);\n  }\n  \n  getObject(id) {\n    return this.objects.get(id);\n  }\n  \n  getAllObjects() {\n    return Array.from(this.objects.entries()).map(([id, obj]) => ({\n      id,\n      type: obj.constructor.name,\n      x: obj.x,\n      y: obj.y\n    }));\n  }\n\n  getPerformanceStats() {\n    return this.performanceMonitor.getStats();\n  }\n  \n  // ==================== Remote Cursors ====================\n  \n  updateRemoteCursor(userId, username, x, y, color) {\n    let cursor = this.remoteCursors.get(userId);\n\n    // Convert color string (like \"#FF6B6B\") to number\n    const colorNum = color && typeof color === 'string' && color.startsWith('#')\n      ? parseInt(color.substring(1), 16)\n      : 0xFF6B6B;\n\n    if (!cursor) {\n      // Create new cursor\n      cursor = new PIXI.Container();\n\n      // Cursor pointer using shared texture and sprite\n      const pointer = new PIXI.Sprite(this.cursorTexture);\n      pointer.tint = colorNum; // Apply color using tint instead of recreating graphics\n\n      // Username label\n      const label = new PIXI.Text(username, {\n        fontSize: 12,\n        fill: 0xFFFFFF,\n        fontWeight: 'bold',\n        stroke: colorNum,\n        strokeThickness: 2,\n        dropShadow: true,\n        dropShadowColor: 0x000000,\n        dropShadowAlpha: 0.7,\n        dropShadowDistance: 1\n      });\n      label.x = 15;\n      label.y = -5; // Position above cursor tip\n\n      cursor.addChild(pointer);\n      cursor.addChild(label);\n      cursor.zIndex = 1000;\n\n      this.remoteCursors.set(userId, cursor);\n      this.viewport.addChild(cursor);\n    }\n\n    // Add interpolation for smooth rendering despite batching/throttling\n    if (!cursor.lastUpdate) {\n      cursor.lastUpdate = { x, y, time: performance.now() };\n    }\n\n    const now = performance.now();\n    const dt = now - cursor.lastUpdate.time;\n\n    if (dt > 0 && dt < 100) { // Interpolate over last 100ms for smoothness\n      const lerpFactor = Math.min(dt / 100, 1);\n      cursor.x = cursor.lastUpdate.x + (x - cursor.lastUpdate.x) * lerpFactor;\n      cursor.y = cursor.lastUpdate.y + (y - cursor.lastUpdate.y) * lerpFactor;\n    } else {\n      // Large time gap or first update - jump to position\n      cursor.x = x;\n      cursor.y = y;\n    }\n\n    cursor.lastUpdate = { x, y, time: now };\n  }\n\n  removeRemoteCursor(userId) {\n    const cursor = this.remoteCursors.get(userId);\n    if (cursor) {\n      this.viewport.removeChild(cursor);\n      cursor.destroy();\n      this.remoteCursors.delete(userId);\n    }\n  }\n\n  clearAllRemoteCursors() {\n    console.log(`Clearing all remote cursors (${this.remoteCursors.size} cursors)`)\n    this.remoteCursors.forEach((cursor, userId) => {\n      this.viewport.removeChild(cursor)\n      cursor.destroy()\n    })\n    this.remoteCursors.clear()\n    console.log('All remote cursors cleared')\n  }\n\n  startPeriodicCleanup(intervalMs = 60000) {\n    // Run cleanup every minute to catch any orphaned objects\n    this.cleanupInterval = setInterval(() => {\n      this.performCleanup()\n    }, intervalMs)\n    console.log(`Started periodic cleanup (every ${intervalMs / 1000}s)`)\n  }\n\n  stopPeriodicCleanup() {\n    if (this.cleanupInterval) {\n      clearInterval(this.cleanupInterval)\n      this.cleanupInterval = null\n      console.log('Stopped periodic cleanup')\n    }\n  }\n\n  performCleanup() {\n    console.log('=== Performing periodic cleanup ===')\n    let orphanedIndicators = 0\n    let orphanedCursors = 0\n\n    // Clean up selection indicators for deleted objects\n    this.selectionIndicators.forEach((indicator, id) => {\n      if (!this.objects.has(id)) {\n        this.viewport.removeChild(indicator)\n        indicator.destroy()\n        this.selectionIndicators.delete(id)\n        orphanedIndicators++\n      }\n    })\n\n    // Clean up selected objects that no longer exist\n    this.selectedObjects.forEach(id => {\n      if (!this.objects.has(id)) {\n        this.selectedObjects.delete(id)\n      }\n    })\n\n    // Clean up remote cursors that haven't updated in a while (>5 minutes)\n    const fiveMinutesAgo = performance.now() - (5 * 60 * 1000)\n    this.remoteCursors.forEach((cursor, userId) => {\n      if (cursor.lastUpdate && cursor.lastUpdate.time < fiveMinutesAgo) {\n        this.removeRemoteCursor(userId)\n        orphanedCursors++\n      }\n    })\n\n    if (orphanedIndicators > 0 || orphanedCursors > 0) {\n      console.log(`Cleanup complete: ${orphanedIndicators} indicators, ${orphanedCursors} cursors removed`)\n    } else {\n      console.log('Cleanup complete: No orphaned objects found')\n    }\n  }\n\n  // ==================== Utilities ====================\n  \n  generateId() {\n    return 'obj-' + Math.random().toString(36).substr(2, 9);\n  }\n  \n  setColor(color) {\n    this.currentColor = color;\n  }\n  \n  getCanvasState() {\n    const objects = [];\n    this.objects.forEach((obj, id) => {\n      // Serialize object data\n      objects.push({\n        id,\n        type: obj.constructor.name,\n        x: obj.x,\n        y: obj.y,\n        // Add more properties as needed\n      });\n    });\n    return { objects };\n  }\n\n  destroy() {\n    // Clean up performance monitor\n    if (this.performanceMonitor) {\n      this.performanceMonitor.destroy();\n    }\n\n    // Clean up shared cursor texture\n    if (this.cursorTexture) {\n      this.cursorTexture.destroy();\n    }\n\n    // Clean up PIXI objects\n    this.objects.forEach(obj => {\n      if (obj && typeof obj.destroy === 'function') {\n        obj.destroy();\n      }\n    });\n    this.objects.clear();\n\n    this.selectionIndicators.forEach(indicator => {\n      if (indicator && typeof indicator.destroy === 'function') {\n        indicator.destroy();\n      }\n    });\n    this.selectionIndicators.clear();\n\n    this.remoteCursors.forEach(cursor => {\n      if (cursor && typeof cursor.destroy === 'function') {\n        cursor.destroy();\n      }\n    });\n    this.remoteCursors.clear();\n  }\n  \n  // Callbacks - set these from outside\n  onObjectCreated = null;\n  onObjectMoved = null;\n  onObjectDeleted = null;\n  onCursorMoved = null;\n}\n","// websocket.js - WebSocket client for real-time synchronization\n\nexport class LatencyMonitor {\n    constructor(options = {}) {\n        this.maxHistorySize = options.maxHistorySize || 1000\n        this.warningThreshold = options.warningThreshold || 100 // 100ms\n        this.pendingMessages = new Map() // messageId -> { sentTime, type }\n        this.latencyHistory = [] // Array of latency measurements\n        this.stats = {\n            totalMessages: 0,\n            averageLatency: 0,\n            minLatency: Infinity,\n            maxLatency: 0,\n            warningCount: 0\n        }\n    }\n\n    startTracking(messageId, messageType) {\n        this.pendingMessages.set(messageId, {\n            sentTime: performance.now(),\n            type: messageType\n        })\n    }\n\n    endTracking(messageId) {\n        const pending = this.pendingMessages.get(messageId)\n        if (!pending) {\n            return null // Message not found or already tracked\n        }\n\n        const latency = performance.now() - pending.sentTime\n        this.pendingMessages.delete(messageId)\n\n        // Record latency\n        this.recordLatency(latency, pending.type)\n\n        // Warn if high latency\n        if (latency > this.warningThreshold) {\n            console.warn(`⚠️ High latency detected: ${Math.round(latency)}ms for ${pending.type} message`)\n            this.stats.warningCount++\n        }\n\n        return latency\n    }\n\n    recordLatency(latency, messageType) {\n        // Add to history\n        this.latencyHistory.push({\n            latency,\n            type: messageType,\n            timestamp: Date.now()\n        })\n\n        // Trim history if too large\n        if (this.latencyHistory.length > this.maxHistorySize) {\n            this.latencyHistory.shift()\n        }\n\n        // Update stats\n        this.stats.totalMessages++\n        this.stats.minLatency = Math.min(this.stats.minLatency, latency)\n        this.stats.maxLatency = Math.max(this.stats.maxLatency, latency)\n\n        // Recalculate average\n        const sum = this.latencyHistory.reduce((acc, item) => acc + item.latency, 0)\n        this.stats.averageLatency = sum / this.latencyHistory.length\n    }\n\n    getPercentile(percentile) {\n        if (this.latencyHistory.length === 0) {\n            return 0\n        }\n\n        // Sort latencies\n        const sorted = this.latencyHistory\n            .map(item => item.latency)\n            .sort((a, b) => a - b)\n\n        // Calculate percentile index\n        const index = Math.ceil((percentile / 100) * sorted.length) - 1\n        return sorted[Math.max(0, index)]\n    }\n\n    getStats() {\n        return {\n            totalMessages: this.stats.totalMessages,\n            averageLatency: Math.round(this.stats.averageLatency * 100) / 100,\n            minLatency: this.stats.minLatency === Infinity ? 0 : Math.round(this.stats.minLatency * 100) / 100,\n            maxLatency: Math.round(this.stats.maxLatency * 100) / 100,\n            p50: Math.round(this.getPercentile(50) * 100) / 100,\n            p95: Math.round(this.getPercentile(95) * 100) / 100,\n            p99: Math.round(this.getPercentile(99) * 100) / 100,\n            warningCount: this.stats.warningCount,\n            historySize: this.latencyHistory.length,\n            pendingMessages: this.pendingMessages.size\n        }\n    }\n\n    getStatsByType(messageType) {\n        const filtered = this.latencyHistory.filter(item => item.type === messageType)\n        if (filtered.length === 0) {\n            return null\n        }\n\n        const latencies = filtered.map(item => item.latency).sort((a, b) => a - b)\n        const sum = latencies.reduce((acc, val) => acc + val, 0)\n\n        const getPercentile = (p) => {\n            const index = Math.ceil((p / 100) * latencies.length) - 1\n            return latencies[Math.max(0, index)]\n        }\n\n        return {\n            messageType,\n            count: filtered.length,\n            averageLatency: Math.round((sum / filtered.length) * 100) / 100,\n            minLatency: Math.round(latencies[0] * 100) / 100,\n            maxLatency: Math.round(latencies[latencies.length - 1] * 100) / 100,\n            p50: Math.round(getPercentile(50) * 100) / 100,\n            p95: Math.round(getPercentile(95) * 100) / 100,\n            p99: Math.round(getPercentile(99) * 100) / 100\n        }\n    }\n\n    logStats() {\n        const stats = this.getStats()\n        console.log('=== Latency Statistics ===')\n        console.log(`Total messages: ${stats.totalMessages}`)\n        console.log(`Average latency: ${stats.averageLatency}ms`)\n        console.log(`Min latency: ${stats.minLatency}ms`)\n        console.log(`Max latency: ${stats.maxLatency}ms`)\n        console.log(`P50 (median): ${stats.p50}ms`)\n        console.log(`P95: ${stats.p95}ms`)\n        console.log(`P99: ${stats.p99}ms`)\n        console.log(`High latency warnings: ${stats.warningCount}`)\n        console.log(`History size: ${stats.historySize}`)\n        console.log(`Pending messages: ${stats.pendingMessages}`)\n    }\n\n    reset() {\n        this.pendingMessages.clear()\n        this.latencyHistory = []\n        this.stats = {\n            totalMessages: 0,\n            averageLatency: 0,\n            minLatency: Infinity,\n            maxLatency: 0,\n            warningCount: 0\n        }\n    }\n}\n\nexport class CursorThrottle {\n    constructor(sendCallback, intervalMs = 50) { // 20/sec = 50ms\n        this.sendCallback = sendCallback\n        this.intervalMs = intervalMs\n        this.pendingCursor = null\n        this.intervalId = null\n        this.start()\n    }\n\n    start() {\n        this.intervalId = setInterval(() => {\n            if (this.pendingCursor) {\n                this.sendCallback(this.pendingCursor.x, this.pendingCursor.y)\n                this.pendingCursor = null\n            }\n        }, this.intervalMs)\n    }\n\n    update(x, y) {\n        this.pendingCursor = { x, y } // Always update to latest\n    }\n\n    stop() {\n        if (this.intervalId) {\n            clearInterval(this.intervalId)\n            this.intervalId = null\n        }\n    }\n}\n\nexport class WebSocketClient {\n    constructor(url, sessionId, canvasId) {\n        this.url = url\n        this.sessionId = sessionId\n        this.canvasId = canvasId\n        this.ws = null\n        this.isConnected = false\n        this.reconnectAttempts = 0\n        this.maxReconnectAttempts = 5\n        this.reconnectDelay = 1000\n\n        // Message ID counter for latency tracking\n        this.messageIdCounter = 0\n\n        // Latency monitoring\n        this.latencyMonitor = new LatencyMonitor({\n            maxHistorySize: 1000,\n            warningThreshold: 100 // 100ms\n        })\n\n        // Bandwidth tracking for delta compression testing\n        this.bandwidthStats = {\n            totalBytesReceived: 0,\n            objectUpdateMessages: 0,\n            startTime: Date.now()\n        }\n\n        // Cursor throttling using CursorThrottle class\n        this.cursorThrottle = new CursorThrottle((x, y) => {\n            this.send({ type: 'cursor', x, y })\n        })\n\n        // Callbacks\n        this.onAuthSuccess = () => {}\n        this.onAuthFailed = () => {}\n        this.onUserConnected = () => {}\n        this.onUserDisconnected = () => {}\n        this.onPresenceUpdate = () => {}\n        this.onCursorUpdate = () => {}\n        this.onObjectCreated = () => {}\n        this.onObjectUpdated = () => {}\n        this.onObjectDeleted = () => {}\n        this.onObjectsDeleted = () => {}\n        this.onError = () => {}\n        this.onReconnecting = () => {}\n        this.onReconnected = () => {}\n    }\n\n    connect() {\n        console.log(`Connecting to WebSocket: ${this.url}`)\n\n        try {\n            this.ws = new WebSocket(this.url)\n            this.setupEventHandlers()\n        } catch (error) {\n            console.error('WebSocket connection error:', error)\n            this.onError(error)\n            this.scheduleReconnect()\n        }\n    }\n\n    setupEventHandlers() {\n        this.ws.onopen = () => {\n            console.log('WebSocket connected')\n            this.isConnected = true\n            this.reconnectAttempts = 0\n\n            // Send authentication message\n            this.send({\n                type: 'auth',\n                sessionId: this.sessionId,\n                canvasId: this.canvasId\n            })\n\n            if (this.reconnectAttempts > 0) {\n                this.onReconnected()\n            }\n        }\n\n        this.ws.onmessage = (event) => {\n            try {\n                const data = JSON.parse(event.data)\n                this.handleMessage(data)\n            } catch (error) {\n                console.error('Error parsing WebSocket message:', error)\n                this.onError(error)\n            }\n        }\n\n        this.ws.onclose = (event) => {\n            console.log('WebSocket disconnected:', event.code, event.reason)\n            this.isConnected = false\n\n            if (!event.wasClean) {\n                this.scheduleReconnect()\n            }\n        }\n\n        this.ws.onerror = (error) => {\n            console.error('WebSocket error:', error)\n            this.onError(error)\n        }\n    }\n\n    handleMessage(data) {\n        // Track latency if message has an ID (response to our request)\n        if (data.messageId) {\n            const latency = this.latencyMonitor.endTracking(data.messageId)\n            if (latency !== null && latency < 100) {\n                // Only log sub-100ms latencies at debug level\n                console.debug(`Message ${data.type} latency: ${Math.round(latency)}ms`)\n            }\n        }\n\n        switch (data.type) {\n            case 'auth-success':\n                this.onAuthSuccess(data)\n                break\n\n            case 'auth-failed':\n                this.onAuthFailed(data)\n                break\n\n            case 'user-connected':\n                this.onUserConnected(data)\n                break\n\n            case 'user-disconnected':\n                this.onUserDisconnected(data)\n                break\n\n            case 'presence':\n                this.onPresenceUpdate(data.users)\n                break\n\n            case 'cursor':\n                this.onCursorUpdate(data)\n                break\n\n            case 'cursor-batch':\n                // Handle batched cursor updates\n                if (data.cursors && Array.isArray(data.cursors)) {\n                    data.cursors.forEach(cursor => {\n                        this.onCursorUpdate(cursor)\n                    })\n                }\n                break\n\n            case 'object-create':\n                this.onObjectCreated(data)\n                break\n\n            case 'object-update':\n                // Track bandwidth for delta compression testing\n                const messageSize = JSON.stringify(data).length\n                this.bandwidthStats.totalBytesReceived += messageSize\n                this.bandwidthStats.objectUpdateMessages++\n                console.log(`Object update received: ${messageSize} bytes (total: ${this.bandwidthStats.totalBytesReceived} bytes, ${this.bandwidthStats.objectUpdateMessages} messages)`)\n                this.onObjectUpdated(data)\n                break\n\n            case 'object-delete':\n                this.onObjectDeleted(data)\n                break\n\n            case 'objects-delete':\n                this.onObjectsDeleted(data)\n                break\n\n            case 'error':\n                console.error('Server error:', data.message)\n                this.onError(new Error(data.message))\n                break\n\n            default:\n                console.warn('Unknown message type:', data.type)\n        }\n    }\n\n    send(data, trackLatency = false) {\n        if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n            // Add message ID for latency tracking if requested\n            if (trackLatency && data.type !== 'cursor') {\n                data.messageId = ++this.messageIdCounter\n                this.latencyMonitor.startTracking(data.messageId, data.type)\n            }\n\n            this.ws.send(JSON.stringify(data))\n        } else {\n            console.warn('WebSocket not connected, message not sent:', data)\n        }\n    }\n\n    sendCursorUpdate(x, y) {\n        this.cursorThrottle.update(x, y)\n    }\n\n    sendObjectCreate(object) {\n        this.send({\n            type: 'object-create',\n            object: object\n        }, true) // Enable latency tracking\n    }\n\n    sendObjectUpdate(objectId, updates) {\n        this.send({\n            type: 'object-update',\n            'object-id': objectId,\n            updates: updates\n        }, true) // Enable latency tracking\n    }\n\n    sendObjectDelete(objectId) {\n        this.send({\n            type: 'object-delete',\n            'object-id': objectId\n        }, true) // Enable latency tracking\n    }\n\n    scheduleReconnect() {\n        if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n            console.error('Max reconnection attempts reached')\n            this.onError(new Error('Unable to reconnect to server'))\n            return\n        }\n\n        this.reconnectAttempts++\n        const delay = this.reconnectDelay * Math.pow(2, this.reconnectAttempts - 1)\n\n        console.log(`Attempting to reconnect in ${delay}ms (attempt ${this.reconnectAttempts}/${this.maxReconnectAttempts})`)\n        this.onReconnecting()\n\n        setTimeout(() => {\n            this.connect()\n        }, delay)\n    }\n\n    getBandwidthStats() {\n        const elapsedMinutes = (Date.now() - this.bandwidthStats.startTime) / (1000 * 60)\n        return {\n            totalBytes: this.bandwidthStats.totalBytesReceived,\n            messageCount: this.bandwidthStats.objectUpdateMessages,\n            averageBytesPerMessage: this.bandwidthStats.objectUpdateMessages > 0\n                ? Math.round(this.bandwidthStats.totalBytesReceived / this.bandwidthStats.objectUpdateMessages)\n                : 0,\n            bytesPerMinute: elapsedMinutes > 0\n                ? Math.round(this.bandwidthStats.totalBytesReceived / elapsedMinutes)\n                : 0,\n            elapsedMinutes: Math.round(elapsedMinutes * 10) / 10\n        }\n    }\n\n    getLatencyStats() {\n        return this.latencyMonitor.getStats()\n    }\n\n    getLatencyStatsByType(messageType) {\n        return this.latencyMonitor.getStatsByType(messageType)\n    }\n\n    logLatencyStats() {\n        this.latencyMonitor.logStats()\n    }\n\n    logBandwidthStats() {\n        const stats = this.getBandwidthStats()\n        console.log('Bandwidth Stats (Delta Compression):', {\n            'Total bytes received': `${stats.totalBytes} bytes`,\n            'Object update messages': stats.messageCount,\n            'Avg bytes per message': `${stats.averageBytesPerMessage} bytes`,\n            'Bytes per minute': `${stats.bytesPerMinute} bytes/min`,\n            'Elapsed time': `${stats.elapsedMinutes} minutes`\n        })\n    }\n\n    disconnect() {\n        // Log final bandwidth stats before disconnecting\n        if (this.bandwidthStats.objectUpdateMessages > 0) {\n            console.log('=== Final Bandwidth Stats (Delta Compression) ===')\n            this.logBandwidthStats()\n        }\n\n        // Stop cursor throttle timer\n        if (this.cursorThrottle) {\n            this.cursorThrottle.stop()\n            console.log('Stopped cursor throttle timer')\n        }\n\n        // Close WebSocket connection\n        if (this.ws) {\n            this.ws.close(1000, 'User disconnect')\n            this.ws = null\n            this.isConnected = false\n        }\n\n        console.log('=== Disconnect cleanup complete ===')\n    }\n\n    sendObjectsDelete(objectIds) {\n        this.send({\n            type: 'objects-delete',\n            'object-ids': objectIds\n        })\n    }\n\n    sendObjectsDelete(objectIds) {\n        this.send({\n            type: 'objects-delete',\n            'object-ids': objectIds\n        })\n    }\n}","// auth.js - Authentication UI and logic for CollabCanvas\n\nexport class AuthManager {\n    constructor() {\n        this.modal = document.getElementById('auth-modal')\n        this.loginForm = document.getElementById('login-form')\n        this.registerForm = document.getElementById('register-form')\n        this.setupEventListeners()\n    }\n\n    setupEventListeners() {\n        // Tab switching\n        document.querySelectorAll('.tab-btn').forEach(btn => {\n            btn.addEventListener('click', () => {\n                const tab = btn.dataset.tab\n                this.switchTab(tab)\n            })\n        })\n\n        // Form submissions\n        this.loginForm.addEventListener('submit', async (e) => {\n            e.preventDefault()\n            await this.handleLogin()\n        })\n\n        this.registerForm.addEventListener('submit', async (e) => {\n            e.preventDefault()\n            await this.handleRegister()\n        })\n    }\n\n    switchTab(tab) {\n        // Update tab buttons\n        document.querySelectorAll('.tab-btn').forEach(btn => {\n            btn.classList.toggle('active', btn.dataset.tab === tab)\n        })\n\n        // Update forms\n        document.querySelectorAll('.auth-form').forEach(form => {\n            form.classList.toggle('active', form.id === `${tab}-form`)\n        })\n\n        // Clear errors\n        document.querySelectorAll('.error-message').forEach(err => {\n            err.textContent = ''\n        })\n    }\n\n    showModal() {\n        return new Promise((resolve) => {\n            this.modal.classList.remove('hidden')\n            this.resolveAuth = resolve\n        })\n    }\n\n    hideModal() {\n        this.modal.classList.add('hidden')\n    }\n\n    async handleLogin() {\n        const email = document.getElementById('login-email').value\n        const password = document.getElementById('login-password').value\n        const errorEl = document.getElementById('login-error')\n\n        try {\n            const response = await fetch('/api/login', {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ email, password })\n            })\n\n            const data = await response.json()\n\n            if (data.success && data.data) {\n                this.hideModal()\n                this.resolveAuth({\n                    sessionId: data.data['session-id'],\n                    userId: data.data['user-id'],\n                    username: data.data.username\n                })\n            } else {\n                errorEl.textContent = data.error || 'Login failed'\n            }\n        } catch (error) {\n            console.error('Login error:', error)\n            errorEl.textContent = 'Connection error. Please try again.'\n        }\n    }\n\n    async handleRegister() {\n        const username = document.getElementById('register-username').value\n        const email = document.getElementById('register-email').value\n        const password = document.getElementById('register-password').value\n        const errorEl = document.getElementById('register-error')\n\n        try {\n            const response = await fetch('/api/register', {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ username, email, password })\n            })\n\n            const data = await response.json()\n\n            if (data.success) {\n                // Auto-login after registration\n                await this.loginAfterRegister(email, password)\n            } else {\n                errorEl.textContent = data.error || 'Registration failed'\n            }\n        } catch (error) {\n            console.error('Registration error:', error)\n            errorEl.textContent = 'Connection error. Please try again.'\n        }\n    }\n\n    async loginAfterRegister(email, password) {\n        // Switch to login tab\n        this.switchTab('login')\n\n        // Fill in credentials\n        document.getElementById('login-email').value = email\n        document.getElementById('login-password').value = password\n\n        // Auto-submit\n        await this.handleLogin()\n    }\n}","// main.js - Application entry point for CollabCanvas\n\nimport './styles.css'\nimport * as PIXI from 'pixi.js'\nimport { CanvasManager } from './canvas.js'\nimport { WebSocketClient } from './websocket.js'\nimport { AuthManager } from './auth.js'\n\nclass CollabCanvas {\n    constructor() {\n        this.canvasManager = null\n        this.wsClient = null\n        this.authManager = null\n        this.sessionId = null\n        this.userId = null\n        this.username = null\n        this.canvasId = this.getCanvasId()\n        this.activeUsers = [] // Track active users\n    }\n\n    getCanvasId() {\n        // Get canvas ID from URL or use default shared canvas\n        const params = new URLSearchParams(window.location.search)\n        let canvasId = params.get('canvas')\n\n        if (!canvasId) {\n            // Use a fixed default canvas so all users join the same one\n            canvasId = 'default-canvas'\n            // Update URL without reload\n            const newUrl = new URL(window.location)\n            newUrl.searchParams.set('canvas', canvasId)\n            window.history.replaceState({}, '', newUrl)\n        }\n\n        return canvasId\n    }\n\n    async init() {\n        console.log('Initializing CollabCanvas...')\n\n        // Update canvas ID in status bar\n        document.getElementById('canvas-id').textContent = this.canvasId\n\n        // Initialize authentication\n        this.authManager = new AuthManager()\n\n        // Check for existing session\n        this.sessionId = localStorage.getItem('sessionId')\n\n        if (this.sessionId) {\n            // Validate session with backend\n            const isValid = await this.validateSession()\n\n            if (!isValid) {\n                this.sessionId = null\n                localStorage.removeItem('sessionId')\n            }\n        }\n\n        if (!this.sessionId) {\n            // Hide loading screen and show auth modal\n            this.hideLoadingScreen()\n            const authData = await this.authManager.showModal()\n            this.sessionId = authData.sessionId\n            this.userId = authData.userId\n            this.username = authData.username\n            localStorage.setItem('sessionId', this.sessionId)\n        }\n\n        // Hide loading screen (session is valid)\n        this.hideLoadingScreen()\n\n        // Initialize canvas\n        this.initCanvas()\n\n        // Initialize WebSocket connection\n        this.initWebSocket()\n\n        // Setup UI event handlers\n        this.setupUIHandlers()\n\n        console.log('CollabCanvas initialized successfully')\n    }\n\n    hideLoadingScreen() {\n        const loadingScreen = document.getElementById('loading-screen')\n        if (loadingScreen) {\n            loadingScreen.classList.add('hidden')\n        }\n    }\n\n    async validateSession() {\n        try {\n            const response = await fetch('/api/session', {\n                credentials: 'include',\n                headers: {\n                    'Authorization': this.sessionId\n                }\n            })\n\n            if (response.ok) {\n                const data = await response.json()\n                if (data.success && data.data && data.data.valid) {\n                    this.userId = data.data['user-id']\n                    this.username = data.data.username\n                    console.log('Session restored:', this.username)\n                    return true\n                }\n            }\n        } catch (error) {\n            console.error('Session validation failed:', error)\n        }\n\n        return false\n    }\n\n    initCanvas() {\n        const container = document.getElementById('canvas-container')\n\n        // Create PixiJS application\n        const app = new PIXI.Application({\n            width: window.innerWidth,\n            height: window.innerHeight,\n            backgroundColor: 0x1a1a1a,\n            resizeTo: window\n        })\n\n        container.appendChild(app.view)\n\n        this.canvasManager = new CanvasManager(app)\n\n        // Make performance stats available globally for console access\n        window.getPerformanceStats = () => {\n            return this.canvasManager.getPerformanceStats();\n        };\n\n        // Make latency stats available globally\n        window.getLatencyStats = () => {\n            if (!this.wsClient) return null;\n            return this.wsClient.getLatencyStats();\n        };\n\n        window.logLatencyStats = () => {\n            if (!this.wsClient) {\n                console.warn('WebSocket client not initialized');\n                return;\n            }\n            this.wsClient.logLatencyStats();\n        };\n\n        window.getLatencyStatsByType = (messageType) => {\n            if (!this.wsClient) return null;\n            return this.wsClient.getLatencyStatsByType(messageType);\n        };\n\n        // Set up canvas callbacks for WebSocket synchronization\n        this.canvasManager.onCursorMoved = (x, y) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendCursorUpdate(x, y)\n            }\n        }\n\n        this.canvasManager.onObjectCreated = (object) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectCreate(object)\n            }\n        }\n\n        this.canvasManager.onObjectUpdated = (objectId, updates) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectUpdate(objectId, updates)\n            }\n        }\n\n        this.canvasManager.onObjectDeleted = (objectId) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectDelete(objectId)\n            }\n        }\n\n        this.canvasManager.onObjectsDeleted = (objectIds) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectsDelete(objectIds)\n            }\n        }\n\n        // Update status bar callbacks\n        this.canvasManager.onToolChange = (tool) => {\n            document.getElementById('current-tool').textContent =\n                tool.charAt(0).toUpperCase() + tool.slice(1)\n        }\n\n        this.canvasManager.onMouseMove = (x, y) => {\n            document.getElementById('mouse-position').textContent = `${Math.round(x)}, ${Math.round(y)}`\n        }\n\n        this.canvasManager.onZoomChange = (zoom) => {\n            document.getElementById('zoom-level').textContent = `${Math.round(zoom * 100)}%`\n        }\n\n        this.canvasManager.onObjectCountChange = (count) => {\n            document.getElementById('object-count').textContent = count\n        }\n\n        // Start periodic memory cleanup (every 60 seconds)\n        // This removes orphaned selection indicators and inactive cursors\n        this.canvasManager.startPeriodicCleanup(60000)\n        console.log('Started periodic memory cleanup (60s interval)')\n    }\n\n    initWebSocket() {\n        // Use wss:// for HTTPS pages, ws:// for HTTP\n        const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:'\n        // window.location.host includes port if non-standard (e.g., localhost:8080)\n        const wsUrl = `${wsProtocol}//${window.location.host}/ws/${this.canvasId}`\n\n        this.wsClient = new WebSocketClient(wsUrl, this.sessionId, this.canvasId)\n\n        // Set up WebSocket callbacks\n        this.wsClient.onAuthSuccess = (data) => {\n            console.error('=== WebSocket authenticated ===')\n            console.error('Auth data received:', data)\n\n            // Backend sends 'canvas-state' (kebab-case), not 'canvasState'\n            const canvasState = data['canvas-state'] || data.canvasState\n            console.error('canvasState exists?', !!canvasState)\n            console.error('canvasState type:', typeof canvasState)\n            console.error('canvasState length:', canvasState ? canvasState.length : 0)\n\n            // Load initial canvas state\n            if (canvasState) {\n                console.error('=== CALLING loadState ===')\n                this.canvasManager.loadState(canvasState)\n                console.error('=== loadState RETURNED ===')\n            } else {\n                console.error('=== NO CANVAS STATE IN AUTH RESPONSE ===')\n            }\n        }\n\n        this.wsClient.onUserConnected = (data) => {\n            // Add new user to active users list\n            this.activeUsers.push({\n                'user-id': data.userId || data['user-id'],\n                username: data.username,\n                color: data.color\n            })\n            this.updatePresenceList(this.activeUsers)\n            this.showNotification(`${data.username} joined`, 'info')\n        }\n\n        this.wsClient.onUserDisconnected = (data) => {\n            // Remove user from active users list\n            const userId = data.userId || data['user-id']\n            this.activeUsers = this.activeUsers.filter(u =>\n                (u['user-id'] || u.userId) !== userId\n            )\n            this.updatePresenceList(this.activeUsers)\n            this.canvasManager.removeRemoteCursor(userId)\n            this.showNotification(`${data.username} left`, 'info')\n        }\n\n        this.wsClient.onPresenceUpdate = (users) => {\n            // Replace entire active users list with server's authoritative list\n            this.activeUsers = users\n            this.updatePresenceList(this.activeUsers)\n        }\n\n        this.wsClient.onCursorUpdate = (data) => {\n            this.canvasManager.updateRemoteCursor(\n                data.userId,\n                data.username,\n                data.x,\n                data.y,\n                data.color\n            )\n        }\n\n        this.wsClient.onObjectCreated = (data) => {\n            this.canvasManager.createRemoteObject(data.object)\n        }\n\n        this.wsClient.onObjectUpdated = (data) => {\n            // Backend sends 'object-id' (kebab-case)\n            const objectId = data['object-id'] || data.objectId\n            this.canvasManager.updateRemoteObject(objectId, data.delta)\n        }\n\n        this.wsClient.onObjectDeleted = (data) => {\n            // Remove user from active users list\n            const userId = data.userId || data['user-id']\n            this.activeUsers = this.activeUsers.filter(u =>\n                (u['user-id'] || u.userId) !== userId\n            )\n            this.updatePresenceList(this.activeUsers)\n            this.canvasManager.removeRemoteCursor(userId)\n            this.showNotification(`${data.username} left`, 'info')\n        }\n\n        this.wsClient.onObjectsDeleted = (data) => {\n            const objectIds = data['object-ids'] || data.objectIds || []\n            console.log('Received bulk delete for objects:', objectIds)\n\n            // Handle remote bulk deletion\n            if (objectIds.length > 0) {\n                objectIds.forEach(objectId => {\n                    this.canvasManager.deleteObject(objectId)\n                })\n                console.log(`Processed remote bulk deletion of ${objectIds.length} objects`)\n            }\n        }\n\n        this.wsClient.onError = (error) => {\n            console.error('WebSocket error:', error)\n            this.showNotification('Connection error', 'error')\n        }\n\n        this.wsClient.onReconnecting = () => {\n            this.showNotification('Reconnecting...', 'warning')\n        }\n\n        this.wsClient.onReconnected = () => {\n            this.showNotification('Reconnected', 'success')\n        }\n\n        // Connect to WebSocket\n        this.wsClient.connect()\n    }\n\n    setupUIHandlers() {\n        // Tool buttons\n        document.querySelectorAll('.tool-btn').forEach(btn => {\n            btn.addEventListener('click', () => {\n                const tool = btn.dataset.tool\n                this.canvasManager.setTool(tool)\n\n                // Update active button\n                document.querySelectorAll('.tool-btn').forEach(b =>\n                    b.classList.remove('active'))\n                btn.classList.add('active')\n            })\n        })\n\n        // Color picker\n        const colorPicker = document.getElementById('color-picker')\n        colorPicker.addEventListener('change', (e) => {\n            this.canvasManager.setColor(e.target.value)\n        })\n\n        // Keyboard shortcuts\n        document.addEventListener('keydown', (e) => {\n            // Prevent shortcuts when typing in inputs\n            if (e.target.tagName === 'INPUT') return\n\n            switch(e.key.toLowerCase()) {\n                case 'v':\n                    this.selectTool('select')\n                    break\n                case 'r':\n                    this.selectTool('rectangle')\n                    break\n                case 'c':\n                    this.selectTool('circle')\n                    break\n                case 'p':\n                    if (e.ctrlKey && e.shiftKey) {\n                        e.preventDefault()\n                        this.runPerformanceTest()\n                    }\n                    break\n                case 'delete':\n                case 'backspace':\n                    if (!e.target.isContentEditable) {\n                        e.preventDefault()\n                        this.canvasManager.deleteSelected()\n                    }\n                    break\n                case 'z':\n                    if (e.ctrlKey || e.metaKey) {\n                        e.preventDefault()\n                        if (e.shiftKey) {\n                            this.canvasManager.redo()\n                        } else {\n                            this.canvasManager.undo()\n                        }\n                    }\n                    break\n            }\n        })\n\n        // Logout button (if added to UI)\n        const logoutBtn = document.getElementById('logout-btn')\n        if (logoutBtn) {\n            logoutBtn.addEventListener('click', async () => {\n                await this.logout()\n            })\n        }\n    }\n\n    selectTool(tool) {\n        this.canvasManager.setTool(tool)\n\n        // Update UI\n        document.querySelectorAll('.tool-btn').forEach(btn => {\n            if (btn.dataset.tool === tool) {\n                btn.classList.add('active')\n            } else {\n                btn.classList.remove('active')\n            }\n        })\n    }\n\n    updatePresenceList(users = []) {\n        const container = document.getElementById('users-container')\n        container.innerHTML = ''\n\n        users.forEach(user => {\n            const userItem = document.createElement('div')\n            userItem.className = 'user-item'\n            // Handle both kebab-case and camelCase keys\n            const username = user.username\n            const color = user.color\n            userItem.innerHTML = `\n                <span class=\"user-indicator\" style=\"background-color: ${color}\"></span>\n                <span>${username}</span>\n            `\n            container.appendChild(userItem)\n        })\n    }\n\n    showNotification(message, type = 'info') {\n        // Simple notification system (can be enhanced with a library)\n        console.log(`[${type.toUpperCase()}] ${message}`)\n\n        // TODO: Implement visual notifications\n    }\n\n    async logout() {\n        try {\n            await fetch('/api/logout', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': this.sessionId\n                }\n            })\n        } catch (error) {\n            console.error('Logout error:', error)\n        }\n\n        // Clean up\n        localStorage.removeItem('sessionId')\n\n        // Stop periodic cleanup timer\n        if (this.canvasManager) {\n            this.canvasManager.stopPeriodicCleanup()\n        }\n\n        // Disconnect WebSocket (also cleans up cursor throttle)\n        if (this.wsClient) {\n            this.wsClient.disconnect()\n        }\n\n        // Reload page to show login\n        window.location.reload()\n    }\n\n    async runPerformanceTest() {\n        console.log('Performance testing is not available in production build');\n        console.log('Use development build (npm run dev) for performance testing');\n    }\n}\n\n// Initialize application when DOM is ready\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n        const app = new CollabCanvas()\n        app.init()\n        window.collabCanvas = app // For debugging\n    })\n} else {\n    const app = new CollabCanvas()\n    app.init()\n    window.collabCanvas = app // For debugging\n}"],"names":["PerformanceMonitor","app","canvasManager","deltaTime","now","deltaMs","avgFps","objectCount","a","b","CanvasManager","__publicField","PIXI.Container","graphics","PIXI.Graphics","texture","PIXI.SCALE_MODES","grid","gridSize","gridExtent","x","y","canvas","e","dx","dy","zoomFactor","mouseX","mouseY","worldPosBefore","newScale","worldPosAfter","screenX","screenY","worldX","worldY","tool","drawStart","previewShape","worldPos","width","height","radius","objData","viewportBounds","obj","id","objBounds","isVisible","screenWidth","screenHeight","topLeft","bottomRight","start","end","color","rect","circle","text","fontSize","textObj","PIXI.Text","dragData","dragOffset","lastDragUpdate","dragUpdateInterval","event","cursorPos","newPosition","existingIndicator","indicator","idsToDelete","deletedIds","canvasState","index","values","delta","key","value","updates","ids","deletedObjects","allClean","issues","child","orphanedPixiObjects","textureCount","PIXI.utils.TextureCache","pixiChildren","objectsInMap","selectionIndicators","selectedObjects","remoteCursors","PIXI.utils.BaseTextureCache","type","objectId","userId","username","cursor","colorNum","pointer","PIXI.Sprite","label","dt","lerpFactor","intervalMs","orphanedIndicators","orphanedCursors","fiveMinutesAgo","objects","LatencyMonitor","options","messageId","messageType","pending","latency","sum","acc","item","percentile","sorted","filtered","latencies","val","getPercentile","p","stats","CursorThrottle","sendCallback","WebSocketClient","url","sessionId","canvasId","error","data","messageSize","trackLatency","object","delay","elapsedMinutes","objectIds","AuthManager","btn","tab","form","err","resolve","email","password","errorEl","CollabCanvas","newUrl","authData","loadingScreen","response","container","PIXI.Application","zoom","count","wsProtocol","wsUrl","u","users","logoutBtn","user","userItem","message"],"mappings":"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"}
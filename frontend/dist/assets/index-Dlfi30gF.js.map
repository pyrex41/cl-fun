{"version":3,"file":"index-Dlfi30gF.js","sources":["../../src/physics.js","../../src/canvas.js","../../src/websocket.js","../../src/auth.js","../../src/main.js"],"sourcesContent":["/**\n * physics.js - 2D Physics Engine for CollabCanvas Living Canvas\n *\n * JavaScript port of backend/src/physics.lisp for client-side prediction.\n * Implements Verlet integration physics engine with:\n * - Circles as dynamic objects (affected by physics)\n * - Rectangles as static walls/platforms\n * - Mass proportional to radius (area-based)\n * - Global gravity\n * - Boundary constraints (bounce)\n * - Circle-circle and circle-rectangle collision detection\n *\n * CRITICAL: All math must match backend/src/physics.lisp exactly for determinism!\n */\n\n// ============================================================================\n// Physics Constants (MUST match backend/src/physics.lisp)\n// ============================================================================\n\nexport const PHYSICS_TIMESTEP = 0.02;          // Fixed timestep: 50 steps/second\nexport const DEFAULT_GRAVITY = 9.8;            // Default gravity acceleration\nexport const DEFAULT_FRICTION = 0.02;          // Air friction coefficient\nexport const DEFAULT_RESTITUTION = 0.7;        // Bounciness (0=dead, 1=perfectly elastic)\nexport const CANVAS_WIDTH = 4000;              // Physics simulation width\nexport const CANVAS_HEIGHT = 3000;             // Physics simulation height\n\n// ============================================================================\n// Physics Object Class\n// ============================================================================\n\nexport class PhysicsObject {\n  constructor(config) {\n    this.id = config.id;                      // Object ID (string)\n    this.type = config.type;                  // 'circle' or 'rectangle'\n    this.x = config.x;                        // Current X position\n    this.y = config.y;                        // Current Y position\n    this.oldX = config.oldX || config.x;      // Previous X (for Verlet integration)\n    this.oldY = config.oldY || config.y;      // Previous Y\n    this.vx = config.vx || 0.0;               // Velocity X (derived from position delta)\n    this.vy = config.vy || 0.0;               // Velocity Y\n    this.ax = config.ax || 0.0;               // Acceleration X\n    this.ay = config.ay || 0.0;               // Acceleration Y\n    this.radius = config.radius;              // For circles\n    this.width = config.width;                // For rectangles\n    this.height = config.height;              // For rectangles\n    this.mass = config.mass;                  // Mass (derived from size)\n    this.isDynamic = config.isDynamic !== undefined ? config.isDynamic : true;  // T if affected by physics\n    this.restitution = config.restitution || DEFAULT_RESTITUTION;  // Bounciness\n    this.friction = config.friction || DEFAULT_FRICTION;           // Friction coefficient\n    this.color = config.color || '#3498db';   // Color (hex string)\n  }\n}\n\n// ============================================================================\n// Physics Engine State\n// ============================================================================\n\nexport class PhysicsEngine {\n  constructor() {\n    this.objects = new Map();                 // Map of physics objects by ID\n    this.globalGravity = DEFAULT_GRAVITY;     // Current global gravity value\n    this.paused = true;                       // Whether physics simulation is paused\n    this.boundaryMode = 'contain';            // Boundary behavior: 'contain' (bounce) or 'wrap'\n  }\n\n  // ==========================================================================\n  // Object Creation and Management\n  // ==========================================================================\n\n  /**\n   * Create a dynamic circle physics object\n   */\n  createCircle(id, x, y, radius, options = {}) {\n    const isDynamic = options.isDynamic !== undefined ? options.isDynamic : true;\n    const color = options.color || '#3498db';\n    const mass = this.calculateMassFromRadius(radius);\n\n    const obj = new PhysicsObject({\n      id,\n      type: 'circle',\n      x,\n      y,\n      oldX: x,\n      oldY: y,\n      vx: 0.0,\n      vy: 0.0,\n      ax: 0.0,\n      ay: 0.0,\n      radius,\n      mass,\n      isDynamic,\n      restitution: DEFAULT_RESTITUTION,\n      friction: DEFAULT_FRICTION,\n      color\n    });\n\n    this.objects.set(id, obj);\n    return obj;\n  }\n\n  /**\n   * Create a static rectangle (wall/platform)\n   */\n  createRectangle(id, x, y, width, height, options = {}) {\n    const color = options.color || '#95a5a6';\n\n    const obj = new PhysicsObject({\n      id,\n      type: 'rectangle',\n      x,\n      y,\n      oldX: x,\n      oldY: y,\n      vx: 0.0,\n      vy: 0.0,\n      ax: 0.0,\n      ay: 0.0,\n      width,\n      height,\n      mass: 0.0,            // Static objects have infinite mass\n      isDynamic: false,     // Never moves\n      restitution: 0.8,\n      friction: 0.1,\n      color\n    });\n\n    this.objects.set(id, obj);\n    return obj;\n  }\n\n  /**\n   * Remove an object from the physics simulation\n   */\n  removeObject(id) {\n    return this.objects.delete(id);\n  }\n\n  /**\n   * Get a physics object by ID\n   */\n  getObject(id) {\n    return this.objects.get(id);\n  }\n\n  /**\n   * Remove all physics objects\n   */\n  clearAll() {\n    this.objects.clear();\n  }\n\n  // ==========================================================================\n  // Mass Calculation\n  // ==========================================================================\n\n  /**\n   * Calculate mass based on circle area (π * r²)\n   */\n  calculateMassFromRadius(radius) {\n    return Math.PI * radius * radius;\n  }\n\n  // ==========================================================================\n  // Verlet Integration\n  // ==========================================================================\n\n  /**\n   * Update position using Verlet integration\n   * MUST match backend/src/physics.lisp integrate-verlet exactly!\n   */\n  integrateVerlet(obj, dt) {\n    if (!obj.isDynamic) return;\n\n    const dt2 = dt * dt;\n\n    // Calculate velocity from position delta (Verlet)\n    let vx = obj.x - obj.oldX;\n    let vy = obj.y - obj.oldY;\n\n    // Apply friction (air resistance)\n    const frictionFactor = 1.0 - obj.friction;\n    vx *= frictionFactor;\n    vy *= frictionFactor;\n\n    // Calculate new position\n    const newX = obj.x + vx + (obj.ax * dt2);\n    const newY = obj.y + vy + (obj.ay * dt2);\n\n    // Store old position\n    obj.oldX = obj.x;\n    obj.oldY = obj.y;\n\n    // Update position\n    obj.x = newX;\n    obj.y = newY;\n\n    // Store velocity for external use\n    obj.vx = vx / dt;\n    obj.vy = vy / dt;\n\n    // Reset acceleration\n    obj.ax = 0.0;\n    obj.ay = 0.0;\n  }\n\n  // ==========================================================================\n  // Forces\n  // ==========================================================================\n\n  /**\n   * Apply global gravity force to object\n   * MUST match backend/src/physics.lisp apply-gravity exactly!\n   */\n  applyGravity(obj) {\n    if (obj.isDynamic) {\n      obj.ay += this.globalGravity;\n    }\n  }\n\n  /**\n   * Apply a force to an object (F = ma, so a = F/m)\n   */\n  applyForce(obj, fx, fy) {\n    if (obj.isDynamic && obj.mass > 0) {\n      obj.ax += fx / obj.mass;\n      obj.ay += fy / obj.mass;\n    }\n  }\n\n  // ==========================================================================\n  // Boundary Constraints\n  // ==========================================================================\n\n  /**\n   * Apply canvas boundary constraints\n   * MUST match backend/src/physics.lisp apply-boundary-constraints exactly!\n   */\n  applyBoundaryConstraints(obj) {\n    if (!obj.isDynamic) return;\n\n    if (obj.type === 'circle') {\n      const r = obj.radius;\n      const restitution = obj.restitution;\n\n      // Left/Right walls\n      if (obj.x < r) {\n        obj.x = r;\n        // Reverse velocity (bounce)\n        const vx = obj.x - obj.oldX;\n        obj.oldX = obj.x + (vx * restitution);\n      }\n\n      if (obj.x > (CANVAS_WIDTH - r)) {\n        obj.x = CANVAS_WIDTH - r;\n        const vx = obj.x - obj.oldX;\n        obj.oldX = obj.x + (vx * restitution);\n      }\n\n      // Top/Bottom walls\n      if (obj.y < r) {\n        obj.y = r;\n        const vy = obj.y - obj.oldY;\n        obj.oldY = obj.y + (vy * restitution);\n      }\n\n      if (obj.y > (CANVAS_HEIGHT - r)) {\n        obj.y = CANVAS_HEIGHT - r;\n        const vy = obj.y - obj.oldY;\n        obj.oldY = obj.y + (vy * restitution);\n      }\n    }\n  }\n\n  // ==========================================================================\n  // Collision Detection\n  // ==========================================================================\n\n  /**\n   * Check and resolve collision between two circles\n   * MUST match backend/src/physics.lisp check-circle-circle-collision exactly!\n   */\n  checkCircleCircleCollision(c1, c2) {\n    const dx = c2.x - c1.x;\n    const dy = c2.y - c1.y;\n    const distSq = (dx * dx) + (dy * dy);\n    const rSum = c1.radius + c2.radius;\n    const rSumSq = rSum * rSum;\n\n    if (distSq < rSumSq) {\n      // Collision detected\n      const dist = Math.sqrt(distSq);\n      const overlap = rSum - dist;\n      const nx = dx / dist;\n      const ny = dy / dist;\n\n      // Move circles apart proportional to their masses\n      const totalMass = c1.mass + c2.mass;\n      const ratio1 = totalMass > 0 ? c2.mass / totalMass : 0.5;\n      const ratio2 = totalMass > 0 ? c1.mass / totalMass : 0.5;\n\n      // Separate circles\n      if (c1.isDynamic) {\n        c1.x -= overlap * nx * ratio1;\n        c1.y -= overlap * ny * ratio1;\n      }\n\n      if (c2.isDynamic) {\n        c2.x += overlap * nx * ratio2;\n        c2.y += overlap * ny * ratio2;\n      }\n\n      // Apply elastic collision response (simplified)\n      const restitution = Math.min(c1.restitution, c2.restitution);\n\n      if (c1.isDynamic && c2.isDynamic) {\n        // Exchange velocities along collision normal\n        const v1x = c1.x - c1.oldX;\n        const v1y = c1.y - c1.oldY;\n        const v2x = c2.x - c2.oldX;\n        const v2y = c2.y - c2.oldY;\n\n        // Relative velocity along normal\n        const dvn = ((v1x - v2x) * nx) + ((v1y - v2y) * ny);\n\n        if (dvn < 0) { // Objects moving towards each other\n          // Impulse magnitude\n          const impulse = (1.0 - restitution) * dvn;\n\n          // Apply impulse\n          c1.oldX -= impulse * nx * ratio1;\n          c1.oldY -= impulse * ny * ratio1;\n          c2.oldX += impulse * nx * ratio2;\n          c2.oldY += impulse * ny * ratio2;\n        }\n      }\n\n      return true; // Collision occurred\n    }\n\n    return false;\n  }\n\n  /**\n   * Check and resolve collision between circle and axis-aligned rectangle\n   * MUST match backend/src/physics.lisp check-circle-rectangle-collision exactly!\n   */\n  checkCircleRectangleCollision(circle, rect) {\n    const cx = circle.x;\n    const cy = circle.y;\n    const r = circle.radius;\n    const rx = rect.x;\n    const ry = rect.y;\n    const rw = rect.width;\n    const rh = rect.height;\n\n    // Find closest point on rectangle to circle center\n    const closestX = Math.max(rx, Math.min(cx, rx + rw));\n    const closestY = Math.max(ry, Math.min(cy, ry + rh));\n\n    // Distance from circle center to closest point\n    const dx = cx - closestX;\n    const dy = cy - closestY;\n    const distSq = (dx * dx) + (dy * dy);\n\n    if (distSq < (r * r)) {\n      // Collision detected\n      const dist = Math.sqrt(distSq);\n      const overlap = r - dist;\n      const nx = dist > 0 ? dx / dist : 0;\n      const ny = dist > 0 ? dy / dist : -1; // Default to pushing up\n      const restitution = circle.restitution;\n\n      // Push circle out of rectangle\n      if (circle.isDynamic) {\n        circle.x += overlap * nx;\n        circle.y += overlap * ny;\n\n        // Bounce (reflect velocity)\n        const vx = circle.x - circle.oldX;\n        const vy = circle.y - circle.oldY;\n        const dot = 2 * ((vx * nx) + (vy * ny));\n\n        circle.oldX = circle.x - ((vx - (dot * nx)) * restitution);\n        circle.oldY = circle.y - ((vy - (dot * ny)) * restitution);\n      }\n\n      return true; // Collision occurred\n    }\n\n    return false;\n  }\n\n  /**\n   * Resolve all collisions between physics objects\n   */\n  resolveAllCollisions() {\n    const objects = Array.from(this.objects.values());\n    let collisionCount = 0;\n\n    // Circle-circle collisions\n    for (let i = 0; i < objects.length; i++) {\n      for (let j = i + 1; j < objects.length; j++) {\n        const obj1 = objects[i];\n        const obj2 = objects[j];\n\n        if (obj1.type === 'circle' && obj2.type === 'circle' &&\n            (obj1.isDynamic || obj2.isDynamic)) {\n          if (this.checkCircleCircleCollision(obj1, obj2)) {\n            collisionCount++;\n          }\n        }\n      }\n    }\n\n    // Circle-rectangle collisions\n    for (const obj of objects) {\n      if (obj.type === 'circle' && obj.isDynamic) {\n        for (const other of objects) {\n          if (other.type === 'rectangle') {\n            if (this.checkCircleRectangleCollision(obj, other)) {\n              collisionCount++;\n            }\n          }\n        }\n      }\n    }\n\n    return collisionCount;\n  }\n\n  // ==========================================================================\n  // Main Simulation Step\n  // ==========================================================================\n\n  /**\n   * Execute one physics simulation step\n   * MUST match backend/src/physics.lisp physics-step exactly!\n   */\n  step() {\n    if (this.paused) return;\n\n    const dt = PHYSICS_TIMESTEP;\n\n    // 1. Apply forces\n    for (const obj of this.objects.values()) {\n      this.applyGravity(obj);\n    }\n\n    // 2. Integrate (update positions)\n    for (const obj of this.objects.values()) {\n      this.integrateVerlet(obj, dt);\n    }\n\n    // 3. Apply constraints\n    for (const obj of this.objects.values()) {\n      this.applyBoundaryConstraints(obj);\n    }\n\n    // 4. Resolve collisions (multiple iterations for stability)\n    for (let i = 0; i < 3; i++) {\n      this.resolveAllCollisions();\n    }\n  }\n\n  // ==========================================================================\n  // Utility Functions\n  // ==========================================================================\n\n  /**\n   * Get a snapshot of all dynamic object positions for broadcasting\n   */\n  getStateSnapshot() {\n    const snapshot = [];\n\n    for (const obj of this.objects.values()) {\n      if (obj.isDynamic) {\n        snapshot.push({\n          id: obj.id,\n          x: obj.x,\n          y: obj.y,\n          rotation: 0.0  // For future use\n        });\n      }\n    }\n\n    return snapshot;\n  }\n\n  /**\n   * Set the global gravity value\n   */\n  setGlobalGravity(gravity) {\n    this.globalGravity = gravity;\n  }\n\n  /**\n   * Pause the physics simulation\n   */\n  pause() {\n    this.paused = true;\n  }\n\n  /**\n   * Resume the physics simulation\n   */\n  resume() {\n    this.paused = false;\n  }\n\n  /**\n   * Reset all physics objects to their initial state\n   */\n  reset() {\n    this.pause();\n    this.clearAll();\n  }\n\n  /**\n   * Check if physics is paused\n   */\n  isPaused() {\n    return this.paused;\n  }\n\n  // ==========================================================================\n  // Sync with Canvas State\n  // ==========================================================================\n\n  /**\n   * Sync a canvas object to the physics engine\n   */\n  syncCanvasObject(objData) {\n    const id = objData.id;\n    const type = objData.type;\n    const x = objData.x;\n    const y = objData.y;\n    const color = objData.color;\n    const isDynamic = objData.isDynamic;\n\n    if (type === 'circle') {\n      const radius = objData.radius;\n      if (!this.getObject(id)) {\n        this.createCircle(id, x, y, radius, {\n          isDynamic: isDynamic !== undefined ? isDynamic : true,\n          color: color || '#3498db'\n        });\n      }\n    } else if (type === 'rectangle') {\n      const width = objData.width;\n      const height = objData.height;\n      if (!this.getObject(id)) {\n        this.createRectangle(id, x, y, width, height, {\n          color: color || '#95a5a6'\n        });\n      }\n    }\n  }\n\n  /**\n   * Manually update a physics object's position (e.g., user drag)\n   */\n  updateObjectPosition(id, x, y) {\n    const obj = this.getObject(id);\n    if (obj) {\n      obj.x = x;\n      obj.y = y;\n      obj.oldX = x;\n      obj.oldY = y;\n      obj.vx = 0.0;\n      obj.vy = 0.0;\n    }\n  }\n}\n\n// ============================================================================\n// Export singleton instance (optional - can also create new instances)\n// ============================================================================\n\nexport const physicsEngine = new PhysicsEngine();\n","// src/canvas.js\n// Complete PixiJS Canvas Manager for CollabCanvas\nimport * as PIXI from 'pixi.js';\nimport { PhysicsEngine, PHYSICS_TIMESTEP } from './physics.js';\n\n// Note: CullerPlugin may not be available in all PixiJS v8 builds\n// We have custom viewport culling as a fallback\ntry {\n  // Attempt to import and register CullerPlugin if available\n  if (PIXI.extensions && PIXI.CullerPlugin) {\n    PIXI.extensions.add(PIXI.CullerPlugin);\n    console.log('CullerPlugin registered successfully');\n  }\n} catch (e) {\n  console.log('CullerPlugin not available, using custom culling implementation');\n}\n\nexport class PerformanceMonitor {\n  constructor(app, canvasManager) {\n    this.app = app;\n    this.canvasManager = canvasManager;\n    this.fpsHistory = [];\n    this.maxHistorySize = 60;\n    this.currentFps = 60;\n    this.lastTime = performance.now();\n    this.frameCount = 0;\n\n    // Bind ticker update\n    this.app.ticker.add(this.update.bind(this));\n\n    console.log('PerformanceMonitor initialized');\n  }\n\n  update(deltaTime) {\n    // Calculate FPS based on delta time (in seconds)\n    const now = performance.now();\n    const deltaMs = now - this.lastTime;\n\n    if (deltaMs > 0) {\n      this.currentFps = Math.round(1000 / deltaMs);\n    }\n\n    this.lastTime = now;\n\n    // Add to history\n    this.fpsHistory.push(this.currentFps);\n    if (this.fpsHistory.length > this.maxHistorySize) {\n      this.fpsHistory.shift(); // Remove oldest entry\n    }\n\n    // Check for low FPS and log warnings\n    if (this.currentFps < 55) {\n      const avgFps = this.getAverageFps();\n      const objectCount = this.canvasManager ? this.canvasManager.objects.size : 0;\n      console.warn(`⚠️ Low FPS detected: ${this.currentFps} FPS (avg: ${avgFps.toFixed(1)}, objects: ${objectCount})`);\n    }\n  }\n\n  getAverageFps() {\n    if (this.fpsHistory.length === 0) return 60;\n    const sum = this.fpsHistory.reduce((a, b) => a + b, 0);\n    return sum / this.fpsHistory.length;\n  }\n\n  getStats() {\n    if (this.fpsHistory.length === 0) {\n      return {\n        current: this.currentFps,\n        average: 60,\n        min: 60,\n        max: 60\n      };\n    }\n\n    return {\n      current: this.currentFps,\n      average: Math.round(this.getAverageFps() * 10) / 10,\n      min: Math.min(...this.fpsHistory),\n      max: Math.max(...this.fpsHistory)\n    };\n  }\n\n  destroy() {\n    if (this.app && this.app.ticker) {\n      this.app.ticker.remove(this.update.bind(this));\n    }\n  }\n}\n\nexport class CanvasManager {\n  constructor(app) {\n    this.app = app;\n    this.viewport = new PIXI.Container();\n    this.objects = new Map(); // objectId -> PIXI Graphics\n    this.selectedObjects = new Set();\n    this.selectionIndicators = new Map(); // objectId -> selection box Graphics\n    this.remoteCursors = new Map(); // userId -> cursor container\n\n    // State\n    this.isPanning = false;\n    this.panStart = { x: 0, y: 0 };\n    this.currentTool = 'select'; // 'select', 'rectangle', 'circle', 'text'\n    this.currentColor = 0x3498db; // Default blue\n\n    // Drag state (centralized for performance)\n    this.isDragging = false;\n    this.draggedObject = null;\n    this.draggedObjectId = null;\n    this.dragOffset = { x: 0, y: 0 };\n    this.lastDragUpdate = 0;\n\n    // Viewport culling\n    this.cullingEnabled = true;\n    this.cullingPadding = 200; // Extra padding around viewport for smooth scrolling\n    this.lastViewportBounds = null;\n\n    // Performance monitoring\n    this.performanceMonitor = new PerformanceMonitor(app, this);\n\n    // Shared cursor texture for performance optimization\n    this.cursorTexture = this.createSharedCursorTexture();\n\n    // Physics Engine for client-side prediction\n    this.physicsEngine = new PhysicsEngine();\n    this.physicsEngine.pause(); // Start paused, will resume when needed\n\n    // Physics prediction and reconciliation state\n    this.physicsEnabled = false; // Physics is opt-in per canvas\n    this.lastPhysicsUpdate = 0;\n    this.physicsAccumulator = 0; // For fixed timestep\n    this.reconciliationLerpFactor = 0.3; // Gentle interpolation for server corrections\n\n    // Server snapshot tracking\n    this.lastServerSnapshot = null;\n    this.serverSnapshotTime = 0;\n\n    // Viewport setup\n    this.app.stage.addChild(this.viewport);\n    this.viewport.sortableChildren = true;\n\n    // Enable culling on viewport for PixiJS built-in CullerPlugin (if available)\n    // Falls back to our custom culling implementation in setupViewportCulling()\n    this.viewport.cullable = true;\n\n    // Grid background (optional visual aid)\n    this.drawGrid();\n\n    // Setup interaction\n    this.setupPanZoom();\n    this.setupCentralizedDrag(); // NEW: Centralized drag handler\n    this.setupKeyboardShortcuts();\n    this.setupToolHandlers();\n    this.setupViewportCulling();\n\n    console.log('Canvas initialized');\n  }\n\n  createSharedCursorTexture() {\n    // Create cursor shape using Graphics\n    const graphics = new PIXI.Graphics();\n\n    // Draw cursor pointer (triangle) using v8 builder pattern\n    graphics.poly([\n      { x: 0, y: 0 },\n      { x: 12, y: 18 },\n      { x: 6, y: 18 },\n      { x: 0, y: 24 }\n    ]).fill(0xFFFFFF); // White fill (will be tinted)\n\n    // Render to texture\n    const texture = this.app.renderer.generateTexture(graphics, {\n      resolution: 1,\n      scaleMode: PIXI.SCALE_MODES.LINEAR\n    });\n\n    // Clean up graphics object\n    graphics.destroy();\n\n    return texture;\n  }\n\n  // ==================== Grid ====================\n  \n  drawGrid() {\n    const grid = new PIXI.Graphics();\n    \n    // Enable smooth rendering for grid\n    grid.roundPixels = false;\n\n    const gridSize = 50;\n    const gridExtent = 5000;\n\n    // PixiJS v8 builder pattern for lines\n    // Vertical lines\n    for (let x = -gridExtent; x <= gridExtent; x += gridSize) {\n      grid.moveTo(x, -gridExtent);\n      grid.lineTo(x, gridExtent);\n    }\n\n    // Horizontal lines\n    for (let y = -gridExtent; y <= gridExtent; y += gridSize) {\n      grid.moveTo(-gridExtent, y);\n      grid.lineTo(gridExtent, y);\n    }\n    \n    // Apply stroke at the end with v8 API\n    grid.stroke({ width: 1, color: 0x333333, alpha: 0.3 });\n\n    grid.zIndex = -1;\n    // Grid is non-interactive - optimize event traversal\n    grid.interactive = false;\n    grid.interactiveChildren = false;\n    this.viewport.addChild(grid);\n  }\n  \n  // ==================== Pan & Zoom ====================\n  \n  setupPanZoom() {\n    const canvas = this.app.canvas;\n    \n    // Pan with middle mouse or Alt+drag\n    canvas.addEventListener('mousedown', (e) => {\n      if (e.button === 1 || (e.button === 0 && e.altKey)) {\n        this.isPanning = true;\n        this.panStart = { x: e.clientX, y: e.clientY };\n        canvas.style.cursor = 'grabbing';\n        e.preventDefault();\n      }\n    });\n    \n    canvas.addEventListener('mousemove', (e) => {\n      if (this.isPanning) {\n        const dx = e.clientX - this.panStart.x;\n        const dy = e.clientY - this.panStart.y;\n        \n        this.viewport.x += dx;\n        this.viewport.y += dy;\n        \n        this.panStart = { x: e.clientX, y: e.clientY };\n      }\n    });\n    \n    canvas.addEventListener('mouseup', () => {\n      if (this.isPanning) {\n        this.isPanning = false;\n        canvas.style.cursor = 'default';\n      }\n    });\n    \n    // Zoom with mouse wheel\n    canvas.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      \n      const zoomFactor = e.deltaY > 0 ? 0.9 : 1.1;\n      const mouseX = e.clientX;\n      const mouseY = e.clientY;\n      \n      // Get position before zoom\n      const worldPosBefore = this.screenToWorld(mouseX, mouseY);\n      \n      // Apply zoom\n      const newScale = this.viewport.scale.x * zoomFactor;\n      if (newScale >= 0.1 && newScale <= 10) {\n        this.viewport.scale.set(newScale);\n        \n        // Adjust position to keep mouse over same world point\n        const worldPosAfter = this.screenToWorld(mouseX, mouseY);\n        this.viewport.x += (worldPosAfter.x - worldPosBefore.x) * this.viewport.scale.x;\n        this.viewport.y += (worldPosAfter.y - worldPosBefore.y) * this.viewport.scale.y;\n      }\n    }, { passive: false });\n  }\n\n  // ==================== Centralized Drag (Performance Optimized) ====================\n\n  setupCentralizedDrag() {\n    const canvas = this.app.canvas;\n\n    // Global mousemove handler (only one for all objects)\n    canvas.addEventListener('mousemove', (e) => {\n      if (this.isDragging && this.draggedObject) {\n        const worldPos = this.screenToWorld(e.clientX, e.clientY);\n\n        // Update position immediately\n        this.draggedObject.x = worldPos.x - this.dragOffset.x;\n        this.draggedObject.y = worldPos.y - this.dragOffset.y;\n\n        // Throttle network updates\n        const now = performance.now();\n        if (now - this.lastDragUpdate >= 16) { // 60 FPS\n          if (this.onObjectUpdated) {\n            this.onObjectUpdated(this.draggedObjectId, {\n              x: this.draggedObject.x,\n              y: this.draggedObject.y\n            });\n          }\n          this.lastDragUpdate = now;\n        }\n      }\n    });\n\n    // Global mouseup handler\n    canvas.addEventListener('mouseup', () => {\n      if (this.isDragging && this.draggedObject) {\n        this.draggedObject.alpha = 1;\n\n        // Send final position\n        if (this.onObjectUpdated) {\n          this.onObjectUpdated(this.draggedObjectId, {\n            x: this.draggedObject.x,\n            y: this.draggedObject.y\n          });\n        }\n\n        // Reset drag state\n        this.isDragging = false;\n        this.draggedObject = null;\n        this.draggedObjectId = null;\n      }\n    });\n  }\n\n  screenToWorld(screenX, screenY) {\n    return {\n      x: (screenX - this.viewport.x) / this.viewport.scale.x,\n      y: (screenY - this.viewport.y) / this.viewport.scale.y\n    };\n  }\n  \n  worldToScreen(worldX, worldY) {\n    return {\n      x: worldX * this.viewport.scale.x + this.viewport.x,\n      y: worldY * this.viewport.scale.y + this.viewport.y\n    };\n  }\n  \n  // ==================== Keyboard Shortcuts ====================\n  \n  setupKeyboardShortcuts() {\n    document.addEventListener('keydown', (e) => {\n      // Tool shortcuts\n      if (e.key === 'r' || e.key === 'R') {\n        this.setTool('rectangle');\n      } else if (e.key === 'c' || e.key === 'C') {\n        this.setTool('circle');\n      } else if (e.key === 'e' || e.key === 'E') {\n        this.setTool('emitter');\n      } else if (e.key === 't' || e.key === 'T') {\n        this.setTool('text');\n      } else if (e.key === 'v' || e.key === 'V' || e.key === 'Escape') {\n        this.setTool('select');\n      } else if (e.key === 'Delete' || e.key === 'Backspace') {\n        this.deleteSelected();\n      }\n    });\n  }\n  \n  setTool(tool) {\n    this.currentTool = tool;\n    console.log('Tool:', tool);\n    // Update UI indicator if you have one\n  }\n  \n  // ==================== Tool Handlers ====================\n  \n  setupToolHandlers() {\n    const canvas = this.app.canvas;\n    let drawStart = null;\n    let previewShape = null;\n    let lastPreviewUpdate = 0;\n    let previewUpdatePending = false;\n\n    // Track cursor movement\n    canvas.addEventListener('mousemove', (e) => {\n      const worldPos = this.screenToWorld(e.clientX, e.clientY);\n\n      // Notify about cursor movement\n      if (this.onCursorMoved) {\n        this.onCursorMoved(worldPos.x, worldPos.y);\n      }\n\n      // Handle preview shape drawing with RAF throttling\n      if (drawStart && previewShape && !previewUpdatePending) {\n        previewUpdatePending = true;\n        requestAnimationFrame(() => {\n          const now = performance.now();\n          // Throttle preview updates to 60 FPS\n          if (now - lastPreviewUpdate >= 16) {\n            const currentWorldPos = this.screenToWorld(e.clientX, e.clientY);\n            const width = currentWorldPos.x - drawStart.x;\n            const height = currentWorldPos.y - drawStart.y;\n\n            previewShape.clear();\n\n            // PixiJS v8 builder pattern\n            if (this.currentTool === 'rectangle') {\n              previewShape.rect(drawStart.x, drawStart.y, width, height).fill(this.currentColor);\n            } else if (this.currentTool === 'circle') {\n              const radius = Math.sqrt(width * width + height * height);\n              previewShape.circle(drawStart.x, drawStart.y, radius).fill(this.currentColor);\n            }\n            lastPreviewUpdate = now;\n          }\n          previewUpdatePending = false;\n        });\n      }\n    });\n\n    canvas.addEventListener('mousedown', (e) => {\n      if (e.button !== 0 || e.altKey) return; // Left click only, not panning\n\n      const worldPos = this.screenToWorld(e.clientX, e.clientY);\n\n      if (this.currentTool === 'rectangle' || this.currentTool === 'circle') {\n        drawStart = worldPos;\n\n        // Create preview shape with smooth rendering\n        previewShape = new PIXI.Graphics();\n        previewShape.alpha = 0.5;\n        previewShape.roundPixels = false;\n        this.viewport.addChild(previewShape);\n      } else if (this.currentTool === 'emitter') {\n        // Emitters are created immediately on click (no drag needed)\n        const objData = this.createToolObject(worldPos, worldPos);\n\n        // Notify about new object (callback to WebSocket)\n        if (this.onObjectCreated) {\n          this.onObjectCreated(objData);\n        }\n      }\n    });\n\n    canvas.addEventListener('mouseup', (e) => {\n      if (drawStart && previewShape) {\n        const worldPos = this.screenToWorld(e.clientX, e.clientY);\n        \n        // Create actual object\n        const objData = this.createToolObject(drawStart, worldPos);\n        \n        // Clean up preview\n        this.viewport.removeChild(previewShape);\n        previewShape = null;\n        drawStart = null;\n        \n        // Notify about new object (callback to WebSocket)\n        if (this.onObjectCreated) {\n          this.onObjectCreated(objData);\n        }\n      }\n    });\n  }\n\n  // ==================== Viewport Culling ====================\n\n  setupViewportCulling() {\n    // Listen for viewport changes (pan and zoom)\n    this.app.ticker.add(() => {\n      if (this.cullingEnabled) {\n        this.updateVisibleObjects();\n      }\n    });\n\n    // Setup physics prediction loop (runs at 60 FPS with fixed timestep)\n    this.app.ticker.add((deltaTime) => {\n      if (this.physicsEnabled && !this.physicsEngine.isPaused()) {\n        this.updatePhysicsPrediction(deltaTime);\n      }\n    });\n  }\n\n  updateVisibleObjects() {\n    // Calculate current viewport bounds in world coordinates\n    const viewportBounds = this.getViewportBounds();\n\n    // Check if viewport has changed significantly\n    if (!this.lastViewportBounds ||\n        Math.abs(viewportBounds.left - this.lastViewportBounds.left) > 50 ||\n        Math.abs(viewportBounds.top - this.lastViewportBounds.top) > 50 ||\n        Math.abs(viewportBounds.right - this.lastViewportBounds.right) > 50 ||\n        Math.abs(viewportBounds.bottom - this.lastViewportBounds.bottom) > 50) {\n\n      this.lastViewportBounds = viewportBounds;\n\n      // Update visibility for all objects\n      this.objects.forEach((obj, id) => {\n        const objBounds = this.getObjectBounds(obj);\n        const isVisible = this.isBoundsVisible(objBounds, viewportBounds);\n\n        // Only change visibility if it actually changed to avoid unnecessary operations\n        if (obj.visible !== isVisible) {\n          obj.visible = isVisible;\n        }\n      });\n    }\n  }\n\n  getViewportBounds() {\n    // Get screen dimensions\n    const screenWidth = this.app.renderer.width;\n    const screenHeight = this.app.renderer.height;\n\n    // Convert screen corners to world coordinates\n    const topLeft = this.screenToWorld(0, 0);\n    const bottomRight = this.screenToWorld(screenWidth, screenHeight);\n\n    return {\n      left: topLeft.x - this.cullingPadding,\n      top: topLeft.y - this.cullingPadding,\n      right: bottomRight.x + this.cullingPadding,\n      bottom: bottomRight.y + this.cullingPadding\n    };\n  }\n\n  getObjectBounds(obj) {\n    // Calculate object bounds based on type\n    if (obj.userData) {\n      if (obj.userData.type === 'rectangle') {\n        return {\n          left: obj.x,\n          top: obj.y,\n          right: obj.x + obj.userData.width,\n          bottom: obj.y + obj.userData.height\n        };\n      } else if (obj.userData.type === 'circle') {\n        const radius = obj.userData.radius;\n        return {\n          left: obj.x - radius,\n          top: obj.y - radius,\n          right: obj.x + radius,\n          bottom: obj.y + radius\n        };\n      }\n    }\n\n    // Fallback for objects without userData (like text)\n    if (obj.width && obj.height) {\n      return {\n        left: obj.x,\n        top: obj.y,\n        right: obj.x + obj.width,\n        bottom: obj.y + obj.height\n      };\n    }\n\n    // Last resort - treat as point\n    return {\n      left: obj.x,\n      top: obj.y,\n      right: obj.x,\n      bottom: obj.y\n    };\n  }\n\n  isBoundsVisible(objBounds, viewportBounds) {\n    // Check if object bounds intersect with viewport bounds\n    return !(objBounds.right < viewportBounds.left ||\n             objBounds.left > viewportBounds.right ||\n             objBounds.bottom < viewportBounds.top ||\n             objBounds.top > viewportBounds.bottom);\n  }\n\n  // ==================== Physics Prediction and Reconciliation ====================\n\n  /**\n   * Update physics prediction at 60 FPS using fixed timestep\n   * Subtask 5.1: Integrate prediction in animation loop\n   */\n  updatePhysicsPrediction(deltaTime) {\n    // deltaTime is in PIXI frames (60 FPS ≈ 1.0), convert to seconds\n    const deltaSeconds = deltaTime / 60.0;\n    this.physicsAccumulator += deltaSeconds;\n\n    // Run physics at fixed timestep (50 Hz = 0.02s)\n    while (this.physicsAccumulator >= PHYSICS_TIMESTEP) {\n      this.physicsEngine.step();\n      this.physicsAccumulator -= PHYSICS_TIMESTEP;\n    }\n\n    // Sync visual positions from physics engine\n    this.syncVisualFromPhysics();\n  }\n\n  /**\n   * Sync PIXI visual objects from physics engine state\n   */\n  syncVisualFromPhysics() {\n    for (const [id, physicsObj] of this.physicsEngine.objects) {\n      const pixiObj = this.objects.get(id);\n      if (pixiObj && physicsObj.isDynamic) {\n        // Only update dynamic objects (circles)\n        pixiObj.x = physicsObj.x;\n        pixiObj.y = physicsObj.y;\n      }\n    }\n  }\n\n  /**\n   * Handle physics snapshot from server and reconcile\n   * Subtasks 5.2 and 5.3: Snapshot reception + reconciliation logic\n   */\n  handlePhysicsSnapshot(snapshot) {\n    if (!this.physicsEnabled) return;\n\n    this.lastServerSnapshot = snapshot;\n    this.serverSnapshotTime = performance.now();\n\n    // Reconcile each object in the snapshot\n    snapshot.forEach(serverState => {\n      const id = serverState.id;\n      const physicsObj = this.physicsEngine.getObject(id);\n      const pixiObj = this.objects.get(id);\n\n      if (!physicsObj || !pixiObj) {\n        // Object doesn't exist locally - create it\n        if (pixiObj) {\n          // Sync to physics engine\n          this.syncObjectToPhysics(id);\n        }\n        return;\n      }\n\n      if (!physicsObj.isDynamic) {\n        // Static objects don't need reconciliation\n        return;\n      }\n\n      // Calculate divergence between predicted and server positions\n      const dx = serverState.x - physicsObj.x;\n      const dy = serverState.y - physicsObj.y;\n      const divergence = Math.sqrt(dx * dx + dy * dy);\n\n      // Reconcile based on divergence magnitude\n      if (divergence > 100) {\n        // Large divergence - snap immediately (teleport)\n        console.warn(`Large divergence detected for ${id}: ${divergence.toFixed(2)}px - snapping`);\n        physicsObj.x = serverState.x;\n        physicsObj.y = serverState.y;\n        physicsObj.oldX = serverState.x;\n        physicsObj.oldY = serverState.y;\n        pixiObj.x = serverState.x;\n        pixiObj.y = serverState.y;\n      } else if (divergence > 1) {\n        // Small divergence - gentle interpolation using lerp factor\n        const lerpX = physicsObj.x + (dx * this.reconciliationLerpFactor);\n        const lerpY = physicsObj.y + (dy * this.reconciliationLerpFactor);\n\n        physicsObj.x = lerpX;\n        physicsObj.y = lerpY;\n\n        // Maintain velocity by adjusting oldX/oldY\n        const vx = physicsObj.x - physicsObj.oldX;\n        const vy = physicsObj.y - physicsObj.oldY;\n        physicsObj.oldX = lerpX - vx;\n        physicsObj.oldY = lerpY - vy;\n\n        pixiObj.x = lerpX;\n        pixiObj.y = lerpY;\n      }\n      // Divergence < 1px: prediction is accurate, no correction needed\n    });\n  }\n\n  /**\n   * Sync a canvas object to the physics engine\n   */\n  syncObjectToPhysics(id) {\n    const pixiObj = this.objects.get(id);\n    if (!pixiObj || !pixiObj.userData) return;\n\n    const objData = {\n      id,\n      type: pixiObj.userData.type,\n      x: pixiObj.x,\n      y: pixiObj.y,\n      color: this.colorToHexString(pixiObj.tint || 0x3498db),\n      isDynamic: pixiObj.userData.isDynamic !== undefined ? pixiObj.userData.isDynamic : (pixiObj.userData.type === 'circle')\n    };\n\n    if (pixiObj.userData.type === 'circle') {\n      objData.radius = pixiObj.userData.radius;\n    } else if (pixiObj.userData.type === 'rectangle') {\n      objData.width = pixiObj.userData.width;\n      objData.height = pixiObj.userData.height;\n    }\n\n    this.physicsEngine.syncCanvasObject(objData);\n  }\n\n  /**\n   * Enable physics simulation\n   */\n  enablePhysics() {\n    if (this.physicsEnabled) return;\n\n    console.log('Enabling physics simulation...');\n    this.physicsEnabled = true;\n\n    // Sync all existing objects to physics engine\n    this.objects.forEach((pixiObj, id) => {\n      this.syncObjectToPhysics(id);\n    });\n\n    // Resume physics simulation\n    this.physicsEngine.resume();\n    console.log(`Physics enabled with ${this.physicsEngine.objects.size} objects`);\n  }\n\n  /**\n   * Disable physics simulation\n   */\n  disablePhysics() {\n    if (!this.physicsEnabled) return;\n\n    console.log('Disabling physics simulation...');\n    this.physicsEnabled = false;\n    this.physicsEngine.pause();\n  }\n\n  /**\n   * Set global gravity for physics engine\n   */\n  setGravity(gravity) {\n    this.physicsEngine.setGlobalGravity(gravity);\n    console.log(`Gravity set to: ${gravity}`);\n  }\n\n  createToolObject(start, end) {\n    const id = this.generateId();\n\n    if (this.currentTool === 'rectangle') {\n      const width = Math.abs(end.x - start.x);\n      const height = Math.abs(end.y - start.y);\n      const x = Math.min(start.x, end.x);\n      const y = Math.min(start.y, end.y);\n\n      this.createRectangle(id, x, y, width, height, this.currentColor);\n\n      return {\n        id,\n        type: 'rectangle',\n        x, y, width, height,\n        color: this.colorToHexString(this.currentColor),\n        // Physics properties: rectangles are always static (non-dynamic)\n        isDynamic: false,\n        friction: 0.02,\n        restitution: 0.7\n      };\n    } else if (this.currentTool === 'circle') {\n      const dx = end.x - start.x;\n      const dy = end.y - start.y;\n      const radius = Math.sqrt(dx * dx + dy * dy);\n\n      this.createCircle(id, start.x, start.y, radius, this.currentColor);\n\n      return {\n        id,\n        type: 'circle',\n        x: start.x,\n        y: start.y,\n        radius,\n        color: this.colorToHexString(this.currentColor),\n        // Physics properties: circles are dynamic by default\n        isDynamic: true,\n        friction: 0.02,\n        restitution: 0.7\n        // Note: mass is calculated from radius (π*r²) and not stored\n      };\n    }\n  }\n  \n  // ==================== Object Creation ====================\n  \n  createRectangle(id, x, y, width, height, color) {\n    const rect = new PIXI.Graphics();\n    // PixiJS v8 builder pattern with anti-aliasing settings\n    rect.rect(0, 0, width, height).fill(color);\n    rect.x = x;\n    rect.y = y;\n    rect.interactive = true;\n    rect.cursor = 'pointer'; // v8 replaces buttonMode\n    rect.visible = true; // Start visible, culling will handle visibility\n\n    // Enable smooth rendering\n    rect.roundPixels = false;\n\n    // Store dimensions for selection box and physics properties\n    rect.userData = {\n      width,\n      height,\n      type: 'rectangle',\n      isDynamic: false // Rectangles are static by default\n    };\n\n    this.makeDraggable(rect, id);\n    this.makeSelectable(rect, id);\n\n    this.objects.set(id, rect);\n    this.viewport.addChild(rect);\n\n    // Sync to physics engine if enabled\n    if (this.physicsEnabled) {\n      this.syncObjectToPhysics(id);\n    }\n\n    return rect;\n  }\n  \n  createCircle(id, x, y, radius, color) {\n    const circle = new PIXI.Graphics();\n    // PixiJS v8 builder pattern with anti-aliasing settings\n    circle.circle(0, 0, radius).fill(color);\n    circle.x = x;\n    circle.y = y;\n    circle.interactive = true;\n    circle.cursor = 'pointer'; // v8 replaces buttonMode\n    circle.visible = true; // Start visible, culling will handle visibility\n\n    // Enable smooth rendering\n    circle.roundPixels = false;\n\n    // Store dimensions for selection box and physics properties\n    circle.userData = {\n      radius,\n      type: 'circle',\n      isDynamic: true // Circles are dynamic by default\n    };\n\n    this.makeDraggable(circle, id);\n    this.makeSelectable(circle, id);\n\n    this.objects.set(id, circle);\n    this.viewport.addChild(circle);\n\n    // Sync to physics engine if enabled\n    if (this.physicsEnabled) {\n      this.syncObjectToPhysics(id);\n    }\n\n    return circle;\n  }\n\n  createEmitter(id, x, y, rate, lifespan, particleSize, initialVelocity, color) {\n    // Create visual representation of the emitter (a glowing star shape)\n    const emitter = new PIXI.Container();\n    emitter.x = x;\n    emitter.y = y;\n    emitter.interactive = true;\n    emitter.cursor = 'pointer';\n    emitter.visible = true;\n\n    // Create star shape for emitter visualization\n    const starGraphics = new PIXI.Graphics();\n    const numPoints = 8;\n    const outerRadius = 20;\n    const innerRadius = 10;\n\n    // Draw star using polygon\n    const points = [];\n    for (let i = 0; i < numPoints * 2; i++) {\n      const angle = (i * Math.PI) / numPoints;\n      const radius = i % 2 === 0 ? outerRadius : innerRadius;\n      points.push({\n        x: Math.cos(angle) * radius,\n        y: Math.sin(angle) * radius\n      });\n    }\n\n    starGraphics.poly(points).fill(color);\n    starGraphics.circle(0, 0, 5).fill(0xFFFFFF); // White center dot\n    starGraphics.roundPixels = false;\n\n    // Add pulsing animation\n    let pulseTime = 0;\n    const pulseAnimation = (delta) => {\n      pulseTime += delta * 0.05;\n      const scale = 1 + Math.sin(pulseTime) * 0.1;\n      starGraphics.scale.set(scale);\n    };\n\n    emitter.addChild(starGraphics);\n\n    // Store emitter properties\n    emitter.userData = {\n      type: 'emitter',\n      rate,\n      lifespan,\n      particleSize,\n      initialVelocity,\n      pulseAnimation,\n      isDynamic: false // Emitters are static\n    };\n\n    // Add pulse animation to ticker\n    this.app.ticker.add(pulseAnimation);\n\n    this.makeDraggable(emitter, id);\n    this.makeSelectable(emitter, id);\n\n    this.objects.set(id, emitter);\n    this.viewport.addChild(emitter);\n\n    return emitter;\n  }\n  \n  createText(id, text, x, y, fontSize, color) {\n    const textObj = new PIXI.Text(text, {\n      fontSize,\n      fill: color,\n      fontFamily: 'Arial'\n    });\n    textObj.x = x;\n    textObj.y = y;\n    textObj.interactive = true;\n    textObj.buttonMode = true;\n    textObj.visible = true; // Start visible, culling will handle visibility\n\n    this.makeDraggable(textObj, id);\n    this.makeSelectable(textObj, id);\n\n    this.objects.set(id, textObj);\n    this.viewport.addChild(textObj);\n\n    return textObj;\n  }\n  \n  // ==================== Interaction ====================\n  \n  makeDraggable(obj, id) {\n    // Only handle pointerdown - centralized handler does the rest\n    obj.on('pointerdown', (event) => {\n      if (this.currentTool !== 'select') return;\n\n      const worldPos = this.screenToWorld(event.data.global.x, event.data.global.y);\n\n      // Set centralized drag state\n      this.isDragging = true;\n      this.draggedObject = obj;\n      this.draggedObjectId = id;\n      this.dragOffset.x = worldPos.x - obj.x;\n      this.dragOffset.y = worldPos.y - obj.y;\n\n      obj.alpha = 0.7;\n      event.stopPropagation();\n    });\n  }\n  \n  makeSelectable(obj, id) {\n    obj.on('click', (event) => {\n      if (this.currentTool === 'select') {\n        if (event.data.originalEvent.shiftKey) {\n          // Multi-select\n          if (this.selectedObjects.has(id)) {\n            this.deselectObject(id);\n          } else {\n            this.selectObject(id);\n          }\n        } else {\n          // Single select\n          this.clearSelection();\n          this.selectObject(id);\n        }\n        event.stopPropagation();\n      }\n    });\n  }\n  \n  selectObject(id) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    this.selectedObjects.add(id);\n\n    // Trigger selection change callback\n    if (this.onSelectionChange) {\n      this.onSelectionChange(this.selectedObjects);\n    }\n\n    // Remove existing selection indicator if any\n    const existingIndicator = this.selectionIndicators.get(id);\n    if (existingIndicator) {\n      this.viewport.removeChild(existingIndicator);\n      existingIndicator.destroy();\n    }\n\n    // Create selection indicator\n    const indicator = new PIXI.Graphics();\n    \n    // Enable smooth rendering for selection borders\n    indicator.roundPixels = false;\n\n    if (obj.userData) {\n      if (obj.userData.type === 'rectangle') {\n        // Draw selection box around rectangle using v8 builder pattern\n        const { width, height } = obj.userData;\n        indicator.rect(-2, -2, width + 4, height + 4).stroke({ width: 2, color: 0x00FF00, alignment: 0.5 });\n        indicator.x = obj.x;\n        indicator.y = obj.y;\n      } else if (obj.userData.type === 'circle') {\n        // Draw selection box around circle using v8 builder pattern\n        const { radius } = obj.userData;\n        indicator.circle(0, 0, radius + 2).stroke({ width: 2, color: 0x00FF00, alignment: 0.5 });\n        indicator.x = obj.x;\n        indicator.y = obj.y;\n      }\n    }\n\n    // Selection indicators are non-interactive - optimize event traversal\n    indicator.interactive = false;\n    indicator.interactiveChildren = false;\n\n    // Add to viewport and store reference\n    this.viewport.addChild(indicator);\n    this.selectionIndicators.set(id, indicator);\n  }\n\n  deselectObject(id) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    this.selectedObjects.delete(id);\n\n    // Trigger selection change callback\n    if (this.onSelectionChange) {\n      this.onSelectionChange(this.selectedObjects);\n    }\n\n    // Remove selection indicator\n    const indicator = this.selectionIndicators.get(id);\n    if (indicator) {\n      this.viewport.removeChild(indicator);\n      indicator.destroy();\n      this.selectionIndicators.delete(id);\n    }\n  }\n  \n  clearSelection() {\n    this.selectedObjects.forEach(id => this.deselectObject(id));\n    this.selectedObjects.clear();\n\n    // Trigger selection change callback (empty selection)\n    if (this.onSelectionChange) {\n      this.onSelectionChange(this.selectedObjects);\n    }\n  }\n  \n  deleteSelected() {\n    if (this.selectedObjects.size === 0) {\n      return;\n    }\n\n    const idsToDelete = Array.from(this.selectedObjects);\n\n    // Use bulk deletion for better performance\n    const deletedIds = this.deleteObjects(idsToDelete);\n\n    // Clear selection\n    this.selectedObjects.clear();\n\n    // Notify about bulk deletion\n    if (this.onObjectsDeleted && deletedIds.length > 0) {\n      this.onObjectsDeleted(deletedIds);\n    }\n\n    console.log(`Deleted ${deletedIds.length} selected objects`);\n  }\n  \n  // ==================== Object Management ====================\n\n  loadState(canvasState) {\n    console.error('========================================');\n    console.error('=== LOAD STATE CALLED ===');\n    console.error('========================================');\n    console.error('Canvas state received:', canvasState);\n    console.error('Canvas state type:', typeof canvasState);\n    console.error('Is array?', Array.isArray(canvasState));\n\n    // Clear existing objects\n    console.error('Clearing existing objects...');\n    this.objects.forEach((obj, id) => {\n      this.deleteObject(id);\n    });\n    console.error('Objects cleared. Map size:', this.objects.size);\n\n    // Load objects from state\n    if (canvasState && typeof canvasState === 'object') {\n      // If it's an array, iterate through it\n      if (Array.isArray(canvasState)) {\n        console.error(`=== Loading ${canvasState.length} objects from ARRAY ===`);\n        canvasState.forEach((objData, index) => {\n          console.error(`Loading object ${index}:`, JSON.stringify(objData));\n          this.createRemoteObject(objData);\n        });\n      } else {\n        // If it's an object/hash, iterate through its values\n        const values = Object.values(canvasState);\n        console.error(`=== Loading ${values.length} objects from OBJECT ===`);\n        values.forEach((objData, index) => {\n          console.error(`Loading object ${index}:`, JSON.stringify(objData));\n          this.createRemoteObject(objData);\n        });\n      }\n    } else {\n      console.error('!!! INVALID canvas state !!!:', canvasState);\n    }\n\n    console.error('========================================');\n    console.error(`=== LOAD STATE COMPLETE: ${this.objects.size} objects ===`);\n    console.error('Current objects in map:', Array.from(this.objects.keys()));\n    console.error('========================================');\n\n    // Trigger viewport culling after loading objects\n    if (this.cullingEnabled) {\n      this.updateVisibleObjects();\n    }\n  }\n\n  applyDelta(id, delta) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    // Apply position and visual properties\n    for (const [key, value] of Object.entries(delta)) {\n      if (key === 'x' || key === 'y') {\n        obj[key] = value;\n      }\n    }\n\n    // Apply physics properties to userData\n    if (delta.isDynamic !== undefined && obj.userData) {\n      obj.userData.isDynamic = delta.isDynamic;\n    }\n    if (delta.friction !== undefined && obj.userData) {\n      obj.userData.friction = delta.friction;\n    }\n    if (delta.restitution !== undefined && obj.userData) {\n      obj.userData.restitution = delta.restitution;\n    }\n\n    // Handle special cases for Graphics objects\n    if (obj instanceof PIXI.Graphics) {\n      if (delta.width !== undefined || delta.height !== undefined ||\n          delta.color !== undefined || delta.rotation !== undefined) {\n        // Trigger redraw for visual properties\n        this.redrawGraphicsObject(obj);\n      }\n    }\n\n    // Sync to physics engine if physics is enabled\n    if (this.physicsEnabled && (delta.isDynamic !== undefined || delta.friction !== undefined || delta.restitution !== undefined)) {\n      this.syncObjectToPhysics(id);\n    }\n  }\n\n  redrawGraphicsObject(obj) {\n    // Clear and redraw the graphics object based on its current properties\n    obj.clear();\n\n    // Basic rectangle drawing using v8 builder pattern\n    if (obj.width && obj.height) {\n      obj.rect(0, 0, obj.width, obj.height).fill(obj.color || 0xFF0000);\n    }\n\n    // Apply rotation if set\n    if (obj.rotation) {\n      obj.rotation = obj.rotation;\n    }\n  }\n\n  updateObject(id, updates) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    if (updates.x !== undefined) obj.x = updates.x;\n    if (updates.y !== undefined) obj.y = updates.y;\n\n    // For Graphics objects, need to redraw if dimensions change\n    if (obj instanceof PIXI.Graphics) {\n      if (updates.width !== undefined || updates.height !== undefined) {\n        // Recreate the shape - this is simplistic, you might want a better approach\n        console.log('Dimension updates for Graphics require recreation');\n      }\n    }\n  }\n\n  deleteObject(id) {\n    const obj = this.objects.get(id);\n    if (obj) {\n      this.viewport.removeChild(obj);\n      this.objects.delete(id);\n\n      // Destroy object but preserve shared textures\n      obj.destroy({ children: true, texture: false, baseTexture: false });\n\n      // Clean up selection indicator if it exists\n      const indicator = this.selectionIndicators.get(id);\n      if (indicator) {\n        this.viewport.removeChild(indicator);\n        indicator.destroy({ children: true, texture: false, baseTexture: false });\n        this.selectionIndicators.delete(id);\n      }\n\n      // Remove from selected objects set\n      this.selectedObjects.delete(id);\n\n      console.log(`Deleted object ${id} with proper texture preservation`);\n    }\n  }\n\n  deleteObjects(ids) {\n    if (!Array.isArray(ids) || ids.length === 0) {\n      console.warn('deleteObjects: Expected non-empty array of IDs');\n      return;\n    }\n\n    console.log(`Bulk deleting ${ids.length} objects:`, ids);\n\n    // Collect objects to delete for broadcasting\n    const deletedObjects = [];\n\n    // Delete each object\n    ids.forEach(id => {\n      const obj = this.objects.get(id);\n      if (obj) {\n        this.viewport.removeChild(obj);\n        this.objects.delete(id);\n\n        // Destroy object but preserve shared textures\n        obj.destroy({ children: true, texture: false, baseTexture: false });\n\n        // Clean up selection indicator if it exists\n        const indicator = this.selectionIndicators.get(id);\n        if (indicator) {\n          this.viewport.removeChild(indicator);\n          indicator.destroy({ children: true, texture: false, baseTexture: false });\n          this.selectionIndicators.delete(id);\n        }\n\n        // Remove from selected objects set\n        this.selectedObjects.delete(id);\n\n        deletedObjects.push(id);\n      } else {\n        console.warn(`Object ${id} not found for deletion`);\n      }\n    });\n\n    console.log(`Bulk deleted ${deletedObjects.length} objects successfully`);\n\n    // Return deleted IDs for broadcasting\n    return deletedObjects;\n  }\n\n  verifyObjectDeletion(ids) {\n    if (!Array.isArray(ids)) {\n      ids = [ids];\n    }\n\n    let allClean = true;\n    const issues = [];\n\n    ids.forEach(id => {\n      // Check if object still exists in maps\n      if (this.objects.has(id)) {\n        issues.push(`Object ${id} still in objects map`);\n        allClean = false;\n      }\n\n      if (this.selectionIndicators.has(id)) {\n        issues.push(`Selection indicator for ${id} still exists`);\n        allClean = false;\n      }\n\n      if (this.selectedObjects.has(id)) {\n        issues.push(`Object ${id} still in selectedObjects set`);\n        allClean = false;\n      }\n\n      // Check if PIXI object still has parent (indicating it's still in scene)\n      const obj = this.viewport.children.find(child => child._objectId === id);\n      if (obj) {\n        issues.push(`Object ${id} still in viewport children`);\n        allClean = false;\n      }\n    });\n\n    // Check for orphaned PIXI objects in viewport\n    const orphanedPixiObjects = this.viewport.children.filter(child => {\n      // Look for objects that don't have corresponding entries in our maps\n      return child._objectId && !this.objects.has(child._objectId);\n    });\n\n    if (orphanedPixiObjects.length > 0) {\n      issues.push(`${orphanedPixiObjects.length} orphaned PIXI objects found in viewport`);\n      allClean = false;\n    }\n\n    // Check texture memory (basic check)\n    // Note: In PixiJS v8, texture cache access has changed\n    const textureCount = PIXI.Cache ? Object.keys(PIXI.Cache._cache).length : 0;\n    if (textureCount > 100) { // Arbitrary threshold\n      issues.push(`High texture count detected: ${textureCount} textures in cache`);\n    }\n\n    if (!allClean) {\n      console.warn('Memory leak verification failed:', issues);\n    } else {\n      console.log(`Memory leak verification passed for ${ids.length} deleted objects`);\n    }\n\n    return {\n      success: allClean,\n      issues: issues,\n      textureCount: textureCount,\n      orphanedObjects: orphanedPixiObjects.length\n    };\n  }\n\n  getMemoryStats() {\n    const pixiChildren = this.viewport.children.length;\n    const objectsInMap = this.objects.size;\n    const selectionIndicators = this.selectionIndicators.size;\n    const selectedObjects = this.selectedObjects.size;\n    const remoteCursors = this.remoteCursors.size;\n\n    return {\n      pixiChildren,\n      objectsInMap,\n      selectionIndicators,\n      selectedObjects,\n      remoteCursors,\n      totalTrackedObjects: objectsInMap + selectionIndicators + selectedObjects + remoteCursors,\n      // PixiJS v8: Cache API has changed\n      textureCacheSize: PIXI.Cache ? Object.keys(PIXI.Cache._cache).length : 0,\n      baseTextureCacheSize: 0 // BaseTextureCache deprecated in v8\n    };\n  }\n\n  // ==================== Remote Object Sync ====================\n\n  createRemoteObject(objData) {\n    console.log('Creating remote object:', objData);\n    console.log('Object properties:', {\n      id: objData.id,\n      type: objData.type,\n      x: objData.x,\n      y: objData.y,\n      width: objData.width,\n      height: objData.height,\n      radius: objData.radius,\n      color: objData.color,\n      colorType: typeof objData.color\n    });\n\n    // Convert color to proper format (ensure it's a number)\n    const color = this.normalizeColor(objData.color);\n    console.log('Normalized color:', color, 'type:', typeof color);\n\n    // Infer type from data if missing (backwards compatibility)\n    let type = objData.type;\n    if (!type) {\n      console.warn('Object missing type field, inferring from properties:', objData);\n      if (objData.radius !== undefined) {\n        type = 'circle';\n      } else if (objData.width !== undefined && objData.height !== undefined) {\n        type = 'rectangle';\n      } else if (objData.text !== undefined) {\n        type = 'text';\n      } else {\n        console.error('Cannot infer type for object:', objData);\n        return;\n      }\n    }\n\n    if (type === 'rectangle') {\n      // Validate dimensions\n      if (!objData.width || !objData.height || objData.width <= 0 || objData.height <= 0) {\n        console.warn('Skipping rectangle with invalid dimensions:', objData);\n        return;\n      }\n\n      console.log('Creating rectangle with:', {\n        id: objData.id,\n        x: objData.x,\n        y: objData.y,\n        width: objData.width,\n        height: objData.height,\n        color: color\n      });\n      this.createRectangle(\n        objData.id,\n        objData.x,\n        objData.y,\n        objData.width,\n        objData.height,\n        color\n      );\n      console.log('Rectangle created successfully. Objects in map:', this.objects.size);\n    } else if (type === 'circle') {\n      console.log('Creating circle with:', {\n        id: objData.id,\n        x: objData.x,\n        y: objData.y,\n        radius: objData.radius,\n        color: color\n      });\n      this.createCircle(\n        objData.id,\n        objData.x,\n        objData.y,\n        objData.radius,\n        color\n      );\n      console.log('Circle created successfully');\n    } else if (type === 'text') {\n      console.log('Creating text with:', {\n        id: objData.id,\n        text: objData.text,\n        x: objData.x,\n        y: objData.y,\n        fontSize: objData.fontSize,\n        color: color\n      });\n      this.createText(\n        objData.id,\n        objData.text,\n        objData.x,\n        objData.y,\n        objData.fontSize,\n        color\n      );\n      console.log('Text created successfully');\n    } else {\n      console.error('Unknown object type:', type);\n    }\n  }\n\n  normalizeColor(color) {\n    // If it's already a number (0xRRGGBB format), return it\n    if (typeof color === 'number') {\n      return color;\n    }\n\n    // If it's a hex string like \"#3498db\", convert to number\n    if (typeof color === 'string') {\n      if (color.startsWith('#')) {\n        return parseInt(color.substring(1), 16);\n      }\n      // If it's a string number like \"3498db\", convert to number\n      return parseInt(color, 16);\n    }\n\n    // Default color if something goes wrong\n    return 0x3498db;\n  }\n\n  updateRemoteObject(objectId, delta) {\n    console.log('Updating remote object with delta:', objectId, delta);\n    this.applyDelta(objectId, delta);\n  }\n\n  deleteRemoteObject(objectId) {\n    console.log('Deleting remote object:', objectId);\n    this.deleteObject(objectId);\n  }\n  \n  getObject(id) {\n    return this.objects.get(id);\n  }\n\n  // Alias for compatibility with main.js\n  getObjectById(id) {\n    return this.objects.get(id);\n  }\n\n  getAllObjects() {\n    return Array.from(this.objects.entries()).map(([id, obj]) => ({\n      id,\n      type: obj.constructor.name,\n      x: obj.x,\n      y: obj.y\n    }));\n  }\n\n  getPerformanceStats() {\n    return this.performanceMonitor.getStats();\n  }\n  \n  // ==================== Remote Cursors ====================\n  \n  updateRemoteCursor(userId, username, x, y, color) {\n    let cursor = this.remoteCursors.get(userId);\n\n    // Convert color string (like \"#FF6B6B\") to number\n    const colorNum = color && typeof color === 'string' && color.startsWith('#')\n      ? parseInt(color.substring(1), 16)\n      : 0xFF6B6B;\n\n    if (!cursor) {\n      // Create new cursor\n      cursor = new PIXI.Container();\n\n      // Cursor pointer using shared texture and sprite\n      const pointer = new PIXI.Sprite(this.cursorTexture);\n      pointer.tint = colorNum; // Apply color using tint instead of recreating graphics\n\n      // Username label\n      const label = new PIXI.Text(username, {\n        fontSize: 12,\n        fill: 0xFFFFFF,\n        fontWeight: 'bold',\n        stroke: colorNum,\n        strokeThickness: 2,\n        dropShadow: true,\n        dropShadowColor: 0x000000,\n        dropShadowAlpha: 0.7,\n        dropShadowDistance: 1\n      });\n      label.x = 15;\n      label.y = -5; // Position above cursor tip\n\n      cursor.addChild(pointer);\n      cursor.addChild(label);\n      cursor.zIndex = 1000;\n\n      // Remote cursors are non-interactive - optimize event traversal\n      cursor.interactive = false;\n      cursor.interactiveChildren = false;\n\n      this.remoteCursors.set(userId, cursor);\n      this.viewport.addChild(cursor);\n    }\n\n    // Add interpolation for smooth rendering despite batching/throttling\n    if (!cursor.lastUpdate) {\n      cursor.lastUpdate = { x, y, time: performance.now() };\n    }\n\n    const now = performance.now();\n    const dt = now - cursor.lastUpdate.time;\n\n    if (dt > 0 && dt < 100) { // Interpolate over last 100ms for smoothness\n      const lerpFactor = Math.min(dt / 100, 1);\n      cursor.x = cursor.lastUpdate.x + (x - cursor.lastUpdate.x) * lerpFactor;\n      cursor.y = cursor.lastUpdate.y + (y - cursor.lastUpdate.y) * lerpFactor;\n    } else {\n      // Large time gap or first update - jump to position\n      cursor.x = x;\n      cursor.y = y;\n    }\n\n    cursor.lastUpdate = { x, y, time: now };\n  }\n\n  removeRemoteCursor(userId) {\n    const cursor = this.remoteCursors.get(userId);\n    if (cursor) {\n      this.viewport.removeChild(cursor);\n      cursor.destroy();\n      this.remoteCursors.delete(userId);\n    }\n  }\n\n  clearAllRemoteCursors() {\n    console.log(`Clearing all remote cursors (${this.remoteCursors.size} cursors)`)\n    this.remoteCursors.forEach((cursor, userId) => {\n      this.viewport.removeChild(cursor)\n      cursor.destroy()\n    })\n    this.remoteCursors.clear()\n    console.log('All remote cursors cleared')\n  }\n\n  startPeriodicCleanup(intervalMs = 60000) {\n    // Run cleanup every minute to catch any orphaned objects\n    this.cleanupInterval = setInterval(() => {\n      this.performCleanup()\n    }, intervalMs)\n    console.log(`Started periodic cleanup (every ${intervalMs / 1000}s)`)\n  }\n\n  stopPeriodicCleanup() {\n    if (this.cleanupInterval) {\n      clearInterval(this.cleanupInterval)\n      this.cleanupInterval = null\n      console.log('Stopped periodic cleanup')\n    }\n  }\n\n  performCleanup() {\n    console.log('=== Performing periodic cleanup ===')\n    let orphanedIndicators = 0\n    let orphanedCursors = 0\n\n    // Clean up selection indicators for deleted objects\n    this.selectionIndicators.forEach((indicator, id) => {\n      if (!this.objects.has(id)) {\n        this.viewport.removeChild(indicator)\n        indicator.destroy()\n        this.selectionIndicators.delete(id)\n        orphanedIndicators++\n      }\n    })\n\n    // Clean up selected objects that no longer exist\n    this.selectedObjects.forEach(id => {\n      if (!this.objects.has(id)) {\n        this.selectedObjects.delete(id)\n      }\n    })\n\n    // Clean up remote cursors that haven't updated in a while (>5 minutes)\n    const fiveMinutesAgo = performance.now() - (5 * 60 * 1000)\n    this.remoteCursors.forEach((cursor, userId) => {\n      if (cursor.lastUpdate && cursor.lastUpdate.time < fiveMinutesAgo) {\n        this.removeRemoteCursor(userId)\n        orphanedCursors++\n      }\n    })\n\n    if (orphanedIndicators > 0 || orphanedCursors > 0) {\n      console.log(`Cleanup complete: ${orphanedIndicators} indicators, ${orphanedCursors} cursors removed`)\n    } else {\n      console.log('Cleanup complete: No orphaned objects found')\n    }\n  }\n\n  // ==================== Utilities ====================\n  \n  generateId() {\n    return 'obj-' + Math.random().toString(36).substr(2, 9);\n  }\n  \n  setColor(color) {\n    this.currentColor = color;\n  }\n\n  colorToHexString(color) {\n    // Convert JavaScript color number (0x3498db) to CSS hex string (\"#3498db\")\n    if (typeof color === 'number') {\n      return '#' + color.toString(16).padStart(6, '0');\n    }\n    // If it's already a string with #, return as-is\n    if (typeof color === 'string' && color.startsWith('#')) {\n      return color;\n    }\n    // Default fallback\n    return '#3498db';\n  }\n\n  getCanvasState() {\n    const objects = [];\n    this.objects.forEach((obj, id) => {\n      // Serialize object data\n      objects.push({\n        id,\n        type: obj.constructor.name,\n        x: obj.x,\n        y: obj.y,\n        // Add more properties as needed\n      });\n    });\n    return { objects };\n  }\n\n  destroy() {\n    // Clean up performance monitor\n    if (this.performanceMonitor) {\n      this.performanceMonitor.destroy();\n    }\n\n    // Clean up shared cursor texture\n    if (this.cursorTexture) {\n      this.cursorTexture.destroy();\n    }\n\n    // Clean up PIXI objects\n    this.objects.forEach(obj => {\n      if (obj && typeof obj.destroy === 'function') {\n        obj.destroy();\n      }\n    });\n    this.objects.clear();\n\n    this.selectionIndicators.forEach(indicator => {\n      if (indicator && typeof indicator.destroy === 'function') {\n        indicator.destroy();\n      }\n    });\n    this.selectionIndicators.clear();\n\n    this.remoteCursors.forEach(cursor => {\n      if (cursor && typeof cursor.destroy === 'function') {\n        cursor.destroy();\n      }\n    });\n    this.remoteCursors.clear();\n  }\n  \n  // Callbacks - set these from outside\n  onObjectCreated = null;\n  onObjectMoved = null;\n  onObjectDeleted = null;\n  onCursorMoved = null;\n  onSelectionChange = null; // Callback for physics properties UI\n}\n","// websocket.js - WebSocket client for real-time synchronization\n\nexport class LatencyMonitor {\n    constructor(options = {}) {\n        this.maxHistorySize = options.maxHistorySize || 1000\n        this.warningThreshold = options.warningThreshold || 100 // 100ms\n        this.pendingMessages = new Map() // messageId -> { sentTime, type }\n        this.latencyHistory = [] // Array of latency measurements\n        this.stats = {\n            totalMessages: 0,\n            averageLatency: 0,\n            minLatency: Infinity,\n            maxLatency: 0,\n            warningCount: 0\n        }\n    }\n\n    startTracking(messageId, messageType) {\n        this.pendingMessages.set(messageId, {\n            sentTime: performance.now(),\n            type: messageType\n        })\n    }\n\n    endTracking(messageId) {\n        const pending = this.pendingMessages.get(messageId)\n        if (!pending) {\n            return null // Message not found or already tracked\n        }\n\n        const latency = performance.now() - pending.sentTime\n        this.pendingMessages.delete(messageId)\n\n        // Record latency\n        this.recordLatency(latency, pending.type)\n\n        // Warn if high latency\n        if (latency > this.warningThreshold) {\n            console.warn(`⚠️ High latency detected: ${Math.round(latency)}ms for ${pending.type} message`)\n            this.stats.warningCount++\n        }\n\n        return latency\n    }\n\n    recordLatency(latency, messageType) {\n        // Add to history\n        this.latencyHistory.push({\n            latency,\n            type: messageType,\n            timestamp: Date.now()\n        })\n\n        // Trim history if too large\n        if (this.latencyHistory.length > this.maxHistorySize) {\n            this.latencyHistory.shift()\n        }\n\n        // Update stats\n        this.stats.totalMessages++\n        this.stats.minLatency = Math.min(this.stats.minLatency, latency)\n        this.stats.maxLatency = Math.max(this.stats.maxLatency, latency)\n\n        // Recalculate average\n        const sum = this.latencyHistory.reduce((acc, item) => acc + item.latency, 0)\n        this.stats.averageLatency = sum / this.latencyHistory.length\n    }\n\n    getPercentile(percentile) {\n        if (this.latencyHistory.length === 0) {\n            return 0\n        }\n\n        // Sort latencies\n        const sorted = this.latencyHistory\n            .map(item => item.latency)\n            .sort((a, b) => a - b)\n\n        // Calculate percentile index\n        const index = Math.ceil((percentile / 100) * sorted.length) - 1\n        return sorted[Math.max(0, index)]\n    }\n\n    getStats() {\n        return {\n            totalMessages: this.stats.totalMessages,\n            averageLatency: Math.round(this.stats.averageLatency * 100) / 100,\n            minLatency: this.stats.minLatency === Infinity ? 0 : Math.round(this.stats.minLatency * 100) / 100,\n            maxLatency: Math.round(this.stats.maxLatency * 100) / 100,\n            p50: Math.round(this.getPercentile(50) * 100) / 100,\n            p95: Math.round(this.getPercentile(95) * 100) / 100,\n            p99: Math.round(this.getPercentile(99) * 100) / 100,\n            warningCount: this.stats.warningCount,\n            historySize: this.latencyHistory.length,\n            pendingMessages: this.pendingMessages.size\n        }\n    }\n\n    getStatsByType(messageType) {\n        const filtered = this.latencyHistory.filter(item => item.type === messageType)\n        if (filtered.length === 0) {\n            return null\n        }\n\n        const latencies = filtered.map(item => item.latency).sort((a, b) => a - b)\n        const sum = latencies.reduce((acc, val) => acc + val, 0)\n\n        const getPercentile = (p) => {\n            const index = Math.ceil((p / 100) * latencies.length) - 1\n            return latencies[Math.max(0, index)]\n        }\n\n        return {\n            messageType,\n            count: filtered.length,\n            averageLatency: Math.round((sum / filtered.length) * 100) / 100,\n            minLatency: Math.round(latencies[0] * 100) / 100,\n            maxLatency: Math.round(latencies[latencies.length - 1] * 100) / 100,\n            p50: Math.round(getPercentile(50) * 100) / 100,\n            p95: Math.round(getPercentile(95) * 100) / 100,\n            p99: Math.round(getPercentile(99) * 100) / 100\n        }\n    }\n\n    logStats() {\n        const stats = this.getStats()\n        console.log('=== Latency Statistics ===')\n        console.log(`Total messages: ${stats.totalMessages}`)\n        console.log(`Average latency: ${stats.averageLatency}ms`)\n        console.log(`Min latency: ${stats.minLatency}ms`)\n        console.log(`Max latency: ${stats.maxLatency}ms`)\n        console.log(`P50 (median): ${stats.p50}ms`)\n        console.log(`P95: ${stats.p95}ms`)\n        console.log(`P99: ${stats.p99}ms`)\n        console.log(`High latency warnings: ${stats.warningCount}`)\n        console.log(`History size: ${stats.historySize}`)\n        console.log(`Pending messages: ${stats.pendingMessages}`)\n    }\n\n    reset() {\n        this.pendingMessages.clear()\n        this.latencyHistory = []\n        this.stats = {\n            totalMessages: 0,\n            averageLatency: 0,\n            minLatency: Infinity,\n            maxLatency: 0,\n            warningCount: 0\n        }\n    }\n}\n\nexport class CursorThrottle {\n    constructor(sendCallback, intervalMs = 50) { // 20/sec = 50ms\n        this.sendCallback = sendCallback\n        this.intervalMs = intervalMs\n        this.pendingCursor = null\n        this.intervalId = null\n        this.start()\n    }\n\n    start() {\n        this.intervalId = setInterval(() => {\n            if (this.pendingCursor) {\n                this.sendCallback(this.pendingCursor.x, this.pendingCursor.y)\n                this.pendingCursor = null\n            }\n        }, this.intervalMs)\n    }\n\n    update(x, y) {\n        this.pendingCursor = { x, y } // Always update to latest\n    }\n\n    stop() {\n        if (this.intervalId) {\n            clearInterval(this.intervalId)\n            this.intervalId = null\n        }\n    }\n}\n\nexport class WebSocketClient {\n    constructor(url, sessionId, canvasId) {\n        this.url = url\n        this.sessionId = sessionId\n        this.canvasId = canvasId\n        this.ws = null\n        this.isConnected = false\n        this.reconnectAttempts = 0\n        this.maxReconnectAttempts = 5\n        this.reconnectDelay = 1000\n\n        // Message ID counter for latency tracking\n        this.messageIdCounter = 0\n\n        // Latency monitoring\n        this.latencyMonitor = new LatencyMonitor({\n            maxHistorySize: 1000,\n            warningThreshold: 100 // 100ms\n        })\n\n        // Bandwidth tracking for delta compression testing\n        this.bandwidthStats = {\n            totalBytesReceived: 0,\n            objectUpdateMessages: 0,\n            startTime: Date.now()\n        }\n\n        // Cursor throttling using CursorThrottle class\n        this.cursorThrottle = new CursorThrottle((x, y) => {\n            this.send({ type: 'cursor', x, y })\n        })\n\n        // Callbacks\n        this.onAuthSuccess = () => {}\n        this.onAuthFailed = () => {}\n        this.onUserConnected = () => {}\n        this.onUserDisconnected = () => {}\n        this.onPresenceUpdate = () => {}\n        this.onCursorUpdate = () => {}\n        this.onObjectCreated = () => {}\n        this.onObjectUpdated = () => {}\n        this.onObjectDeleted = () => {}\n        this.onObjectsDeleted = () => {}\n        this.onPhysicsSnapshot = () => {}  // New: Physics state snapshot from server\n        this.onPhysicsStateChange = () => {}  // New: Physics state change notification\n        this.onError = () => {}\n        this.onReconnecting = () => {}\n        this.onReconnected = () => {}\n    }\n\n    connect() {\n        console.log(`Connecting to WebSocket: ${this.url}`)\n\n        try {\n            this.ws = new WebSocket(this.url)\n            this.setupEventHandlers()\n        } catch (error) {\n            console.error('WebSocket connection error:', error)\n            this.onError(error)\n            this.scheduleReconnect()\n        }\n    }\n\n    setupEventHandlers() {\n        this.ws.onopen = () => {\n            console.log('WebSocket connected')\n            this.isConnected = true\n            this.reconnectAttempts = 0\n\n            // Send authentication message\n            this.send({\n                type: 'auth',\n                sessionId: this.sessionId,\n                canvasId: this.canvasId\n            })\n\n            if (this.reconnectAttempts > 0) {\n                this.onReconnected()\n            }\n        }\n\n        this.ws.onmessage = (event) => {\n            try {\n                const data = JSON.parse(event.data)\n                this.handleMessage(data)\n            } catch (error) {\n                console.error('Error parsing WebSocket message:', error)\n                this.onError(error)\n            }\n        }\n\n        this.ws.onclose = (event) => {\n            console.log('WebSocket disconnected:', event.code, event.reason)\n            this.isConnected = false\n\n            if (!event.wasClean) {\n                this.scheduleReconnect()\n            }\n        }\n\n        this.ws.onerror = (error) => {\n            console.error('WebSocket error:', error)\n            this.onError(error)\n        }\n    }\n\n    handleMessage(data) {\n        // Track latency if message has an ID (response to our request)\n        if (data.messageId) {\n            const latency = this.latencyMonitor.endTracking(data.messageId)\n            if (latency !== null && latency < 100) {\n                // Only log sub-100ms latencies at debug level\n                console.debug(`Message ${data.type} latency: ${Math.round(latency)}ms`)\n            }\n        }\n\n        switch (data.type) {\n            case 'auth-success':\n                this.onAuthSuccess(data)\n                break\n\n            case 'auth-failed':\n                this.onAuthFailed(data)\n                break\n\n            case 'user-connected':\n                this.onUserConnected(data)\n                break\n\n            case 'user-disconnected':\n                this.onUserDisconnected(data)\n                break\n\n            case 'presence':\n                this.onPresenceUpdate(data.users)\n                break\n\n            case 'cursor':\n                this.onCursorUpdate(data)\n                break\n\n            case 'cursor-batch':\n                // Handle batched cursor updates\n                if (data.cursors && Array.isArray(data.cursors)) {\n                    data.cursors.forEach(cursor => {\n                        this.onCursorUpdate(cursor)\n                    })\n                }\n                break\n\n            case 'object-create':\n                this.onObjectCreated(data)\n                break\n\n            case 'object-update':\n                // Track bandwidth for delta compression testing\n                const messageSize = JSON.stringify(data).length\n                this.bandwidthStats.totalBytesReceived += messageSize\n                this.bandwidthStats.objectUpdateMessages++\n                console.log(`Object update received: ${messageSize} bytes (total: ${this.bandwidthStats.totalBytesReceived} bytes, ${this.bandwidthStats.objectUpdateMessages} messages)`)\n                this.onObjectUpdated(data)\n                break\n\n            case 'object-delete':\n                this.onObjectDeleted(data)\n                break\n\n            case 'objects-delete':\n                this.onObjectsDeleted(data)\n                break\n\n            case 'physics-snapshot':\n                // Handle physics state snapshot from server (~20 Hz)\n                if (data.snapshot && Array.isArray(data.snapshot)) {\n                    this.onPhysicsSnapshot(data.snapshot)\n                }\n                break\n\n            case 'physics-state-change':\n                // Handle physics state change (play/pause/reset)\n                this.onPhysicsStateChange(data)\n                break\n\n            case 'error':\n                console.error('Server error:', data.message)\n                this.onError(new Error(data.message))\n                break\n\n            default:\n                console.warn('Unknown message type:', data.type)\n        }\n    }\n\n    send(data, trackLatency = false) {\n        if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n            // Add message ID for latency tracking if requested\n            if (trackLatency && data.type !== 'cursor') {\n                data.messageId = ++this.messageIdCounter\n                this.latencyMonitor.startTracking(data.messageId, data.type)\n            }\n\n            this.ws.send(JSON.stringify(data))\n        } else {\n            console.warn('WebSocket not connected, message not sent:', data)\n        }\n    }\n\n    sendCursorUpdate(x, y) {\n        this.cursorThrottle.update(x, y)\n    }\n\n    sendObjectCreate(object) {\n        this.send({\n            type: 'object-create',\n            object: object\n        }, true) // Enable latency tracking\n    }\n\n    sendObjectUpdate(objectId, updates) {\n        this.send({\n            type: 'object-update',\n            'object-id': objectId,\n            updates: updates\n        }, true) // Enable latency tracking\n    }\n\n    sendObjectDelete(objectId) {\n        this.send({\n            type: 'object-delete',\n            'object-id': objectId\n        }, true) // Enable latency tracking\n    }\n\n    scheduleReconnect() {\n        if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n            console.error('Max reconnection attempts reached')\n            this.onError(new Error('Unable to reconnect to server'))\n            return\n        }\n\n        this.reconnectAttempts++\n        const delay = this.reconnectDelay * Math.pow(2, this.reconnectAttempts - 1)\n\n        console.log(`Attempting to reconnect in ${delay}ms (attempt ${this.reconnectAttempts}/${this.maxReconnectAttempts})`)\n        this.onReconnecting()\n\n        setTimeout(() => {\n            this.connect()\n        }, delay)\n    }\n\n    getBandwidthStats() {\n        const elapsedMinutes = (Date.now() - this.bandwidthStats.startTime) / (1000 * 60)\n        return {\n            totalBytes: this.bandwidthStats.totalBytesReceived,\n            messageCount: this.bandwidthStats.objectUpdateMessages,\n            averageBytesPerMessage: this.bandwidthStats.objectUpdateMessages > 0\n                ? Math.round(this.bandwidthStats.totalBytesReceived / this.bandwidthStats.objectUpdateMessages)\n                : 0,\n            bytesPerMinute: elapsedMinutes > 0\n                ? Math.round(this.bandwidthStats.totalBytesReceived / elapsedMinutes)\n                : 0,\n            elapsedMinutes: Math.round(elapsedMinutes * 10) / 10\n        }\n    }\n\n    getLatencyStats() {\n        return this.latencyMonitor.getStats()\n    }\n\n    getLatencyStatsByType(messageType) {\n        return this.latencyMonitor.getStatsByType(messageType)\n    }\n\n    logLatencyStats() {\n        this.latencyMonitor.logStats()\n    }\n\n    logBandwidthStats() {\n        const stats = this.getBandwidthStats()\n        console.log('Bandwidth Stats (Delta Compression):', {\n            'Total bytes received': `${stats.totalBytes} bytes`,\n            'Object update messages': stats.messageCount,\n            'Avg bytes per message': `${stats.averageBytesPerMessage} bytes`,\n            'Bytes per minute': `${stats.bytesPerMinute} bytes/min`,\n            'Elapsed time': `${stats.elapsedMinutes} minutes`\n        })\n    }\n\n    disconnect() {\n        // Log final bandwidth stats before disconnecting\n        if (this.bandwidthStats.objectUpdateMessages > 0) {\n            console.log('=== Final Bandwidth Stats (Delta Compression) ===')\n            this.logBandwidthStats()\n        }\n\n        // Stop cursor throttle timer\n        if (this.cursorThrottle) {\n            this.cursorThrottle.stop()\n            console.log('Stopped cursor throttle timer')\n        }\n\n        // Close WebSocket connection\n        if (this.ws) {\n            this.ws.close(1000, 'User disconnect')\n            this.ws = null\n            this.isConnected = false\n        }\n\n        console.log('=== Disconnect cleanup complete ===')\n    }\n\n    sendObjectsDelete(objectIds) {\n        this.send({\n            type: 'objects-delete',\n            'object-ids': objectIds\n        })\n    }\n\n    sendPhysicsControl(action, value = null) {\n        const message = {\n            type: 'physics-control',\n            action: action\n        }\n\n        if (value !== null) {\n            message.value = value\n        }\n\n        this.send(message)\n    }\n}","// auth.js - Authentication UI and logic for CollabCanvas\n\nexport class AuthManager {\n    constructor() {\n        this.modal = document.getElementById('auth-modal')\n        this.loginForm = document.getElementById('login-form')\n        this.registerForm = document.getElementById('register-form')\n        this.auth0Domain = import.meta.env.VITE_AUTH0_DOMAIN\n        this.auth0ClientId = import.meta.env.VITE_AUTH0_CLIENT_ID\n        this.setupEventListeners()\n        this.checkAuthCallback()\n    }\n\n    setupEventListeners() {\n        // Tab switching\n        document.querySelectorAll('.tab-btn').forEach(btn => {\n            btn.addEventListener('click', () => {\n                const tab = btn.dataset.tab\n                this.switchTab(tab)\n            })\n        })\n\n        // Form submissions\n        this.loginForm.addEventListener('submit', async (e) => {\n            e.preventDefault()\n            await this.handleLogin()\n        })\n\n        this.registerForm.addEventListener('submit', async (e) => {\n            e.preventDefault()\n            await this.handleRegister()\n        })\n\n        // OAuth buttons\n        const auth0LoginBtn = document.getElementById('auth0-login-btn')\n        if (auth0LoginBtn) {\n            auth0LoginBtn.addEventListener('click', () => this.loginWithAuth0())\n        }\n\n        const googleLoginBtn = document.getElementById('google-login-btn')\n        if (googleLoginBtn) {\n            googleLoginBtn.addEventListener('click', () => this.loginWithGoogle())\n        }\n\n        const githubLoginBtn = document.getElementById('github-login-btn')\n        if (githubLoginBtn) {\n            githubLoginBtn.addEventListener('click', () => this.loginWithGithub())\n        }\n    }\n\n    switchTab(tab) {\n        // Update tab buttons\n        document.querySelectorAll('.tab-btn').forEach(btn => {\n            btn.classList.toggle('active', btn.dataset.tab === tab)\n        })\n\n        // Update forms\n        document.querySelectorAll('.auth-form').forEach(form => {\n            form.classList.toggle('active', form.id === `${tab}-form`)\n        })\n\n        // Clear errors\n        document.querySelectorAll('.error-message').forEach(err => {\n            err.textContent = ''\n        })\n    }\n\n    showModal() {\n        return new Promise((resolve) => {\n            this.modal.classList.remove('hidden')\n            this.resolveAuth = resolve\n        })\n    }\n\n    hideModal() {\n        this.modal.classList.add('hidden')\n    }\n\n    showError(message, formId = 'login') {\n        const errorEl = document.getElementById(`${formId}-error`)\n        if (errorEl) {\n            errorEl.textContent = message\n            errorEl.style.display = 'block'\n        }\n    }\n\n    async loginWithAuth0() {\n        try {\n            // Check backend health before redirecting\n            const response = await fetch('/auth0/login', { method: 'HEAD' })\n            if (!response.ok && response.status !== 405) {\n                // 405 Method Not Allowed is expected since we're doing HEAD\n                throw new Error('Authentication service unavailable')\n            }\n            // Redirect to backend OAuth initiation\n            window.location.href = '/auth0/login'\n        } catch (error) {\n            console.error('Auth0 login error:', error)\n            this.showError('Could not connect to authentication service. Please try again.')\n        }\n    }\n\n    async loginWithGoogle() {\n        try {\n            // Check backend health before redirecting\n            const response = await fetch('/auth0/login?connection=google-oauth2', { method: 'HEAD' })\n            if (!response.ok && response.status !== 405) {\n                throw new Error('Authentication service unavailable')\n            }\n            // Redirect to backend OAuth with Google connection\n            window.location.href = '/auth0/login?connection=google-oauth2'\n        } catch (error) {\n            console.error('Google login error:', error)\n            this.showError('Could not connect to Google authentication. Please try again.')\n        }\n    }\n\n    async loginWithGithub() {\n        try {\n            // Check backend health before redirecting\n            const response = await fetch('/auth0/login?connection=github', { method: 'HEAD' })\n            if (!response.ok && response.status !== 405) {\n                throw new Error('Authentication service unavailable')\n            }\n            // Redirect to backend OAuth with GitHub connection\n            window.location.href = '/auth0/login?connection=github'\n        } catch (error) {\n            console.error('GitHub login error:', error)\n            this.showError('Could not connect to GitHub authentication. Please try again.')\n        }\n    }\n\n    checkAuthCallback() {\n        // Check if returning from Auth0 callback\n        const url = new URL(window.location)\n        const code = url.searchParams.get('code')\n        const error = url.searchParams.get('error')\n        const errorDescription = url.searchParams.get('error_description')\n\n        if (error) {\n            // OAuth error returned from Auth0\n            console.error('OAuth error:', error, errorDescription)\n\n            // Show user-friendly error message\n            let message = 'Authentication failed. '\n            if (error === 'access_denied') {\n                message += 'Access was denied. Please try again.'\n            } else if (errorDescription) {\n                message += errorDescription\n            } else {\n                message += 'Please try again or contact support.'\n            }\n\n            this.showError(message)\n\n            // Clean URL\n            window.history.replaceState({}, document.title, window.location.pathname)\n        } else if (code) {\n            // Callback will be handled by backend redirect to /auth0/callback\n            // which will set session cookie and redirect back\n            console.log('Auth0 callback detected, processing...')\n        }\n    }\n\n    async handleLogin() {\n        const email = document.getElementById('login-email').value\n        const password = document.getElementById('login-password').value\n        const errorEl = document.getElementById('login-error')\n\n        try {\n            const response = await fetch('/api/login', {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ email, password })\n            })\n\n            const data = await response.json()\n\n            if (data.success && data.data) {\n                this.hideModal()\n                this.resolveAuth({\n                    sessionId: data.data['session-id'],\n                    userId: data.data['user-id'],\n                    username: data.data.username\n                })\n            } else {\n                errorEl.textContent = data.error || 'Login failed'\n            }\n        } catch (error) {\n            console.error('Login error:', error)\n            errorEl.textContent = 'Connection error. Please try again.'\n        }\n    }\n\n    async handleRegister() {\n        const username = document.getElementById('register-username').value\n        const email = document.getElementById('register-email').value\n        const password = document.getElementById('register-password').value\n        const errorEl = document.getElementById('register-error')\n\n        try {\n            const response = await fetch('/api/register', {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ username, email, password })\n            })\n\n            const data = await response.json()\n\n            if (data.success) {\n                // Auto-login after registration\n                await this.loginAfterRegister(email, password)\n            } else {\n                errorEl.textContent = data.error || 'Registration failed'\n            }\n        } catch (error) {\n            console.error('Registration error:', error)\n            errorEl.textContent = 'Connection error. Please try again.'\n        }\n    }\n\n    async loginAfterRegister(email, password) {\n        // Switch to login tab\n        this.switchTab('login')\n\n        // Fill in credentials\n        document.getElementById('login-email').value = email\n        document.getElementById('login-password').value = password\n\n        // Auto-submit\n        await this.handleLogin()\n    }\n}","// main.js - Application entry point for CollabCanvas\n\nimport './styles.css'\nimport * as PIXI from 'pixi.js'\nimport { CanvasManager } from './canvas.js'\nimport { WebSocketClient } from './websocket.js'\nimport { AuthManager } from './auth.js'\n\nclass CollabCanvas {\n    constructor() {\n        this.canvasManager = null\n        this.wsClient = null\n        this.authManager = null\n        this.sessionId = null\n        this.userId = null\n        this.username = null\n        this.canvasId = this.getCanvasId()\n        this.activeUsers = [] // Track active users\n    }\n\n    getCanvasId() {\n        // Get canvas ID from URL or use default shared canvas\n        const params = new URLSearchParams(window.location.search)\n        let canvasId = params.get('canvas')\n\n        if (!canvasId) {\n            // Use a fixed default canvas so all users join the same one\n            canvasId = 'default-canvas'\n            // Update URL without reload\n            const newUrl = new URL(window.location)\n            newUrl.searchParams.set('canvas', canvasId)\n            window.history.replaceState({}, '', newUrl)\n        }\n\n        return canvasId\n    }\n\n    async init() {\n        console.log('Initializing CollabCanvas...')\n\n        // Update canvas ID in status bar\n        document.getElementById('canvas-id').textContent = this.canvasId\n\n        // Initialize authentication\n        this.authManager = new AuthManager()\n\n        // Check for existing session\n        this.sessionId = localStorage.getItem('sessionId')\n\n        if (this.sessionId) {\n            // Validate session with backend\n            const isValid = await this.validateSession()\n\n            if (!isValid) {\n                this.sessionId = null\n                localStorage.removeItem('sessionId')\n            }\n        }\n\n        if (!this.sessionId) {\n            // Hide loading screen and show auth modal\n            this.hideLoadingScreen()\n            const authData = await this.authManager.showModal()\n            this.sessionId = authData.sessionId\n            this.userId = authData.userId\n            this.username = authData.username\n            localStorage.setItem('sessionId', this.sessionId)\n        }\n\n        // Hide loading screen (session is valid)\n        this.hideLoadingScreen()\n\n        // Initialize canvas (async in v8)\n        await this.initCanvas()\n\n        // Initialize WebSocket connection\n        this.initWebSocket()\n\n        // Setup UI event handlers\n        this.setupUIHandlers()\n\n        console.log('CollabCanvas initialized successfully')\n    }\n\n    hideLoadingScreen() {\n        const loadingScreen = document.getElementById('loading-screen')\n        if (loadingScreen) {\n            loadingScreen.classList.add('hidden')\n        }\n    }\n\n    async validateSession() {\n        console.log('[FRONTEND] Validating session...')\n        console.log('[FRONTEND] sessionId from localStorage:', this.sessionId)\n\n        try {\n            const response = await fetch('/api/session', {\n                credentials: 'include',\n                headers: {\n                    'X-Session-ID': this.sessionId\n                }\n            })\n\n            console.log('[FRONTEND] Response status:', response.status)\n            console.log('[FRONTEND] Response ok:', response.ok)\n\n            if (response.ok) {\n                const data = await response.json()\n                console.log('[FRONTEND] Response data:', data)\n\n                if (data.success && data.data && data.data.valid) {\n                    this.userId = data.data['user-id']\n                    this.username = data.data.username\n                    console.log('[FRONTEND] Session restored:', this.username)\n                    return true\n                } else {\n                    console.log('[FRONTEND] Session validation failed - data.success:', data.success, 'data.data:', data.data, 'data.data.valid:', data.data?.valid)\n                }\n            } else {\n                const errorData = await response.json()\n                console.log('[FRONTEND] Error response:', errorData)\n            }\n        } catch (error) {\n            console.error('[FRONTEND] Session validation exception:', error)\n        }\n\n        return false\n    }\n\n    async initCanvas() {\n        const container = document.getElementById('canvas-container')\n\n        // Get current theme for canvas background\n        const currentTheme = document.documentElement.getAttribute('data-theme') || 'dark'\n        const backgroundColor = currentTheme === 'dark' ? 0x16161f : 0xffffff\n\n        // Create PixiJS application with v8 async initialization\n        const app = new PIXI.Application()\n        await app.init({\n            width: window.innerWidth,\n            height: window.innerHeight,\n            backgroundColor: backgroundColor,\n            resizeTo: window,\n            antialias: true,\n            autoDensity: true,\n            resolution: window.devicePixelRatio || 1\n        })\n\n        container.appendChild(app.canvas)\n        \n        // Listen for theme changes and update canvas background\n        const themeToggle = document.getElementById('theme-toggle')\n        if (themeToggle) {\n            themeToggle.addEventListener('click', () => {\n                setTimeout(() => {\n                    const newTheme = document.documentElement.getAttribute('data-theme')\n                    const newBgColor = newTheme === 'dark' ? 0x16161f : 0xffffff\n                    app.renderer.background.color = newBgColor\n                }, 50)\n            })\n        }\n\n        this.canvasManager = new CanvasManager(app)\n\n        // Make performance stats available globally for console access\n        window.getPerformanceStats = () => {\n            return this.canvasManager.getPerformanceStats();\n        };\n\n        // Make latency stats available globally\n        window.getLatencyStats = () => {\n            if (!this.wsClient) return null;\n            return this.wsClient.getLatencyStats();\n        };\n\n        window.logLatencyStats = () => {\n            if (!this.wsClient) {\n                console.warn('WebSocket client not initialized');\n                return;\n            }\n            this.wsClient.logLatencyStats();\n        };\n\n        window.getLatencyStatsByType = (messageType) => {\n            if (!this.wsClient) return null;\n            return this.wsClient.getLatencyStatsByType(messageType);\n        };\n\n        // Set up canvas callbacks for WebSocket synchronization\n        this.canvasManager.onCursorMoved = (x, y) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendCursorUpdate(x, y)\n            }\n        }\n\n        this.canvasManager.onObjectCreated = (object) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectCreate(object)\n            }\n        }\n\n        this.canvasManager.onObjectUpdated = (objectId, updates) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectUpdate(objectId, updates)\n            }\n        }\n\n        this.canvasManager.onObjectDeleted = (objectId) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectDelete(objectId)\n            }\n        }\n\n        this.canvasManager.onObjectsDeleted = (objectIds) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectsDelete(objectIds)\n            }\n        }\n\n        // Update status bar callbacks\n        this.canvasManager.onToolChange = (tool) => {\n            document.getElementById('current-tool').textContent =\n                tool.charAt(0).toUpperCase() + tool.slice(1)\n        }\n\n        this.canvasManager.onMouseMove = (x, y) => {\n            document.getElementById('mouse-position').textContent = `${Math.round(x)}, ${Math.round(y)}`\n        }\n\n        this.canvasManager.onZoomChange = (zoom) => {\n            document.getElementById('zoom-level').textContent = `${Math.round(zoom * 100)}%`\n        }\n\n        this.canvasManager.onObjectCountChange = (count) => {\n            document.getElementById('object-count').textContent = count\n        }\n\n        // Object selection callback for physics properties UI\n        this.canvasManager.onSelectionChange = (selectedObjects) => {\n            this.updatePhysicsPropertiesUI(selectedObjects)\n        }\n\n        // Start periodic memory cleanup (every 60 seconds)\n        // This removes orphaned selection indicators and inactive cursors\n        this.canvasManager.startPeriodicCleanup(60000)\n        console.log('Started periodic memory cleanup (60s interval)')\n    }\n\n    initWebSocket() {\n        // Use wss:// for HTTPS pages, ws:// for HTTP\n        const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:'\n        // window.location.host includes port if non-standard (e.g., localhost:8080)\n        const wsUrl = `${wsProtocol}//${window.location.host}/ws/${this.canvasId}`\n\n        this.wsClient = new WebSocketClient(wsUrl, this.sessionId, this.canvasId)\n\n        // Set up WebSocket callbacks\n        this.wsClient.onAuthSuccess = (data) => {\n            console.error('=== WebSocket authenticated ===')\n            console.error('Auth data received:', data)\n\n            // Backend sends 'canvas-state' (kebab-case), not 'canvasState'\n            const canvasState = data['canvas-state'] || data.canvasState\n            console.error('canvasState exists?', !!canvasState)\n            console.error('canvasState type:', typeof canvasState)\n            console.error('canvasState length:', canvasState ? canvasState.length : 0)\n\n            // Load initial canvas state\n            if (canvasState) {\n                console.error('=== CALLING loadState ===')\n                this.canvasManager.loadState(canvasState)\n                console.error('=== loadState RETURNED ===')\n            } else {\n                console.error('=== NO CANVAS STATE IN AUTH RESPONSE ===')\n            }\n        }\n\n        this.wsClient.onUserConnected = (data) => {\n            // Add new user to active users list\n            this.activeUsers.push({\n                'user-id': data.userId || data['user-id'],\n                username: data.username,\n                color: data.color\n            })\n            this.updatePresenceList(this.activeUsers)\n            this.showNotification(`${data.username} joined`, 'info')\n        }\n\n        this.wsClient.onUserDisconnected = (data) => {\n            // Remove user from active users list\n            const userId = data.userId || data['user-id']\n            this.activeUsers = this.activeUsers.filter(u =>\n                (u['user-id'] || u.userId) !== userId\n            )\n            this.updatePresenceList(this.activeUsers)\n            this.canvasManager.removeRemoteCursor(userId)\n            this.showNotification(`${data.username} left`, 'info')\n        }\n\n        this.wsClient.onPresenceUpdate = (users) => {\n            // Replace entire active users list with server's authoritative list\n            this.activeUsers = users\n            this.updatePresenceList(this.activeUsers)\n        }\n\n        this.wsClient.onCursorUpdate = (data) => {\n            this.canvasManager.updateRemoteCursor(\n                data.userId,\n                data.username,\n                data.x,\n                data.y,\n                data.color\n            )\n        }\n\n        this.wsClient.onObjectCreated = (data) => {\n            this.canvasManager.createRemoteObject(data.object)\n        }\n\n        this.wsClient.onObjectUpdated = (data) => {\n            // Backend sends 'object-id' (kebab-case)\n            const objectId = data['object-id'] || data.objectId\n            this.canvasManager.updateRemoteObject(objectId, data.delta)\n        }\n\n        this.wsClient.onObjectDeleted = (data) => {\n            // Remove user from active users list\n            const userId = data.userId || data['user-id']\n            this.activeUsers = this.activeUsers.filter(u =>\n                (u['user-id'] || u.userId) !== userId\n            )\n            this.updatePresenceList(this.activeUsers)\n            this.canvasManager.removeRemoteCursor(userId)\n            this.showNotification(`${data.username} left`, 'info')\n        }\n\n        this.wsClient.onObjectsDeleted = (data) => {\n            const objectIds = data['object-ids'] || data.objectIds || []\n            console.log('Received bulk delete for objects:', objectIds)\n\n            // Handle remote bulk deletion\n            if (objectIds.length > 0) {\n                objectIds.forEach(objectId => {\n                    this.canvasManager.deleteObject(objectId)\n                })\n                console.log(`Processed remote bulk deletion of ${objectIds.length} objects`)\n            }\n        }\n\n        // Physics snapshot handler (Subtask 5.2: Handle snapshot reception)\n        this.wsClient.onPhysicsSnapshot = (snapshot) => {\n            this.canvasManager.handlePhysicsSnapshot(snapshot)\n        }\n\n        // Physics state change handler (play/pause/reset notifications)\n        this.wsClient.onPhysicsStateChange = (data) => {\n            const action = data.action || data.state\n            console.log(`Physics state changed: ${action}`)\n\n            if (action === 'play' || action === 'playing') {\n                this.canvasManager.enablePhysics()\n                this.showNotification('Physics simulation started', 'info')\n            } else if (action === 'pause' || action === 'paused') {\n                this.canvasManager.disablePhysics()\n                this.showNotification('Physics simulation paused', 'info')\n            } else if (action === 'reset') {\n                this.canvasManager.disablePhysics()\n                this.canvasManager.physicsEngine.reset()\n                this.showNotification('Physics simulation reset', 'info')\n            } else if (action === 'set-gravity') {\n                const gravity = data.value || data.gravity\n                this.canvasManager.setGravity(gravity)\n                this.showNotification(`Gravity set to ${gravity}`, 'info')\n            }\n        }\n\n        this.wsClient.onError = (error) => {\n            console.error('WebSocket error:', error)\n            this.showNotification('Connection error', 'error')\n        }\n\n        this.wsClient.onReconnecting = () => {\n            this.showNotification('Reconnecting...', 'warning')\n        }\n\n        this.wsClient.onReconnected = () => {\n            this.showNotification('Reconnected', 'success')\n        }\n\n        // Connect to WebSocket\n        this.wsClient.connect()\n    }\n\n    setupUIHandlers() {\n        // Tool buttons\n        document.querySelectorAll('.tool-btn').forEach(btn => {\n            btn.addEventListener('click', () => {\n                const tool = btn.dataset.tool\n                this.canvasManager.setTool(tool)\n\n                // Update active button\n                document.querySelectorAll('.tool-btn').forEach(b =>\n                    b.classList.remove('active'))\n                btn.classList.add('active')\n            })\n        })\n\n        // Color picker\n        const colorPicker = document.getElementById('color-picker')\n        colorPicker.addEventListener('change', (e) => {\n            this.canvasManager.setColor(e.target.value)\n        })\n\n        // Physics Controls\n        this.setupPhysicsControls()\n\n        // Physics Properties UI\n        this.setupPhysicsPropertiesUI()\n\n        // Keyboard shortcuts\n        document.addEventListener('keydown', (e) => {\n            // Prevent shortcuts when typing in inputs\n            if (e.target.tagName === 'INPUT') return\n\n            switch(e.key.toLowerCase()) {\n                case 'v':\n                    this.selectTool('select')\n                    break\n                case 'r':\n                    this.selectTool('rectangle')\n                    break\n                case 'c':\n                    this.selectTool('circle')\n                    break\n                case 'p':\n                    if (e.ctrlKey && e.shiftKey) {\n                        e.preventDefault()\n                        this.runPerformanceTest()\n                    }\n                    break\n                case 'delete':\n                case 'backspace':\n                    if (!e.target.isContentEditable) {\n                        e.preventDefault()\n                        this.canvasManager.deleteSelected()\n                    }\n                    break\n                case 'z':\n                    if (e.ctrlKey || e.metaKey) {\n                        e.preventDefault()\n                        if (e.shiftKey) {\n                            this.canvasManager.redo()\n                        } else {\n                            this.canvasManager.undo()\n                        }\n                    }\n                    break\n            }\n        })\n\n        // Logout button (if added to UI)\n        const logoutBtn = document.getElementById('logout-btn')\n        if (logoutBtn) {\n            logoutBtn.addEventListener('click', async () => {\n                await this.logout()\n            })\n        }\n    }\n\n    selectTool(tool) {\n        this.canvasManager.setTool(tool)\n\n        // Update UI\n        document.querySelectorAll('.tool-btn').forEach(btn => {\n            if (btn.dataset.tool === tool) {\n                btn.classList.add('active')\n            } else {\n                btn.classList.remove('active')\n            }\n        })\n    }\n\n    setupPhysicsControls() {\n        // Play button\n        const playBtn = document.getElementById('play-btn')\n        if (playBtn) {\n            playBtn.addEventListener('click', () => {\n                if (this.wsClient && this.wsClient.isConnected) {\n                    this.wsClient.sendPhysicsControl('play')\n                    console.log('Sent physics control: play')\n                }\n            })\n        }\n\n        // Pause button\n        const pauseBtn = document.getElementById('pause-btn')\n        if (pauseBtn) {\n            pauseBtn.addEventListener('click', () => {\n                if (this.wsClient && this.wsClient.isConnected) {\n                    this.wsClient.sendPhysicsControl('pause')\n                    console.log('Sent physics control: pause')\n                }\n            })\n        }\n\n        // Reset button\n        const resetBtn = document.getElementById('reset-btn')\n        if (resetBtn) {\n            resetBtn.addEventListener('click', () => {\n                if (this.wsClient && this.wsClient.isConnected) {\n                    this.wsClient.sendPhysicsControl('reset')\n                    console.log('Sent physics control: reset')\n                }\n            })\n        }\n\n        // Gravity slider\n        const gravitySlider = document.getElementById('gravity-slider')\n        const gravityValue = document.getElementById('gravity-value')\n        if (gravitySlider && gravityValue) {\n            gravitySlider.addEventListener('input', (e) => {\n                const value = parseFloat(e.target.value)\n                gravityValue.textContent = value.toFixed(1)\n            })\n\n            gravitySlider.addEventListener('change', (e) => {\n                const value = parseFloat(e.target.value)\n                if (this.wsClient && this.wsClient.isConnected) {\n                    this.wsClient.sendPhysicsControl('set-gravity', value)\n                    console.log('Sent physics control: set-gravity', value)\n                }\n            })\n        }\n\n        // Boundary selector\n        const boundarySelector = document.getElementById('boundary-selector')\n        if (boundarySelector) {\n            boundarySelector.addEventListener('change', (e) => {\n                const value = e.target.value\n                if (this.wsClient && this.wsClient.isConnected) {\n                    this.wsClient.sendPhysicsControl('set-boundary', value)\n                    console.log('Sent physics control: set-boundary', value)\n                }\n            })\n        }\n    }\n\n    updatePresenceList(users = []) {\n        const container = document.getElementById('users-container')\n        container.innerHTML = ''\n\n        users.forEach(user => {\n            const userItem = document.createElement('div')\n            userItem.className = 'user-item'\n            // Handle both kebab-case and camelCase keys\n            const username = user.username\n            const color = user.color\n            userItem.innerHTML = `\n                <span class=\"user-indicator\" style=\"background-color: ${color}\"></span>\n                <span>${username}</span>\n            `\n            container.appendChild(userItem)\n        })\n    }\n\n    setupPhysicsPropertiesUI() {\n        // isDynamic checkbox\n        const isDynamicCheckbox = document.getElementById('prop-isDynamic')\n        if (isDynamicCheckbox) {\n            isDynamicCheckbox.addEventListener('change', (e) => {\n                this.updateSelectedObjectPhysicsProperty('isDynamic', e.target.checked)\n            })\n        }\n\n        // Friction slider\n        const frictionSlider = document.getElementById('prop-friction')\n        const frictionValue = document.getElementById('prop-friction-value')\n        if (frictionSlider && frictionValue) {\n            frictionSlider.addEventListener('input', (e) => {\n                frictionValue.textContent = parseFloat(e.target.value).toFixed(2)\n            })\n            frictionSlider.addEventListener('change', (e) => {\n                const value = parseFloat(e.target.value)\n                this.updateSelectedObjectPhysicsProperty('friction', value)\n            })\n        }\n\n        // Restitution slider\n        const restitutionSlider = document.getElementById('prop-restitution')\n        const restitutionValue = document.getElementById('prop-restitution-value')\n        if (restitutionSlider && restitutionValue) {\n            restitutionSlider.addEventListener('input', (e) => {\n                restitutionValue.textContent = parseFloat(e.target.value).toFixed(2)\n            })\n            restitutionSlider.addEventListener('change', (e) => {\n                const value = parseFloat(e.target.value)\n                this.updateSelectedObjectPhysicsProperty('restitution', value)\n            })\n        }\n    }\n\n    updatePhysicsPropertiesUI(selectedObjects) {\n        const propertiesSection = document.getElementById('properties-section')\n        const isDynamicCheckbox = document.getElementById('prop-isDynamic')\n        const isDynamicHint = document.getElementById('prop-isDynamic-hint')\n        const frictionSlider = document.getElementById('prop-friction')\n        const frictionValue = document.getElementById('prop-friction-value')\n        const restitutionSlider = document.getElementById('prop-restitution')\n        const restitutionValue = document.getElementById('prop-restitution-value')\n\n        // Show/hide properties panel based on selection\n        if (selectedObjects.size === 0) {\n            propertiesSection.style.display = 'none'\n            return\n        }\n\n        // Show properties panel\n        propertiesSection.style.display = 'block'\n\n        // Get first selected object (for simplicity, only show properties for single selection)\n        const firstObjectId = Array.from(selectedObjects)[0]\n        const object = this.canvasManager.getObjectById(firstObjectId)\n\n        if (!object) {\n            propertiesSection.style.display = 'none'\n            return\n        }\n\n        // Multi-selection: show but disable controls\n        if (selectedObjects.size > 1) {\n            isDynamicCheckbox.disabled = true\n            frictionSlider.disabled = true\n            restitutionSlider.disabled = true\n            isDynamicHint.textContent = 'Select a single object to edit properties'\n            return\n        }\n\n        // Single selection: enable controls and populate values\n        frictionSlider.disabled = false\n        restitutionSlider.disabled = false\n\n        // Check if object is a rectangle (rectangles can't be dynamic per Task 3)\n        const isRectangle = object.type === 'rectangle'\n\n        if (isRectangle) {\n            isDynamicCheckbox.disabled = true\n            isDynamicCheckbox.checked = false\n            isDynamicHint.textContent = 'Rectangles are always static (boundaries)'\n        } else {\n            isDynamicCheckbox.disabled = false\n            isDynamicCheckbox.checked = object.isDynamic || false\n            isDynamicHint.textContent = ''\n        }\n\n        // Update slider values\n        const friction = object.friction !== undefined ? object.friction : 0.02\n        const restitution = object.restitution !== undefined ? object.restitution : 0.7\n\n        frictionSlider.value = friction\n        frictionValue.textContent = friction.toFixed(2)\n\n        restitutionSlider.value = restitution\n        restitutionValue.textContent = restitution.toFixed(2)\n    }\n\n    updateSelectedObjectPhysicsProperty(propertyName, value) {\n        // Only update if single object is selected\n        if (this.canvasManager.selectedObjects.size !== 1) {\n            console.warn('Cannot update physics properties for multiple objects')\n            return\n        }\n\n        const objectId = Array.from(this.canvasManager.selectedObjects)[0]\n        const object = this.canvasManager.getObjectById(objectId)\n\n        if (!object) {\n            console.warn('Selected object not found:', objectId)\n            return\n        }\n\n        // Prevent setting isDynamic=true for rectangles\n        if (propertyName === 'isDynamic' && value === true && object.type === 'rectangle') {\n            console.warn('Rectangles cannot be dynamic (they are static boundaries)')\n            return\n        }\n\n        // Update object locally\n        object[propertyName] = value\n        console.log(`Updated object ${objectId} ${propertyName} to ${value}`)\n\n        // Send update via WebSocket\n        if (this.wsClient && this.wsClient.isConnected) {\n            const updates = {}\n            updates[propertyName] = value\n            this.wsClient.sendObjectUpdate(objectId, updates)\n            console.log('Sent physics property update via WebSocket:', updates)\n        }\n    }\n\n    showNotification(message, type = 'info') {\n        // Simple notification system (can be enhanced with a library)\n        console.log(`[${type.toUpperCase()}] ${message}`)\n\n        // TODO: Implement visual notifications\n    }\n\n    async logout() {\n        try {\n            await fetch('/api/logout', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': this.sessionId\n                }\n            })\n        } catch (error) {\n            console.error('Logout error:', error)\n        }\n\n        // Clean up\n        localStorage.removeItem('sessionId')\n\n        // Stop periodic cleanup timer\n        if (this.canvasManager) {\n            this.canvasManager.stopPeriodicCleanup()\n        }\n\n        // Disconnect WebSocket (also cleans up cursor throttle)\n        if (this.wsClient) {\n            this.wsClient.disconnect()\n        }\n\n        // Reload page to show login\n        window.location.reload()\n    }\n\n    async runPerformanceTest() {\n        console.log('Performance testing is not available in production build');\n        console.log('Use development build (npm run dev) for performance testing');\n    }\n}\n\n// Initialize application when DOM is ready\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n        const app = new CollabCanvas()\n        app.init()\n        window.collabCanvas = app // For debugging\n    })\n} else {\n    const app = new CollabCanvas()\n    app.init()\n    window.collabCanvas = app // For debugging\n}"],"names":["PHYSICS_TIMESTEP","DEFAULT_GRAVITY","DEFAULT_FRICTION","DEFAULT_RESTITUTION","CANVAS_WIDTH","CANVAS_HEIGHT","PhysicsObject","config","PhysicsEngine","id","x","y","radius","options","isDynamic","color","mass","obj","width","height","dt","dt2","vx","vy","frictionFactor","newX","newY","fx","fy","r","restitution","c1","c2","dx","dy","distSq","rSum","rSumSq","dist","overlap","nx","ny","totalMass","ratio1","ratio2","v1x","v1y","v2x","v2y","dvn","impulse","circle","rect","cx","cy","rx","ry","rw","rh","closestX","closestY","dot","objects","collisionCount","i","j","obj1","obj2","other","snapshot","gravity","objData","type","PIXI.extensions","PIXI.CullerPlugin","e","PerformanceMonitor","app","canvasManager","deltaTime","now","deltaMs","avgFps","objectCount","a","b","CanvasManager","__publicField","PIXI.Container","graphics","PIXI.Graphics","texture","PIXI.SCALE_MODES","grid","gridSize","gridExtent","canvas","zoomFactor","mouseX","mouseY","worldPosBefore","newScale","worldPosAfter","worldPos","screenX","screenY","worldX","worldY","tool","drawStart","previewShape","lastPreviewUpdate","previewUpdatePending","currentWorldPos","viewportBounds","objBounds","isVisible","screenWidth","screenHeight","topLeft","bottomRight","deltaSeconds","physicsObj","pixiObj","serverState","divergence","lerpX","lerpY","start","end","rate","lifespan","particleSize","initialVelocity","emitter","starGraphics","numPoints","outerRadius","innerRadius","points","angle","pulseTime","pulseAnimation","delta","scale","text","fontSize","textObj","PIXI.Text","event","existingIndicator","indicator","idsToDelete","deletedIds","canvasState","index","values","key","value","updates","ids","deletedObjects","allClean","issues","child","orphanedPixiObjects","textureCount","PIXI.Cache","pixiChildren","objectsInMap","selectionIndicators","selectedObjects","remoteCursors","objectId","userId","username","cursor","colorNum","pointer","PIXI.Sprite","label","lerpFactor","intervalMs","orphanedIndicators","orphanedCursors","fiveMinutesAgo","LatencyMonitor","messageId","messageType","pending","latency","sum","acc","item","percentile","sorted","filtered","latencies","val","getPercentile","p","stats","CursorThrottle","sendCallback","WebSocketClient","url","sessionId","canvasId","error","data","messageSize","trackLatency","object","delay","elapsedMinutes","objectIds","action","message","AuthManager","btn","tab","auth0LoginBtn","googleLoginBtn","githubLoginBtn","form","err","resolve","formId","errorEl","response","code","errorDescription","email","password","CollabCanvas","newUrl","authData","loadingScreen","_a","errorData","container","backgroundColor","PIXI.Application","themeToggle","newBgColor","zoom","count","wsProtocol","wsUrl","u","users","logoutBtn","playBtn","pauseBtn","resetBtn","gravitySlider","gravityValue","boundarySelector","user","userItem","isDynamicCheckbox","frictionSlider","frictionValue","restitutionSlider","restitutionValue","propertiesSection","isDynamicHint","firstObjectId","friction","propertyName"],"mappings":"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"}
System.register(["./pixi-legacy-CeeWPqbh.js"],function(e,t){"use strict";var s,o,n,i,r,a,c,l;return{setters:[e=>{s=e.C,o=e.G,n=e.S,i=e.T,r=e.a,a=e.B,c=e.b,l=e.A}],execute:function(){var e=document.createElement("style");e.textContent=".remote-cursor{position:absolute;pointer-events:none;z-index:1000;transition:left .1s ease-out,top .1s ease-out}.remote-cursor-pointer{width:0;height:0;border-left:7px solid transparent;border-right:7px solid transparent;border-top:20px solid;transform:rotate(-45deg);transform-origin:center top}.remote-cursor-label{position:absolute;top:20px;left:10px;padding:2px 8px;background:rgba(0,0,0,.8);color:#fff;font-size:12px;border-radius:4px;white-space:nowrap;user-select:none}.selection-box{position:absolute;border:2px dashed #5a9cb0;background:rgba(90,156,176,.1);pointer-events:none;z-index:999}.resize-handle{position:absolute;width:8px;height:8px;background:#fff;border:2px solid #5a9cb0;border-radius:2px}.resize-handle.nw{cursor:nw-resize;top:-5px;left:-5px}.resize-handle.ne{cursor:ne-resize;top:-5px;right:-5px}.resize-handle.sw{cursor:sw-resize;bottom:-5px;left:-5px}.resize-handle.se{cursor:se-resize;bottom:-5px;right:-5px}.resize-handle.n{cursor:n-resize;top:-5px;left:50%;transform:translate(-50%)}.resize-handle.s{cursor:s-resize;bottom:-5px;left:50%;transform:translate(-50%)}.resize-handle.w{cursor:w-resize;left:-5px;top:50%;transform:translateY(-50%)}.resize-handle.e{cursor:e-resize;right:-5px;top:50%;transform:translateY(-50%)}.notification{position:fixed;bottom:20px;right:20px;padding:12px 20px;border-radius:4px;color:#fff;font-size:14px;z-index:10000;animation:slideIn .3s ease-out}@keyframes slideIn{0%{transform:translate(100%);opacity:0}to{transform:translate(0);opacity:1}}.notification.info{background:#4a7c8e}.notification.success{background:#4caf50}.notification.warning{background:#ff9800}.notification.error{background:#f44336}.loading-spinner{border:3px solid rgba(255,255,255,.3);border-radius:50%;border-top:3px solid white;width:20px;height:20px;animation:spin 1s linear infinite}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}@media (max-width: 768px){#toolbar{top:10px;left:10px;padding:5px}.tool-btn{width:35px;height:35px;font-size:16px}#presence-list{top:10px;right:10px;min-width:150px}#status-bar{font-size:11px;padding:6px 15px}}@media print{#toolbar,#presence-list,#status-bar,#auth-modal{display:none!important}}\n/*$vite$:1*/",document.head.appendChild(e);class t{constructor(e,t){this.app=e,this.canvasManager=t,this.fpsHistory=[],this.maxHistorySize=60,this.currentFps=60,this.lastTime=performance.now(),this.frameCount=0,this.app.ticker.add(this.update.bind(this)),console.log("PerformanceMonitor initialized")}update(e){const t=performance.now(),s=t-this.lastTime;if(s>0&&(this.currentFps=Math.round(1e3/s)),this.lastTime=t,this.fpsHistory.push(this.currentFps),this.fpsHistory.length>this.maxHistorySize&&this.fpsHistory.shift(),this.currentFps<55){const e=this.getAverageFps(),t=this.canvasManager?this.canvasManager.objects.size:0;console.warn(`⚠️ Low FPS detected: ${this.currentFps} FPS (avg: ${e.toFixed(1)}, objects: ${t})`)}}getAverageFps(){return 0===this.fpsHistory.length?60:this.fpsHistory.reduce((e,t)=>e+t,0)/this.fpsHistory.length}getStats(){return 0===this.fpsHistory.length?{current:this.currentFps,average:60,min:60,max:60}:{current:this.currentFps,average:Math.round(10*this.getAverageFps())/10,min:Math.min(...this.fpsHistory),max:Math.max(...this.fpsHistory)}}destroy(){this.app&&this.app.ticker&&this.app.ticker.remove(this.update.bind(this))}}class h{constructor(e){this.app=e,this.viewport=new s,this.objects=new Map,this.selectedObjects=new Set,this.selectionIndicators=new Map,this.remoteCursors=new Map,this.isPanning=!1,this.panStart={x:0,y:0},this.currentTool="select",this.currentColor=3447003,this.cullingEnabled=!0,this.cullingPadding=200,this.lastViewportBounds=null,this.performanceMonitor=new t(e,this),this.cursorTexture=this.createSharedCursorTexture(),this.app.stage.addChild(this.viewport),this.viewport.sortableChildren=!0,this.drawGrid(),this.setupPanZoom(),this.setupKeyboardShortcuts(),this.setupToolHandlers(),this.setupViewportCulling(),console.log("Canvas initialized")}createSharedCursorTexture(){const e=new o;e.beginFill(16777215),e.moveTo(0,0),e.lineTo(12,18),e.lineTo(6,18),e.lineTo(0,24),e.endFill();const t=this.app.renderer.generateTexture(e,{resolution:1,scaleMode:n.LINEAR});return e.destroy(),t}drawGrid(){const e=new o;e.lineStyle(1,3355443,.3);const t=5e3;for(let s=-5e3;s<=t;s+=50)e.moveTo(s,-5e3),e.lineTo(s,t);for(let s=-5e3;s<=t;s+=50)e.moveTo(-5e3,s),e.lineTo(t,s);e.zIndex=-1,this.viewport.addChild(e)}setupPanZoom(){const e=this.app.view;e.addEventListener("mousedown",t=>{(1===t.button||0===t.button&&t.altKey)&&(this.isPanning=!0,this.panStart={x:t.clientX,y:t.clientY},e.style.cursor="grabbing",t.preventDefault())}),e.addEventListener("mousemove",e=>{if(this.isPanning){const t=e.clientX-this.panStart.x,s=e.clientY-this.panStart.y;this.viewport.x+=t,this.viewport.y+=s,this.panStart={x:e.clientX,y:e.clientY}}}),e.addEventListener("mouseup",()=>{this.isPanning&&(this.isPanning=!1,e.style.cursor="default")}),e.addEventListener("wheel",e=>{e.preventDefault();const t=e.deltaY>0?.9:1.1,s=e.clientX,o=e.clientY,n=this.screenToWorld(s,o),i=this.viewport.scale.x*t;if(i>=.1&&i<=10){this.viewport.scale.set(i);const e=this.screenToWorld(s,o);this.viewport.x+=(e.x-n.x)*this.viewport.scale.x,this.viewport.y+=(e.y-n.y)*this.viewport.scale.y}},{passive:!1})}screenToWorld(e,t){return{x:(e-this.viewport.x)/this.viewport.scale.x,y:(t-this.viewport.y)/this.viewport.scale.y}}worldToScreen(e,t){return{x:e*this.viewport.scale.x+this.viewport.x,y:t*this.viewport.scale.y+this.viewport.y}}setupKeyboardShortcuts(){document.addEventListener("keydown",e=>{"r"===e.key||"R"===e.key?this.setTool("rectangle"):"c"===e.key||"C"===e.key?this.setTool("circle"):"t"===e.key||"T"===e.key?this.setTool("text"):"v"===e.key||"V"===e.key||"Escape"===e.key?this.setTool("select"):"Delete"!==e.key&&"Backspace"!==e.key||this.deleteSelected()})}setTool(e){this.currentTool=e,console.log("Tool:",e)}setupToolHandlers(){const e=this.app.view;let t=null,s=null;e.addEventListener("mousemove",e=>{const o=this.screenToWorld(e.clientX,e.clientY);if(this.onCursorMoved&&this.onCursorMoved(o.x,o.y),t&&s){const e=o.x-t.x,n=o.y-t.y;if(s.clear(),s.beginFill(this.currentColor),"rectangle"===this.currentTool)s.drawRect(t.x,t.y,e,n);else if("circle"===this.currentTool){const o=Math.sqrt(e*e+n*n);s.drawCircle(t.x,t.y,o)}s.endFill()}}),e.addEventListener("mousedown",e=>{if(0!==e.button||e.altKey)return;const n=this.screenToWorld(e.clientX,e.clientY);"rectangle"!==this.currentTool&&"circle"!==this.currentTool||(t=n,s=new o,s.alpha=.5,this.viewport.addChild(s))}),e.addEventListener("mouseup",e=>{if(t&&s){const o=this.screenToWorld(e.clientX,e.clientY),n=this.createToolObject(t,o);this.viewport.removeChild(s),s=null,t=null,this.onObjectCreated&&this.onObjectCreated(n)}})}setupViewportCulling(){this.app.ticker.add(()=>{this.cullingEnabled&&this.updateVisibleObjects()})}updateVisibleObjects(){const e=this.getViewportBounds();(!this.lastViewportBounds||Math.abs(e.left-this.lastViewportBounds.left)>50||Math.abs(e.top-this.lastViewportBounds.top)>50||Math.abs(e.right-this.lastViewportBounds.right)>50||Math.abs(e.bottom-this.lastViewportBounds.bottom)>50)&&(this.lastViewportBounds=e,this.objects.forEach((t,s)=>{const o=this.getObjectBounds(t),n=this.isBoundsVisible(o,e);t.visible!==n&&(t.visible=n)}))}getViewportBounds(){const e=this.app.renderer.width,t=this.app.renderer.height,s=this.screenToWorld(0,0),o=this.screenToWorld(e,t);return{left:s.x-this.cullingPadding,top:s.y-this.cullingPadding,right:o.x+this.cullingPadding,bottom:o.y+this.cullingPadding}}getObjectBounds(e){if(e.userData){if("rectangle"===e.userData.type)return{left:e.x,top:e.y,right:e.x+e.userData.width,bottom:e.y+e.userData.height};if("circle"===e.userData.type){const t=e.userData.radius;return{left:e.x-t,top:e.y-t,right:e.x+t,bottom:e.y+t}}}return e.width&&e.height?{left:e.x,top:e.y,right:e.x+e.width,bottom:e.y+e.height}:{left:e.x,top:e.y,right:e.x,bottom:e.y}}isBoundsVisible(e,t){return!(e.right<t.left||e.left>t.right||e.bottom<t.top||e.top>t.bottom)}createToolObject(e,t){const s=this.generateId();if("rectangle"===this.currentTool){const o=Math.abs(t.x-e.x),n=Math.abs(t.y-e.y),i=Math.min(e.x,t.x),r=Math.min(e.y,t.y);return this.createRectangle(s,i,r,o,n,this.currentColor),{id:s,type:"rectangle",x:i,y:r,width:o,height:n,color:this.currentColor}}if("circle"===this.currentTool){const o=t.x-e.x,n=t.y-e.y,i=Math.sqrt(o*o+n*n);return this.createCircle(s,e.x,e.y,i,this.currentColor),{id:s,type:"circle",x:e.x,y:e.y,radius:i,color:this.currentColor}}}createRectangle(e,t,s,n,i,r){const a=new o;return a.beginFill(r),a.drawRect(0,0,n,i),a.endFill(),a.x=t,a.y=s,a.interactive=!0,a.buttonMode=!0,a.visible=!0,a.userData={width:n,height:i,type:"rectangle"},this.makeDraggable(a,e),this.makeSelectable(a,e),this.objects.set(e,a),this.viewport.addChild(a),a}createCircle(e,t,s,n,i){const r=new o;return r.beginFill(i),r.drawCircle(0,0,n),r.endFill(),r.x=t,r.y=s,r.interactive=!0,r.buttonMode=!0,r.visible=!0,r.userData={radius:n,type:"circle"},this.makeDraggable(r,e),this.makeSelectable(r,e),this.objects.set(e,r),this.viewport.addChild(r),r}createText(e,t,s,o,n,r){const a=new i(t,{fontSize:n,fill:r,fontFamily:"Arial"});return a.x=s,a.y=o,a.interactive=!0,a.buttonMode=!0,a.visible=!0,this.makeDraggable(a,e),this.makeSelectable(a,e),this.objects.set(e,a),this.viewport.addChild(a),a}makeDraggable(e,t){let s=null,o={x:0,y:0},n=0;e.on("pointerdown",t=>{if("select"!==this.currentTool)return;s=t.data,e.alpha=.7,s.dragging=!0;const n=s.getLocalPosition(e.parent);o.x=n.x-e.x,o.y=n.y-e.y,t.stopPropagation()}),e.on("pointerup",()=>{s&&s.dragging&&(e.alpha=1,s.dragging=!1,this.onObjectUpdated&&this.onObjectUpdated(t,{x:e.x,y:e.y}),s=null)}),e.on("pointermove",()=>{if(s&&s.dragging){const i=s.getLocalPosition(e.parent);e.x=i.x-o.x,e.y=i.y-o.y;const r=performance.now();r-n>=50&&(this.onObjectUpdated&&this.onObjectUpdated(t,{x:e.x,y:e.y}),n=r)}})}makeSelectable(e,t){e.on("click",e=>{"select"===this.currentTool&&(e.data.originalEvent.shiftKey?this.selectedObjects.has(t)?this.deselectObject(t):this.selectObject(t):(this.clearSelection(),this.selectObject(t)),e.stopPropagation())})}selectObject(e){const t=this.objects.get(e);if(!t)return;this.selectedObjects.add(e);const s=this.selectionIndicators.get(e);s&&(this.viewport.removeChild(s),s.destroy());const n=new o;if(n.lineStyle(2,65280),t.userData)if("rectangle"===t.userData.type){const{width:e,height:s}=t.userData;n.drawRect(-2,-2,e+4,s+4),n.x=t.x,n.y=t.y}else if("circle"===t.userData.type){const{radius:e}=t.userData;n.drawCircle(0,0,e+2),n.x=t.x,n.y=t.y}this.viewport.addChild(n),this.selectionIndicators.set(e,n)}deselectObject(e){if(!this.objects.get(e))return;this.selectedObjects.delete(e);const t=this.selectionIndicators.get(e);t&&(this.viewport.removeChild(t),t.destroy(),this.selectionIndicators.delete(e))}clearSelection(){this.selectedObjects.forEach(e=>this.deselectObject(e)),this.selectedObjects.clear()}deleteSelected(){if(0===this.selectedObjects.size)return;const e=Array.from(this.selectedObjects),t=this.deleteObjects(e);this.selectedObjects.clear(),this.onObjectsDeleted&&t.length>0&&this.onObjectsDeleted(t),console.log(`Deleted ${t.length} selected objects`)}loadState(e){if(console.error("========================================"),console.error("=== LOAD STATE CALLED ==="),console.error("========================================"),console.error("Canvas state received:",e),console.error("Canvas state type:",typeof e),console.error("Is array?",Array.isArray(e)),console.error("Clearing existing objects..."),this.objects.forEach((e,t)=>{this.deleteObject(t)}),console.error("Objects cleared. Map size:",this.objects.size),e&&"object"==typeof e)if(Array.isArray(e))console.error(`=== Loading ${e.length} objects from ARRAY ===`),e.forEach((e,t)=>{console.error(`Loading object ${t}:`,JSON.stringify(e)),this.createRemoteObject(e)});else{const t=Object.values(e);console.error(`=== Loading ${t.length} objects from OBJECT ===`),t.forEach((e,t)=>{console.error(`Loading object ${t}:`,JSON.stringify(e)),this.createRemoteObject(e)})}else console.error("!!! INVALID canvas state !!!:",e);console.error("========================================"),console.error(`=== LOAD STATE COMPLETE: ${this.objects.size} objects ===`),console.error("Current objects in map:",Array.from(this.objects.keys())),console.error("========================================"),this.cullingEnabled&&this.updateVisibleObjects()}applyDelta(e,t){const s=this.objects.get(e);if(s){for(const[e,o]of Object.entries(t))s[e]=o;s instanceof o&&(void 0===t.width&&void 0===t.height&&void 0===t.color&&void 0===t.rotation||this.redrawGraphicsObject(s))}}redrawGraphicsObject(e){e.clear(),e.width&&e.height&&(e.beginFill(e.color||16711680),e.drawRect(0,0,e.width,e.height),e.endFill()),e.rotation&&(e.rotation=e.rotation)}updateObject(e,t){const s=this.objects.get(e);s&&(void 0!==t.x&&(s.x=t.x),void 0!==t.y&&(s.y=t.y),s instanceof o&&(void 0===t.width&&void 0===t.height||console.log("Dimension updates for Graphics require recreation")))}deleteObject(e){const t=this.objects.get(e);if(t){this.viewport.removeChild(t),this.objects.delete(e),t.destroy({children:!0,texture:!1,baseTexture:!1});const s=this.selectionIndicators.get(e);s&&(this.viewport.removeChild(s),s.destroy({children:!0,texture:!1,baseTexture:!1}),this.selectionIndicators.delete(e)),this.selectedObjects.delete(e),console.log(`Deleted object ${e} with proper texture preservation`)}}deleteObjects(e){if(!Array.isArray(e)||0===e.length)return void console.warn("deleteObjects: Expected non-empty array of IDs");console.log(`Bulk deleting ${e.length} objects:`,e);const t=[];return e.forEach(e=>{const s=this.objects.get(e);if(s){this.viewport.removeChild(s),this.objects.delete(e),s.destroy({children:!0,texture:!1,baseTexture:!1});const o=this.selectionIndicators.get(e);o&&(this.viewport.removeChild(o),o.destroy({children:!0,texture:!1,baseTexture:!1}),this.selectionIndicators.delete(e)),this.selectedObjects.delete(e),t.push(e)}else console.warn(`Object ${e} not found for deletion`)}),console.log(`Bulk deleted ${t.length} objects successfully`),t}verifyObjectDeletion(e){Array.isArray(e)||(e=[e]);let t=!0;const s=[];e.forEach(e=>{this.objects.has(e)&&(s.push(`Object ${e} still in objects map`),t=!1),this.selectionIndicators.has(e)&&(s.push(`Selection indicator for ${e} still exists`),t=!1),this.selectedObjects.has(e)&&(s.push(`Object ${e} still in selectedObjects set`),t=!1),this.viewport.children.find(t=>t._objectId===e)&&(s.push(`Object ${e} still in viewport children`),t=!1)});const o=this.viewport.children.filter(e=>e._objectId&&!this.objects.has(e._objectId));o.length>0&&(s.push(`${o.length} orphaned PIXI objects found in viewport`),t=!1);const n=Object.keys(r).length;return n>100&&s.push(`High texture count detected: ${n} textures in cache`),t?console.log(`Memory leak verification passed for ${e.length} deleted objects`):console.warn("Memory leak verification failed:",s),{success:t,issues:s,textureCount:n,orphanedObjects:o.length}}getMemoryStats(){const e=this.viewport.children.length,t=this.objects.size,s=this.selectionIndicators.size,o=this.selectedObjects.size,n=this.remoteCursors.size;return{pixiChildren:e,objectsInMap:t,selectionIndicators:s,selectedObjects:o,remoteCursors:n,totalTrackedObjects:t+s+o+n,textureCacheSize:Object.keys(r).length,baseTextureCacheSize:Object.keys(a).length}}createRemoteObject(e){console.log("Creating remote object:",e),console.log("Object properties:",{id:e.id,type:e.type,x:e.x,y:e.y,width:e.width,height:e.height,radius:e.radius,color:e.color,colorType:typeof e.color});const t=this.normalizeColor(e.color);console.log("Normalized color:",t,"type:",typeof t);let s=e.type;if(!s)if(console.warn("Object missing type field, inferring from properties:",e),void 0!==e.radius)s="circle";else if(void 0!==e.width&&void 0!==e.height)s="rectangle";else{if(void 0===e.text)return void console.error("Cannot infer type for object:",e);s="text"}if("rectangle"===s){if(!e.width||!e.height||e.width<=0||e.height<=0)return void console.warn("Skipping rectangle with invalid dimensions:",e);console.log("Creating rectangle with:",{id:e.id,x:e.x,y:e.y,width:e.width,height:e.height,color:t}),this.createRectangle(e.id,e.x,e.y,e.width,e.height,t),console.log("Rectangle created successfully. Objects in map:",this.objects.size)}else"circle"===s?(console.log("Creating circle with:",{id:e.id,x:e.x,y:e.y,radius:e.radius,color:t}),this.createCircle(e.id,e.x,e.y,e.radius,t),console.log("Circle created successfully")):"text"===s?(console.log("Creating text with:",{id:e.id,text:e.text,x:e.x,y:e.y,fontSize:e.fontSize,color:t}),this.createText(e.id,e.text,e.x,e.y,e.fontSize,t),console.log("Text created successfully")):console.error("Unknown object type:",s)}normalizeColor(e){return"number"==typeof e?e:"string"==typeof e?e.startsWith("#")?parseInt(e.substring(1),16):parseInt(e,16):3447003}updateRemoteObject(e,t){console.log("Updating remote object with delta:",e,t),this.applyDelta(e,t)}deleteRemoteObject(e){console.log("Deleting remote object:",e),this.deleteObject(e)}getObject(e){return this.objects.get(e)}getAllObjects(){return Array.from(this.objects.entries()).map(([e,t])=>({id:e,type:t.constructor.name,x:t.x,y:t.y}))}getPerformanceStats(){return this.performanceMonitor.getStats()}updateRemoteCursor(e,t,o,n,r){let a=this.remoteCursors.get(e);const l=r&&"string"==typeof r&&r.startsWith("#")?parseInt(r.substring(1),16):16739179;if(!a){a=new s;const o=new c(this.cursorTexture);o.tint=l;const n=new i(t,{fontSize:12,fill:16777215,fontWeight:"bold",stroke:l,strokeThickness:2,dropShadow:!0,dropShadowColor:0,dropShadowAlpha:.7,dropShadowDistance:1});n.x=15,n.y=-5,a.addChild(o),a.addChild(n),a.zIndex=1e3,this.remoteCursors.set(e,a),this.viewport.addChild(a)}a.lastUpdate||(a.lastUpdate={x:o,y:n,time:performance.now()});const h=performance.now(),d=h-a.lastUpdate.time;if(d>0&&d<100){const e=Math.min(d/100,1);a.x=a.lastUpdate.x+(o-a.lastUpdate.x)*e,a.y=a.lastUpdate.y+(n-a.lastUpdate.y)*e}else a.x=o,a.y=n;a.lastUpdate={x:o,y:n,time:h}}removeRemoteCursor(e){const t=this.remoteCursors.get(e);t&&(this.viewport.removeChild(t),t.destroy(),this.remoteCursors.delete(e))}clearAllRemoteCursors(){console.log(`Clearing all remote cursors (${this.remoteCursors.size} cursors)`),this.remoteCursors.forEach((e,t)=>{this.viewport.removeChild(e),e.destroy()}),this.remoteCursors.clear(),console.log("All remote cursors cleared")}startPeriodicCleanup(e=6e4){this.cleanupInterval=setInterval(()=>{this.performCleanup()},e),console.log(`Started periodic cleanup (every ${e/1e3}s)`)}stopPeriodicCleanup(){this.cleanupInterval&&(clearInterval(this.cleanupInterval),this.cleanupInterval=null,console.log("Stopped periodic cleanup"))}performCleanup(){console.log("=== Performing periodic cleanup ===");let e=0,t=0;this.selectionIndicators.forEach((t,s)=>{this.objects.has(s)||(this.viewport.removeChild(t),t.destroy(),this.selectionIndicators.delete(s),e++)}),this.selectedObjects.forEach(e=>{this.objects.has(e)||this.selectedObjects.delete(e)});const s=performance.now()-3e5;this.remoteCursors.forEach((e,o)=>{e.lastUpdate&&e.lastUpdate.time<s&&(this.removeRemoteCursor(o),t++)}),e>0||t>0?console.log(`Cleanup complete: ${e} indicators, ${t} cursors removed`):console.log("Cleanup complete: No orphaned objects found")}generateId(){return"obj-"+Math.random().toString(36).substr(2,9)}setColor(e){this.currentColor=e}getCanvasState(){const e=[];return this.objects.forEach((t,s)=>{e.push({id:s,type:t.constructor.name,x:t.x,y:t.y})}),{objects:e}}destroy(){this.performanceMonitor&&this.performanceMonitor.destroy(),this.cursorTexture&&this.cursorTexture.destroy(),this.objects.forEach(e=>{e&&"function"==typeof e.destroy&&e.destroy()}),this.objects.clear(),this.selectionIndicators.forEach(e=>{e&&"function"==typeof e.destroy&&e.destroy()}),this.selectionIndicators.clear(),this.remoteCursors.forEach(e=>{e&&"function"==typeof e.destroy&&e.destroy()}),this.remoteCursors.clear()}onObjectCreated=null;onObjectMoved=null;onObjectDeleted=null;onCursorMoved=null}class d{constructor(e={}){this.maxHistorySize=e.maxHistorySize||1e3,this.warningThreshold=e.warningThreshold||100,this.pendingMessages=new Map,this.latencyHistory=[],this.stats={totalMessages:0,averageLatency:0,minLatency:1/0,maxLatency:0,warningCount:0}}startTracking(e,t){this.pendingMessages.set(e,{sentTime:performance.now(),type:t})}endTracking(e){const t=this.pendingMessages.get(e);if(!t)return null;const s=performance.now()-t.sentTime;return this.pendingMessages.delete(e),this.recordLatency(s,t.type),s>this.warningThreshold&&(console.warn(`⚠️ High latency detected: ${Math.round(s)}ms for ${t.type} message`),this.stats.warningCount++),s}recordLatency(e,t){this.latencyHistory.push({latency:e,type:t,timestamp:Date.now()}),this.latencyHistory.length>this.maxHistorySize&&this.latencyHistory.shift(),this.stats.totalMessages++,this.stats.minLatency=Math.min(this.stats.minLatency,e),this.stats.maxLatency=Math.max(this.stats.maxLatency,e);const s=this.latencyHistory.reduce((e,t)=>e+t.latency,0);this.stats.averageLatency=s/this.latencyHistory.length}getPercentile(e){if(0===this.latencyHistory.length)return 0;const t=this.latencyHistory.map(e=>e.latency).sort((e,t)=>e-t),s=Math.ceil(e/100*t.length)-1;return t[Math.max(0,s)]}getStats(){return{totalMessages:this.stats.totalMessages,averageLatency:Math.round(100*this.stats.averageLatency)/100,minLatency:this.stats.minLatency===1/0?0:Math.round(100*this.stats.minLatency)/100,maxLatency:Math.round(100*this.stats.maxLatency)/100,p50:Math.round(100*this.getPercentile(50))/100,p95:Math.round(100*this.getPercentile(95))/100,p99:Math.round(100*this.getPercentile(99))/100,warningCount:this.stats.warningCount,historySize:this.latencyHistory.length,pendingMessages:this.pendingMessages.size}}getStatsByType(e){const t=this.latencyHistory.filter(t=>t.type===e);if(0===t.length)return null;const s=t.map(e=>e.latency).sort((e,t)=>e-t),o=s.reduce((e,t)=>e+t,0),n=e=>{const t=Math.ceil(e/100*s.length)-1;return s[Math.max(0,t)]};return{messageType:e,count:t.length,averageLatency:Math.round(o/t.length*100)/100,minLatency:Math.round(100*s[0])/100,maxLatency:Math.round(100*s[s.length-1])/100,p50:Math.round(100*n(50))/100,p95:Math.round(100*n(95))/100,p99:Math.round(100*n(99))/100}}logStats(){const e=this.getStats();console.log("=== Latency Statistics ==="),console.log(`Total messages: ${e.totalMessages}`),console.log(`Average latency: ${e.averageLatency}ms`),console.log(`Min latency: ${e.minLatency}ms`),console.log(`Max latency: ${e.maxLatency}ms`),console.log(`P50 (median): ${e.p50}ms`),console.log(`P95: ${e.p95}ms`),console.log(`P99: ${e.p99}ms`),console.log(`High latency warnings: ${e.warningCount}`),console.log(`History size: ${e.historySize}`),console.log(`Pending messages: ${e.pendingMessages}`)}reset(){this.pendingMessages.clear(),this.latencyHistory=[],this.stats={totalMessages:0,averageLatency:0,minLatency:1/0,maxLatency:0,warningCount:0}}}class u{constructor(e,t=50){this.sendCallback=e,this.intervalMs=t,this.pendingCursor=null,this.intervalId=null,this.start()}start(){this.intervalId=setInterval(()=>{this.pendingCursor&&(this.sendCallback(this.pendingCursor.x,this.pendingCursor.y),this.pendingCursor=null)},this.intervalMs)}update(e,t){this.pendingCursor={x:e,y:t}}stop(){this.intervalId&&(clearInterval(this.intervalId),this.intervalId=null)}}class p{constructor(e,t,s){this.url=e,this.sessionId=t,this.canvasId=s,this.ws=null,this.isConnected=!1,this.reconnectAttempts=0,this.maxReconnectAttempts=5,this.reconnectDelay=1e3,this.messageIdCounter=0,this.latencyMonitor=new d({maxHistorySize:1e3,warningThreshold:100}),this.bandwidthStats={totalBytesReceived:0,objectUpdateMessages:0,startTime:Date.now()},this.cursorThrottle=new u((e,t)=>{this.send({type:"cursor",x:e,y:t})}),this.onAuthSuccess=()=>{},this.onAuthFailed=()=>{},this.onUserConnected=()=>{},this.onUserDisconnected=()=>{},this.onPresenceUpdate=()=>{},this.onCursorUpdate=()=>{},this.onObjectCreated=()=>{},this.onObjectUpdated=()=>{},this.onObjectDeleted=()=>{},this.onObjectsDeleted=()=>{},this.onError=()=>{},this.onReconnecting=()=>{},this.onReconnected=()=>{}}connect(){console.log(`Connecting to WebSocket: ${this.url}`);try{this.ws=new WebSocket(this.url),this.setupEventHandlers()}catch(e){console.error("WebSocket connection error:",e),this.onError(e),this.scheduleReconnect()}}setupEventHandlers(){this.ws.onopen=()=>{console.log("WebSocket connected"),this.isConnected=!0,this.reconnectAttempts=0,this.send({type:"auth",sessionId:this.sessionId,canvasId:this.canvasId}),this.reconnectAttempts>0&&this.onReconnected()},this.ws.onmessage=e=>{try{const t=JSON.parse(e.data);this.handleMessage(t)}catch(t){console.error("Error parsing WebSocket message:",t),this.onError(t)}},this.ws.onclose=e=>{console.log("WebSocket disconnected:",e.code,e.reason),this.isConnected=!1,e.wasClean||this.scheduleReconnect()},this.ws.onerror=e=>{console.error("WebSocket error:",e),this.onError(e)}}handleMessage(e){if(e.messageId){const t=this.latencyMonitor.endTracking(e.messageId);null!==t&&t<100&&console.debug(`Message ${e.type} latency: ${Math.round(t)}ms`)}switch(e.type){case"auth-success":this.onAuthSuccess(e);break;case"auth-failed":this.onAuthFailed(e);break;case"user-connected":this.onUserConnected(e);break;case"user-disconnected":this.onUserDisconnected(e);break;case"presence":this.onPresenceUpdate(e.users);break;case"cursor":this.onCursorUpdate(e);break;case"cursor-batch":e.cursors&&Array.isArray(e.cursors)&&e.cursors.forEach(e=>{this.onCursorUpdate(e)});break;case"object-create":this.onObjectCreated(e);break;case"object-update":const t=JSON.stringify(e).length;this.bandwidthStats.totalBytesReceived+=t,this.bandwidthStats.objectUpdateMessages++,console.log(`Object update received: ${t} bytes (total: ${this.bandwidthStats.totalBytesReceived} bytes, ${this.bandwidthStats.objectUpdateMessages} messages)`),this.onObjectUpdated(e);break;case"object-delete":this.onObjectDeleted(e);break;case"objects-delete":this.onObjectsDeleted(e);break;case"error":console.error("Server error:",e.message),this.onError(new Error(e.message));break;default:console.warn("Unknown message type:",e.type)}}send(e,t=!1){this.ws&&this.ws.readyState===WebSocket.OPEN?(t&&"cursor"!==e.type&&(e.messageId=++this.messageIdCounter,this.latencyMonitor.startTracking(e.messageId,e.type)),this.ws.send(JSON.stringify(e))):console.warn("WebSocket not connected, message not sent:",e)}sendCursorUpdate(e,t){this.cursorThrottle.update(e,t)}sendObjectCreate(e){this.send({type:"object-create",object:e},!0)}sendObjectUpdate(e,t){this.send({type:"object-update","object-id":e,updates:t},!0)}sendObjectDelete(e){this.send({type:"object-delete","object-id":e},!0)}scheduleReconnect(){if(this.reconnectAttempts>=this.maxReconnectAttempts)return console.error("Max reconnection attempts reached"),void this.onError(new Error("Unable to reconnect to server"));this.reconnectAttempts++;const e=this.reconnectDelay*Math.pow(2,this.reconnectAttempts-1);console.log(`Attempting to reconnect in ${e}ms (attempt ${this.reconnectAttempts}/${this.maxReconnectAttempts})`),this.onReconnecting(),setTimeout(()=>{this.connect()},e)}getBandwidthStats(){const e=(Date.now()-this.bandwidthStats.startTime)/6e4;return{totalBytes:this.bandwidthStats.totalBytesReceived,messageCount:this.bandwidthStats.objectUpdateMessages,averageBytesPerMessage:this.bandwidthStats.objectUpdateMessages>0?Math.round(this.bandwidthStats.totalBytesReceived/this.bandwidthStats.objectUpdateMessages):0,bytesPerMinute:e>0?Math.round(this.bandwidthStats.totalBytesReceived/e):0,elapsedMinutes:Math.round(10*e)/10}}getLatencyStats(){return this.latencyMonitor.getStats()}getLatencyStatsByType(e){return this.latencyMonitor.getStatsByType(e)}logLatencyStats(){this.latencyMonitor.logStats()}logBandwidthStats(){const e=this.getBandwidthStats();console.log("Bandwidth Stats (Delta Compression):",{"Total bytes received":`${e.totalBytes} bytes`,"Object update messages":e.messageCount,"Avg bytes per message":`${e.averageBytesPerMessage} bytes`,"Bytes per minute":`${e.bytesPerMinute} bytes/min`,"Elapsed time":`${e.elapsedMinutes} minutes`})}disconnect(){this.bandwidthStats.objectUpdateMessages>0&&(console.log("=== Final Bandwidth Stats (Delta Compression) ==="),this.logBandwidthStats()),this.cursorThrottle&&(this.cursorThrottle.stop(),console.log("Stopped cursor throttle timer")),this.ws&&(this.ws.close(1e3,"User disconnect"),this.ws=null,this.isConnected=!1),console.log("=== Disconnect cleanup complete ===")}sendObjectsDelete(e){this.send({type:"objects-delete","object-ids":e})}sendObjectsDelete(e){this.send({type:"objects-delete","object-ids":e})}}class g{constructor(){this.modal=document.getElementById("auth-modal"),this.loginForm=document.getElementById("login-form"),this.registerForm=document.getElementById("register-form"),this.setupEventListeners()}setupEventListeners(){document.querySelectorAll(".tab-btn").forEach(e=>{e.addEventListener("click",()=>{const t=e.dataset.tab;this.switchTab(t)})}),this.loginForm.addEventListener("submit",async e=>{e.preventDefault(),await this.handleLogin()}),this.registerForm.addEventListener("submit",async e=>{e.preventDefault(),await this.handleRegister()})}switchTab(e){document.querySelectorAll(".tab-btn").forEach(t=>{t.classList.toggle("active",t.dataset.tab===e)}),document.querySelectorAll(".auth-form").forEach(t=>{t.classList.toggle("active",t.id===`${e}-form`)}),document.querySelectorAll(".error-message").forEach(e=>{e.textContent=""})}showModal(){return new Promise(e=>{this.modal.classList.remove("hidden"),this.resolveAuth=e})}hideModal(){this.modal.classList.add("hidden")}async handleLogin(){const e=document.getElementById("login-email").value,t=document.getElementById("login-password").value,s=document.getElementById("login-error");try{const o=await fetch("/api/login",{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:t})}),n=await o.json();n.success&&n.data?(this.hideModal(),this.resolveAuth({sessionId:n.data["session-id"],userId:n.data["user-id"],username:n.data.username})):s.textContent=n.error||"Login failed"}catch(o){console.error("Login error:",o),s.textContent="Connection error. Please try again."}}async handleRegister(){const e=document.getElementById("register-username").value,t=document.getElementById("register-email").value,s=document.getElementById("register-password").value,o=document.getElementById("register-error");try{const n=await fetch("/api/register",{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,email:t,password:s})}),i=await n.json();i.success?await this.loginAfterRegister(t,s):o.textContent=i.error||"Registration failed"}catch(n){console.error("Registration error:",n),o.textContent="Connection error. Please try again."}}async loginAfterRegister(e,t){this.switchTab("login"),document.getElementById("login-email").value=e,document.getElementById("login-password").value=t,await this.handleLogin()}}class y{constructor(){this.canvasManager=null,this.wsClient=null,this.authManager=null,this.sessionId=null,this.userId=null,this.username=null,this.canvasId=this.getCanvasId(),this.activeUsers=[]}getCanvasId(){let e=new URLSearchParams(window.location.search).get("canvas");if(!e){e="default-canvas";const t=new URL(window.location);t.searchParams.set("canvas",e),window.history.replaceState({},"",t)}return e}async init(){if(console.log("Initializing CollabCanvas..."),document.getElementById("canvas-id").textContent=this.canvasId,this.authManager=new g,this.sessionId=localStorage.getItem("sessionId"),this.sessionId&&(await this.validateSession()||(this.sessionId=null,localStorage.removeItem("sessionId"))),!this.sessionId){this.hideLoadingScreen();const e=await this.authManager.showModal();this.sessionId=e.sessionId,this.userId=e.userId,this.username=e.username,localStorage.setItem("sessionId",this.sessionId)}this.hideLoadingScreen(),this.initCanvas(),this.initWebSocket(),this.setupUIHandlers(),console.log("CollabCanvas initialized successfully")}hideLoadingScreen(){const e=document.getElementById("loading-screen");e&&e.classList.add("hidden")}async validateSession(){try{const e=await fetch("/api/session",{credentials:"include",headers:{Authorization:this.sessionId}});if(e.ok){const t=await e.json();if(t.success&&t.data&&t.data.valid)return this.userId=t.data["user-id"],this.username=t.data.username,console.log("Session restored:",this.username),!0}}catch(e){console.error("Session validation failed:",e)}return!1}initCanvas(){const e=document.getElementById("canvas-container"),t=new l({width:window.innerWidth,height:window.innerHeight,backgroundColor:1710618,resizeTo:window});e.appendChild(t.view),this.canvasManager=new h(t),window.getPerformanceStats=()=>this.canvasManager.getPerformanceStats(),window.getLatencyStats=()=>this.wsClient?this.wsClient.getLatencyStats():null,window.logLatencyStats=()=>{this.wsClient?this.wsClient.logLatencyStats():console.warn("WebSocket client not initialized")},window.getLatencyStatsByType=e=>this.wsClient?this.wsClient.getLatencyStatsByType(e):null,this.canvasManager.onCursorMoved=(e,t)=>{this.wsClient&&this.wsClient.isConnected&&this.wsClient.sendCursorUpdate(e,t)},this.canvasManager.onObjectCreated=e=>{this.wsClient&&this.wsClient.isConnected&&this.wsClient.sendObjectCreate(e)},this.canvasManager.onObjectUpdated=(e,t)=>{this.wsClient&&this.wsClient.isConnected&&this.wsClient.sendObjectUpdate(e,t)},this.canvasManager.onObjectDeleted=e=>{this.wsClient&&this.wsClient.isConnected&&this.wsClient.sendObjectDelete(e)},this.canvasManager.onObjectsDeleted=e=>{this.wsClient&&this.wsClient.isConnected&&this.wsClient.sendObjectsDelete(e)},this.canvasManager.onToolChange=e=>{document.getElementById("current-tool").textContent=e.charAt(0).toUpperCase()+e.slice(1)},this.canvasManager.onMouseMove=(e,t)=>{document.getElementById("mouse-position").textContent=`${Math.round(e)}, ${Math.round(t)}`},this.canvasManager.onZoomChange=e=>{document.getElementById("zoom-level").textContent=`${Math.round(100*e)}%`},this.canvasManager.onObjectCountChange=e=>{document.getElementById("object-count").textContent=e},this.canvasManager.startPeriodicCleanup(6e4),console.log("Started periodic memory cleanup (60s interval)")}initWebSocket(){const e=`${"https:"===window.location.protocol?"wss:":"ws:"}//${window.location.host}/ws/${this.canvasId}`;this.wsClient=new p(e,this.sessionId,this.canvasId),this.wsClient.onAuthSuccess=e=>{console.error("=== WebSocket authenticated ==="),console.error("Auth data received:",e);const t=e["canvas-state"]||e.canvasState;console.error("canvasState exists?",!!t),console.error("canvasState type:",typeof t),console.error("canvasState length:",t?t.length:0),t?(console.error("=== CALLING loadState ==="),this.canvasManager.loadState(t),console.error("=== loadState RETURNED ===")):console.error("=== NO CANVAS STATE IN AUTH RESPONSE ===")},this.wsClient.onUserConnected=e=>{this.activeUsers.push({"user-id":e.userId||e["user-id"],username:e.username,color:e.color}),this.updatePresenceList(this.activeUsers),this.showNotification(`${e.username} joined`,"info")},this.wsClient.onUserDisconnected=e=>{const t=e.userId||e["user-id"];this.activeUsers=this.activeUsers.filter(e=>(e["user-id"]||e.userId)!==t),this.updatePresenceList(this.activeUsers),this.canvasManager.removeRemoteCursor(t),this.showNotification(`${e.username} left`,"info")},this.wsClient.onPresenceUpdate=e=>{this.activeUsers=e,this.updatePresenceList(this.activeUsers)},this.wsClient.onCursorUpdate=e=>{this.canvasManager.updateRemoteCursor(e.userId,e.username,e.x,e.y,e.color)},this.wsClient.onObjectCreated=e=>{this.canvasManager.createRemoteObject(e.object)},this.wsClient.onObjectUpdated=e=>{const t=e["object-id"]||e.objectId;this.canvasManager.updateRemoteObject(t,e.delta)},this.wsClient.onObjectDeleted=e=>{const t=e.userId||e["user-id"];this.activeUsers=this.activeUsers.filter(e=>(e["user-id"]||e.userId)!==t),this.updatePresenceList(this.activeUsers),this.canvasManager.removeRemoteCursor(t),this.showNotification(`${e.username} left`,"info")},this.wsClient.onObjectsDeleted=e=>{const t=e["object-ids"]||e.objectIds||[];console.log("Received bulk delete for objects:",t),t.length>0&&(t.forEach(e=>{this.canvasManager.deleteObject(e)}),console.log(`Processed remote bulk deletion of ${t.length} objects`))},this.wsClient.onError=e=>{console.error("WebSocket error:",e),this.showNotification("Connection error","error")},this.wsClient.onReconnecting=()=>{this.showNotification("Reconnecting...","warning")},this.wsClient.onReconnected=()=>{this.showNotification("Reconnected","success")},this.wsClient.connect()}setupUIHandlers(){document.querySelectorAll(".tool-btn").forEach(e=>{e.addEventListener("click",()=>{const t=e.dataset.tool;this.canvasManager.setTool(t),document.querySelectorAll(".tool-btn").forEach(e=>e.classList.remove("active")),e.classList.add("active")})}),document.getElementById("color-picker").addEventListener("change",e=>{this.canvasManager.setColor(e.target.value)}),document.addEventListener("keydown",e=>{if("INPUT"!==e.target.tagName)switch(e.key.toLowerCase()){case"v":this.selectTool("select");break;case"r":this.selectTool("rectangle");break;case"c":this.selectTool("circle");break;case"p":e.ctrlKey&&e.shiftKey&&(e.preventDefault(),this.runPerformanceTest());break;case"delete":case"backspace":e.target.isContentEditable||(e.preventDefault(),this.canvasManager.deleteSelected());break;case"z":(e.ctrlKey||e.metaKey)&&(e.preventDefault(),e.shiftKey?this.canvasManager.redo():this.canvasManager.undo())}});const e=document.getElementById("logout-btn");e&&e.addEventListener("click",async()=>{await this.logout()})}selectTool(e){this.canvasManager.setTool(e),document.querySelectorAll(".tool-btn").forEach(t=>{t.dataset.tool===e?t.classList.add("active"):t.classList.remove("active")})}updatePresenceList(e=[]){const t=document.getElementById("users-container");t.innerHTML="",e.forEach(e=>{const s=document.createElement("div");s.className="user-item";const o=e.username,n=e.color;s.innerHTML=`\n                <span class="user-indicator" style="background-color: ${n}"></span>\n                <span>${o}</span>\n            `,t.appendChild(s)})}showNotification(e,t="info"){console.log(`[${t.toUpperCase()}] ${e}`)}async logout(){try{await fetch("/api/logout",{method:"POST",headers:{"Content-Type":"application/json",Authorization:this.sessionId}})}catch(e){console.error("Logout error:",e)}localStorage.removeItem("sessionId"),this.canvasManager&&this.canvasManager.stopPeriodicCleanup(),this.wsClient&&this.wsClient.disconnect(),window.location.reload()}async runPerformanceTest(){console.log("Performance testing is not available in production build"),console.log("Use development build (npm run dev) for performance testing")}}if("loading"===document.readyState)document.addEventListener("DOMContentLoaded",()=>{const e=new y;e.init(),window.collabCanvas=e});else{const e=new y;e.init(),window.collabCanvas=e}}}});
//# sourceMappingURL=index-legacy-rxhrIV_4.js.map

{"version":3,"file":"index-legacy-BJ1L9zAs.js","sources":["../../src/physics.js","../../src/canvas.js","../../src/websocket.js","../../src/auth.js","../../src/main.js"],"sourcesContent":["/**\n * physics.js - 2D Physics Engine for CollabCanvas Living Canvas\n *\n * JavaScript port of backend/src/physics.lisp for client-side prediction.\n * Implements Verlet integration physics engine with:\n * - Circles as dynamic objects (affected by physics)\n * - Rectangles as static walls/platforms\n * - Mass proportional to radius (area-based)\n * - Global gravity\n * - Boundary constraints (bounce)\n * - Circle-circle and circle-rectangle collision detection\n *\n * CRITICAL: All math must match backend/src/physics.lisp exactly for determinism!\n */\n\n// ============================================================================\n// Physics Constants (MUST match backend/src/physics.lisp)\n// ============================================================================\n\nexport const PHYSICS_TIMESTEP = 0.02;          // Fixed timestep: 50 steps/second\nexport const DEFAULT_GRAVITY = 9.8;            // Default gravity acceleration\nexport const DEFAULT_FRICTION = 0.02;          // Air friction coefficient\nexport const DEFAULT_RESTITUTION = 0.7;        // Bounciness (0=dead, 1=perfectly elastic)\nexport const CANVAS_WIDTH = 4000;              // Physics simulation width\nexport const CANVAS_HEIGHT = 3000;             // Physics simulation height\n\n// ============================================================================\n// Physics Object Class\n// ============================================================================\n\nexport class PhysicsObject {\n  constructor(config) {\n    this.id = config.id;                      // Object ID (string)\n    this.type = config.type;                  // 'circle' or 'rectangle'\n    this.x = config.x;                        // Current X position\n    this.y = config.y;                        // Current Y position\n    this.oldX = config.oldX || config.x;      // Previous X (for Verlet integration)\n    this.oldY = config.oldY || config.y;      // Previous Y\n    this.vx = config.vx || 0.0;               // Velocity X (derived from position delta)\n    this.vy = config.vy || 0.0;               // Velocity Y\n    this.ax = config.ax || 0.0;               // Acceleration X\n    this.ay = config.ay || 0.0;               // Acceleration Y\n    this.radius = config.radius;              // For circles\n    this.width = config.width;                // For rectangles\n    this.height = config.height;              // For rectangles\n    this.mass = config.mass;                  // Mass (derived from size)\n    this.isDynamic = config.isDynamic !== undefined ? config.isDynamic : true;  // T if affected by physics\n    this.restitution = config.restitution || DEFAULT_RESTITUTION;  // Bounciness\n    this.friction = config.friction || DEFAULT_FRICTION;           // Friction coefficient\n    this.color = config.color || '#3498db';   // Color (hex string)\n  }\n}\n\n// ============================================================================\n// Physics Engine State\n// ============================================================================\n\nexport class PhysicsEngine {\n  constructor() {\n    this.objects = new Map();                 // Map of physics objects by ID\n    this.globalGravity = DEFAULT_GRAVITY;     // Current global gravity value\n    this.paused = true;                       // Whether physics simulation is paused\n    this.boundaryMode = 'contain';            // Boundary behavior: 'contain' (bounce) or 'wrap'\n  }\n\n  // ==========================================================================\n  // Object Creation and Management\n  // ==========================================================================\n\n  /**\n   * Create a dynamic circle physics object\n   */\n  createCircle(id, x, y, radius, options = {}) {\n    const isDynamic = options.isDynamic !== undefined ? options.isDynamic : true;\n    const color = options.color || '#3498db';\n    const mass = this.calculateMassFromRadius(radius);\n\n    const obj = new PhysicsObject({\n      id,\n      type: 'circle',\n      x,\n      y,\n      oldX: x,\n      oldY: y,\n      vx: 0.0,\n      vy: 0.0,\n      ax: 0.0,\n      ay: 0.0,\n      radius,\n      mass,\n      isDynamic,\n      restitution: DEFAULT_RESTITUTION,\n      friction: DEFAULT_FRICTION,\n      color\n    });\n\n    this.objects.set(id, obj);\n    return obj;\n  }\n\n  /**\n   * Create a static rectangle (wall/platform)\n   */\n  createRectangle(id, x, y, width, height, options = {}) {\n    const color = options.color || '#95a5a6';\n\n    const obj = new PhysicsObject({\n      id,\n      type: 'rectangle',\n      x,\n      y,\n      oldX: x,\n      oldY: y,\n      vx: 0.0,\n      vy: 0.0,\n      ax: 0.0,\n      ay: 0.0,\n      width,\n      height,\n      mass: 0.0,            // Static objects have infinite mass\n      isDynamic: false,     // Never moves\n      restitution: 0.8,\n      friction: 0.1,\n      color\n    });\n\n    this.objects.set(id, obj);\n    return obj;\n  }\n\n  /**\n   * Remove an object from the physics simulation\n   */\n  removeObject(id) {\n    return this.objects.delete(id);\n  }\n\n  /**\n   * Get a physics object by ID\n   */\n  getObject(id) {\n    return this.objects.get(id);\n  }\n\n  /**\n   * Remove all physics objects\n   */\n  clearAll() {\n    this.objects.clear();\n  }\n\n  // ==========================================================================\n  // Mass Calculation\n  // ==========================================================================\n\n  /**\n   * Calculate mass based on circle area (π * r²)\n   */\n  calculateMassFromRadius(radius) {\n    return Math.PI * radius * radius;\n  }\n\n  // ==========================================================================\n  // Verlet Integration\n  // ==========================================================================\n\n  /**\n   * Update position using Verlet integration\n   * MUST match backend/src/physics.lisp integrate-verlet exactly!\n   */\n  integrateVerlet(obj, dt) {\n    if (!obj.isDynamic) return;\n\n    const dt2 = dt * dt;\n\n    // Calculate velocity from position delta (Verlet)\n    let vx = obj.x - obj.oldX;\n    let vy = obj.y - obj.oldY;\n\n    // Apply friction (air resistance)\n    const frictionFactor = 1.0 - obj.friction;\n    vx *= frictionFactor;\n    vy *= frictionFactor;\n\n    // Calculate new position\n    const newX = obj.x + vx + (obj.ax * dt2);\n    const newY = obj.y + vy + (obj.ay * dt2);\n\n    // Store old position\n    obj.oldX = obj.x;\n    obj.oldY = obj.y;\n\n    // Update position\n    obj.x = newX;\n    obj.y = newY;\n\n    // Store velocity for external use\n    obj.vx = vx / dt;\n    obj.vy = vy / dt;\n\n    // Reset acceleration\n    obj.ax = 0.0;\n    obj.ay = 0.0;\n  }\n\n  // ==========================================================================\n  // Forces\n  // ==========================================================================\n\n  /**\n   * Apply global gravity force to object\n   * MUST match backend/src/physics.lisp apply-gravity exactly!\n   */\n  applyGravity(obj) {\n    if (obj.isDynamic) {\n      obj.ay += this.globalGravity;\n    }\n  }\n\n  /**\n   * Apply a force to an object (F = ma, so a = F/m)\n   */\n  applyForce(obj, fx, fy) {\n    if (obj.isDynamic && obj.mass > 0) {\n      obj.ax += fx / obj.mass;\n      obj.ay += fy / obj.mass;\n    }\n  }\n\n  // ==========================================================================\n  // Boundary Constraints\n  // ==========================================================================\n\n  /**\n   * Apply canvas boundary constraints\n   * MUST match backend/src/physics.lisp apply-boundary-constraints exactly!\n   */\n  applyBoundaryConstraints(obj) {\n    if (!obj.isDynamic) return;\n\n    if (obj.type === 'circle') {\n      const r = obj.radius;\n      const restitution = obj.restitution;\n\n      // Left/Right walls\n      if (obj.x < r) {\n        obj.x = r;\n        // Reverse velocity (bounce)\n        const vx = obj.x - obj.oldX;\n        obj.oldX = obj.x + (vx * restitution);\n      }\n\n      if (obj.x > (CANVAS_WIDTH - r)) {\n        obj.x = CANVAS_WIDTH - r;\n        const vx = obj.x - obj.oldX;\n        obj.oldX = obj.x + (vx * restitution);\n      }\n\n      // Top/Bottom walls\n      if (obj.y < r) {\n        obj.y = r;\n        const vy = obj.y - obj.oldY;\n        obj.oldY = obj.y + (vy * restitution);\n      }\n\n      if (obj.y > (CANVAS_HEIGHT - r)) {\n        obj.y = CANVAS_HEIGHT - r;\n        const vy = obj.y - obj.oldY;\n        obj.oldY = obj.y + (vy * restitution);\n      }\n    }\n  }\n\n  // ==========================================================================\n  // Collision Detection\n  // ==========================================================================\n\n  /**\n   * Check and resolve collision between two circles\n   * MUST match backend/src/physics.lisp check-circle-circle-collision exactly!\n   */\n  checkCircleCircleCollision(c1, c2) {\n    const dx = c2.x - c1.x;\n    const dy = c2.y - c1.y;\n    const distSq = (dx * dx) + (dy * dy);\n    const rSum = c1.radius + c2.radius;\n    const rSumSq = rSum * rSum;\n\n    if (distSq < rSumSq) {\n      // Collision detected\n      const dist = Math.sqrt(distSq);\n      const overlap = rSum - dist;\n      const nx = dx / dist;\n      const ny = dy / dist;\n\n      // Move circles apart proportional to their masses\n      const totalMass = c1.mass + c2.mass;\n      const ratio1 = totalMass > 0 ? c2.mass / totalMass : 0.5;\n      const ratio2 = totalMass > 0 ? c1.mass / totalMass : 0.5;\n\n      // Separate circles\n      if (c1.isDynamic) {\n        c1.x -= overlap * nx * ratio1;\n        c1.y -= overlap * ny * ratio1;\n      }\n\n      if (c2.isDynamic) {\n        c2.x += overlap * nx * ratio2;\n        c2.y += overlap * ny * ratio2;\n      }\n\n      // Apply elastic collision response (simplified)\n      const restitution = Math.min(c1.restitution, c2.restitution);\n\n      if (c1.isDynamic && c2.isDynamic) {\n        // Exchange velocities along collision normal\n        const v1x = c1.x - c1.oldX;\n        const v1y = c1.y - c1.oldY;\n        const v2x = c2.x - c2.oldX;\n        const v2y = c2.y - c2.oldY;\n\n        // Relative velocity along normal\n        const dvn = ((v1x - v2x) * nx) + ((v1y - v2y) * ny);\n\n        if (dvn < 0) { // Objects moving towards each other\n          // Impulse magnitude\n          const impulse = (1.0 - restitution) * dvn;\n\n          // Apply impulse\n          c1.oldX -= impulse * nx * ratio1;\n          c1.oldY -= impulse * ny * ratio1;\n          c2.oldX += impulse * nx * ratio2;\n          c2.oldY += impulse * ny * ratio2;\n        }\n      }\n\n      return true; // Collision occurred\n    }\n\n    return false;\n  }\n\n  /**\n   * Check and resolve collision between circle and axis-aligned rectangle\n   * MUST match backend/src/physics.lisp check-circle-rectangle-collision exactly!\n   */\n  checkCircleRectangleCollision(circle, rect) {\n    const cx = circle.x;\n    const cy = circle.y;\n    const r = circle.radius;\n    const rx = rect.x;\n    const ry = rect.y;\n    const rw = rect.width;\n    const rh = rect.height;\n\n    // Find closest point on rectangle to circle center\n    const closestX = Math.max(rx, Math.min(cx, rx + rw));\n    const closestY = Math.max(ry, Math.min(cy, ry + rh));\n\n    // Distance from circle center to closest point\n    const dx = cx - closestX;\n    const dy = cy - closestY;\n    const distSq = (dx * dx) + (dy * dy);\n\n    if (distSq < (r * r)) {\n      // Collision detected\n      const dist = Math.sqrt(distSq);\n      const overlap = r - dist;\n      const nx = dist > 0 ? dx / dist : 0;\n      const ny = dist > 0 ? dy / dist : -1; // Default to pushing up\n      const restitution = circle.restitution;\n\n      // Push circle out of rectangle\n      if (circle.isDynamic) {\n        circle.x += overlap * nx;\n        circle.y += overlap * ny;\n\n        // Bounce (reflect velocity)\n        const vx = circle.x - circle.oldX;\n        const vy = circle.y - circle.oldY;\n        const dot = 2 * ((vx * nx) + (vy * ny));\n\n        circle.oldX = circle.x - ((vx - (dot * nx)) * restitution);\n        circle.oldY = circle.y - ((vy - (dot * ny)) * restitution);\n      }\n\n      return true; // Collision occurred\n    }\n\n    return false;\n  }\n\n  /**\n   * Resolve all collisions between physics objects\n   */\n  resolveAllCollisions() {\n    const objects = Array.from(this.objects.values());\n    let collisionCount = 0;\n\n    // Circle-circle collisions\n    for (let i = 0; i < objects.length; i++) {\n      for (let j = i + 1; j < objects.length; j++) {\n        const obj1 = objects[i];\n        const obj2 = objects[j];\n\n        if (obj1.type === 'circle' && obj2.type === 'circle' &&\n            (obj1.isDynamic || obj2.isDynamic)) {\n          if (this.checkCircleCircleCollision(obj1, obj2)) {\n            collisionCount++;\n          }\n        }\n      }\n    }\n\n    // Circle-rectangle collisions\n    for (const obj of objects) {\n      if (obj.type === 'circle' && obj.isDynamic) {\n        for (const other of objects) {\n          if (other.type === 'rectangle') {\n            if (this.checkCircleRectangleCollision(obj, other)) {\n              collisionCount++;\n            }\n          }\n        }\n      }\n    }\n\n    return collisionCount;\n  }\n\n  // ==========================================================================\n  // Main Simulation Step\n  // ==========================================================================\n\n  /**\n   * Execute one physics simulation step\n   * MUST match backend/src/physics.lisp physics-step exactly!\n   */\n  step() {\n    if (this.paused) return;\n\n    const dt = PHYSICS_TIMESTEP;\n\n    // 1. Apply forces\n    for (const obj of this.objects.values()) {\n      this.applyGravity(obj);\n    }\n\n    // 2. Integrate (update positions)\n    for (const obj of this.objects.values()) {\n      this.integrateVerlet(obj, dt);\n    }\n\n    // 3. Apply constraints\n    for (const obj of this.objects.values()) {\n      this.applyBoundaryConstraints(obj);\n    }\n\n    // 4. Resolve collisions (multiple iterations for stability)\n    for (let i = 0; i < 3; i++) {\n      this.resolveAllCollisions();\n    }\n  }\n\n  // ==========================================================================\n  // Utility Functions\n  // ==========================================================================\n\n  /**\n   * Get a snapshot of all dynamic object positions for broadcasting\n   */\n  getStateSnapshot() {\n    const snapshot = [];\n\n    for (const obj of this.objects.values()) {\n      if (obj.isDynamic) {\n        snapshot.push({\n          id: obj.id,\n          x: obj.x,\n          y: obj.y,\n          rotation: 0.0  // For future use\n        });\n      }\n    }\n\n    return snapshot;\n  }\n\n  /**\n   * Set the global gravity value\n   */\n  setGlobalGravity(gravity) {\n    this.globalGravity = gravity;\n  }\n\n  /**\n   * Pause the physics simulation\n   */\n  pause() {\n    this.paused = true;\n  }\n\n  /**\n   * Resume the physics simulation\n   */\n  resume() {\n    this.paused = false;\n  }\n\n  /**\n   * Reset all physics objects to their initial state\n   */\n  reset() {\n    this.pause();\n    this.clearAll();\n  }\n\n  /**\n   * Check if physics is paused\n   */\n  isPaused() {\n    return this.paused;\n  }\n\n  // ==========================================================================\n  // Sync with Canvas State\n  // ==========================================================================\n\n  /**\n   * Sync a canvas object to the physics engine\n   */\n  syncCanvasObject(objData) {\n    const id = objData.id;\n    const type = objData.type;\n    const x = objData.x;\n    const y = objData.y;\n    const color = objData.color;\n    const isDynamic = objData.isDynamic;\n\n    if (type === 'circle') {\n      const radius = objData.radius;\n      if (!this.getObject(id)) {\n        this.createCircle(id, x, y, radius, {\n          isDynamic: isDynamic !== undefined ? isDynamic : true,\n          color: color || '#3498db'\n        });\n      }\n    } else if (type === 'rectangle') {\n      const width = objData.width;\n      const height = objData.height;\n      if (!this.getObject(id)) {\n        this.createRectangle(id, x, y, width, height, {\n          color: color || '#95a5a6'\n        });\n      }\n    }\n  }\n\n  /**\n   * Manually update a physics object's position (e.g., user drag)\n   */\n  updateObjectPosition(id, x, y) {\n    const obj = this.getObject(id);\n    if (obj) {\n      obj.x = x;\n      obj.y = y;\n      obj.oldX = x;\n      obj.oldY = y;\n      obj.vx = 0.0;\n      obj.vy = 0.0;\n    }\n  }\n}\n\n// ============================================================================\n// Export singleton instance (optional - can also create new instances)\n// ============================================================================\n\nexport const physicsEngine = new PhysicsEngine();\n","// src/canvas.js\n// Complete PixiJS Canvas Manager for CollabCanvas\nimport * as PIXI from 'pixi.js';\nimport { PhysicsEngine, PHYSICS_TIMESTEP } from './physics.js';\n\n// Note: CullerPlugin may not be available in all PixiJS v8 builds\n// We have custom viewport culling as a fallback\ntry {\n  // Attempt to import and register CullerPlugin if available\n  if (PIXI.extensions && PIXI.CullerPlugin) {\n    PIXI.extensions.add(PIXI.CullerPlugin);\n    console.log('CullerPlugin registered successfully');\n  }\n} catch (e) {\n  console.log('CullerPlugin not available, using custom culling implementation');\n}\n\nexport class PerformanceMonitor {\n  constructor(app, canvasManager) {\n    this.app = app;\n    this.canvasManager = canvasManager;\n    this.fpsHistory = [];\n    this.maxHistorySize = 60;\n    this.currentFps = 60;\n    this.lastTime = performance.now();\n    this.frameCount = 0;\n\n    // Bind ticker update\n    this.app.ticker.add(this.update.bind(this));\n\n    console.log('PerformanceMonitor initialized');\n  }\n\n  update(deltaTime) {\n    // Calculate FPS based on delta time (in seconds)\n    const now = performance.now();\n    const deltaMs = now - this.lastTime;\n\n    if (deltaMs > 0) {\n      this.currentFps = Math.round(1000 / deltaMs);\n    }\n\n    this.lastTime = now;\n\n    // Add to history\n    this.fpsHistory.push(this.currentFps);\n    if (this.fpsHistory.length > this.maxHistorySize) {\n      this.fpsHistory.shift(); // Remove oldest entry\n    }\n\n    // Check for low FPS and log warnings\n    if (this.currentFps < 55) {\n      const avgFps = this.getAverageFps();\n      const objectCount = this.canvasManager ? this.canvasManager.objects.size : 0;\n      console.warn(`⚠️ Low FPS detected: ${this.currentFps} FPS (avg: ${avgFps.toFixed(1)}, objects: ${objectCount})`);\n    }\n  }\n\n  getAverageFps() {\n    if (this.fpsHistory.length === 0) return 60;\n    const sum = this.fpsHistory.reduce((a, b) => a + b, 0);\n    return sum / this.fpsHistory.length;\n  }\n\n  getStats() {\n    if (this.fpsHistory.length === 0) {\n      return {\n        current: this.currentFps,\n        average: 60,\n        min: 60,\n        max: 60\n      };\n    }\n\n    return {\n      current: this.currentFps,\n      average: Math.round(this.getAverageFps() * 10) / 10,\n      min: Math.min(...this.fpsHistory),\n      max: Math.max(...this.fpsHistory)\n    };\n  }\n\n  destroy() {\n    if (this.app && this.app.ticker) {\n      this.app.ticker.remove(this.update.bind(this));\n    }\n  }\n}\n\nexport class CanvasManager {\n  constructor(app) {\n    this.app = app;\n    this.viewport = new PIXI.Container();\n    this.objects = new Map(); // objectId -> PIXI Graphics\n    this.selectedObjects = new Set();\n    this.selectionIndicators = new Map(); // objectId -> selection box Graphics\n    this.remoteCursors = new Map(); // userId -> cursor container\n\n    // State\n    this.isPanning = false;\n    this.panStart = { x: 0, y: 0 };\n    this.currentTool = 'select'; // 'select', 'rectangle', 'circle', 'text'\n    this.currentColor = 0x3498db; // Default blue\n\n    // Drag state (centralized for performance)\n    this.isDragging = false;\n    this.draggedObject = null;\n    this.draggedObjectId = null;\n    this.dragOffset = { x: 0, y: 0 };\n    this.lastDragUpdate = 0;\n\n    // Viewport culling\n    this.cullingEnabled = true;\n    this.cullingPadding = 200; // Extra padding around viewport for smooth scrolling\n    this.lastViewportBounds = null;\n\n    // Performance monitoring\n    this.performanceMonitor = new PerformanceMonitor(app, this);\n\n    // Shared cursor texture for performance optimization\n    this.cursorTexture = this.createSharedCursorTexture();\n\n    // Physics Engine for client-side prediction\n    this.physicsEngine = new PhysicsEngine();\n    this.physicsEngine.pause(); // Start paused, will resume when needed\n\n    // Physics prediction and reconciliation state\n    this.physicsEnabled = false; // Physics is opt-in per canvas\n    this.lastPhysicsUpdate = 0;\n    this.physicsAccumulator = 0; // For fixed timestep\n    this.reconciliationLerpFactor = 0.3; // Gentle interpolation for server corrections\n\n    // Server snapshot tracking\n    this.lastServerSnapshot = null;\n    this.serverSnapshotTime = 0;\n\n    // Viewport setup\n    this.app.stage.addChild(this.viewport);\n    this.viewport.sortableChildren = true;\n\n    // Enable culling on viewport for PixiJS built-in CullerPlugin (if available)\n    // Falls back to our custom culling implementation in setupViewportCulling()\n    this.viewport.cullable = true;\n\n    // Grid background (optional visual aid)\n    this.drawGrid();\n\n    // Setup interaction\n    this.setupPanZoom();\n    this.setupCentralizedDrag(); // NEW: Centralized drag handler\n    this.setupKeyboardShortcuts();\n    this.setupToolHandlers();\n    this.setupViewportCulling();\n\n    console.log('Canvas initialized');\n  }\n\n  createSharedCursorTexture() {\n    // Create cursor shape using Graphics\n    const graphics = new PIXI.Graphics();\n\n    // Draw cursor pointer (triangle) using v8 builder pattern\n    graphics.poly([\n      { x: 0, y: 0 },\n      { x: 12, y: 18 },\n      { x: 6, y: 18 },\n      { x: 0, y: 24 }\n    ]).fill(0xFFFFFF); // White fill (will be tinted)\n\n    // Render to texture\n    const texture = this.app.renderer.generateTexture(graphics, {\n      resolution: 1,\n      scaleMode: PIXI.SCALE_MODES.LINEAR\n    });\n\n    // Clean up graphics object\n    graphics.destroy();\n\n    return texture;\n  }\n\n  // ==================== Grid ====================\n  \n  drawGrid() {\n    const grid = new PIXI.Graphics();\n    \n    // Enable smooth rendering for grid\n    grid.roundPixels = false;\n\n    const gridSize = 50;\n    const gridExtent = 5000;\n\n    // PixiJS v8 builder pattern for lines\n    // Vertical lines\n    for (let x = -gridExtent; x <= gridExtent; x += gridSize) {\n      grid.moveTo(x, -gridExtent);\n      grid.lineTo(x, gridExtent);\n    }\n\n    // Horizontal lines\n    for (let y = -gridExtent; y <= gridExtent; y += gridSize) {\n      grid.moveTo(-gridExtent, y);\n      grid.lineTo(gridExtent, y);\n    }\n    \n    // Apply stroke at the end with v8 API\n    grid.stroke({ width: 1, color: 0x333333, alpha: 0.3 });\n\n    grid.zIndex = -1;\n    // Grid is non-interactive - optimize event traversal\n    grid.interactive = false;\n    grid.interactiveChildren = false;\n    this.viewport.addChild(grid);\n  }\n  \n  // ==================== Pan & Zoom ====================\n  \n  setupPanZoom() {\n    const canvas = this.app.canvas;\n    \n    // Pan with middle mouse or Alt+drag\n    canvas.addEventListener('mousedown', (e) => {\n      if (e.button === 1 || (e.button === 0 && e.altKey)) {\n        this.isPanning = true;\n        this.panStart = { x: e.clientX, y: e.clientY };\n        canvas.style.cursor = 'grabbing';\n        e.preventDefault();\n      }\n    });\n    \n    canvas.addEventListener('mousemove', (e) => {\n      if (this.isPanning) {\n        const dx = e.clientX - this.panStart.x;\n        const dy = e.clientY - this.panStart.y;\n        \n        this.viewport.x += dx;\n        this.viewport.y += dy;\n        \n        this.panStart = { x: e.clientX, y: e.clientY };\n      }\n    });\n    \n    canvas.addEventListener('mouseup', () => {\n      if (this.isPanning) {\n        this.isPanning = false;\n        canvas.style.cursor = 'default';\n      }\n    });\n    \n    // Zoom with mouse wheel\n    canvas.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      \n      const zoomFactor = e.deltaY > 0 ? 0.9 : 1.1;\n      const mouseX = e.clientX;\n      const mouseY = e.clientY;\n      \n      // Get position before zoom\n      const worldPosBefore = this.screenToWorld(mouseX, mouseY);\n      \n      // Apply zoom\n      const newScale = this.viewport.scale.x * zoomFactor;\n      if (newScale >= 0.1 && newScale <= 10) {\n        this.viewport.scale.set(newScale);\n        \n        // Adjust position to keep mouse over same world point\n        const worldPosAfter = this.screenToWorld(mouseX, mouseY);\n        this.viewport.x += (worldPosAfter.x - worldPosBefore.x) * this.viewport.scale.x;\n        this.viewport.y += (worldPosAfter.y - worldPosBefore.y) * this.viewport.scale.y;\n      }\n    }, { passive: false });\n  }\n\n  // ==================== Centralized Drag (Performance Optimized) ====================\n\n  setupCentralizedDrag() {\n    const canvas = this.app.canvas;\n\n    // Global mousemove handler (only one for all objects)\n    canvas.addEventListener('mousemove', (e) => {\n      if (this.isDragging && this.draggedObject) {\n        const worldPos = this.screenToWorld(e.clientX, e.clientY);\n\n        // Update position immediately\n        this.draggedObject.x = worldPos.x - this.dragOffset.x;\n        this.draggedObject.y = worldPos.y - this.dragOffset.y;\n\n        // Throttle network updates\n        const now = performance.now();\n        if (now - this.lastDragUpdate >= 16) { // 60 FPS\n          if (this.onObjectUpdated) {\n            this.onObjectUpdated(this.draggedObjectId, {\n              x: this.draggedObject.x,\n              y: this.draggedObject.y\n            });\n          }\n          this.lastDragUpdate = now;\n        }\n      }\n    });\n\n    // Global mouseup handler\n    canvas.addEventListener('mouseup', () => {\n      if (this.isDragging && this.draggedObject) {\n        this.draggedObject.alpha = 1;\n\n        // Send final position\n        if (this.onObjectUpdated) {\n          this.onObjectUpdated(this.draggedObjectId, {\n            x: this.draggedObject.x,\n            y: this.draggedObject.y\n          });\n        }\n\n        // Reset drag state\n        this.isDragging = false;\n        this.draggedObject = null;\n        this.draggedObjectId = null;\n      }\n    });\n  }\n\n  screenToWorld(screenX, screenY) {\n    return {\n      x: (screenX - this.viewport.x) / this.viewport.scale.x,\n      y: (screenY - this.viewport.y) / this.viewport.scale.y\n    };\n  }\n  \n  worldToScreen(worldX, worldY) {\n    return {\n      x: worldX * this.viewport.scale.x + this.viewport.x,\n      y: worldY * this.viewport.scale.y + this.viewport.y\n    };\n  }\n  \n  // ==================== Keyboard Shortcuts ====================\n  \n  setupKeyboardShortcuts() {\n    document.addEventListener('keydown', (e) => {\n      // Tool shortcuts\n      if (e.key === 'r' || e.key === 'R') {\n        this.setTool('rectangle');\n      } else if (e.key === 'c' || e.key === 'C') {\n        this.setTool('circle');\n      } else if (e.key === 'e' || e.key === 'E') {\n        this.setTool('emitter');\n      } else if (e.key === 't' || e.key === 'T') {\n        this.setTool('text');\n      } else if (e.key === 'v' || e.key === 'V' || e.key === 'Escape') {\n        this.setTool('select');\n      } else if (e.key === 'Delete' || e.key === 'Backspace') {\n        this.deleteSelected();\n      }\n    });\n  }\n  \n  setTool(tool) {\n    this.currentTool = tool;\n    console.log('Tool:', tool);\n    // Update UI indicator if you have one\n  }\n  \n  // ==================== Tool Handlers ====================\n  \n  setupToolHandlers() {\n    const canvas = this.app.canvas;\n    let drawStart = null;\n    let previewShape = null;\n    let lastPreviewUpdate = 0;\n    let previewUpdatePending = false;\n\n    // Track cursor movement\n    canvas.addEventListener('mousemove', (e) => {\n      const worldPos = this.screenToWorld(e.clientX, e.clientY);\n\n      // Notify about cursor movement\n      if (this.onCursorMoved) {\n        this.onCursorMoved(worldPos.x, worldPos.y);\n      }\n\n      // Handle preview shape drawing with RAF throttling\n      if (drawStart && previewShape && !previewUpdatePending) {\n        previewUpdatePending = true;\n        requestAnimationFrame(() => {\n          const now = performance.now();\n          // Throttle preview updates to 60 FPS\n          if (now - lastPreviewUpdate >= 16) {\n            const currentWorldPos = this.screenToWorld(e.clientX, e.clientY);\n            const width = currentWorldPos.x - drawStart.x;\n            const height = currentWorldPos.y - drawStart.y;\n\n            previewShape.clear();\n\n            // PixiJS v8 builder pattern\n            if (this.currentTool === 'rectangle') {\n              previewShape.rect(drawStart.x, drawStart.y, width, height).fill(this.currentColor);\n            } else if (this.currentTool === 'circle') {\n              const radius = Math.sqrt(width * width + height * height);\n              previewShape.circle(drawStart.x, drawStart.y, radius).fill(this.currentColor);\n            }\n            lastPreviewUpdate = now;\n          }\n          previewUpdatePending = false;\n        });\n      }\n    });\n\n    canvas.addEventListener('mousedown', (e) => {\n      if (e.button !== 0 || e.altKey) return; // Left click only, not panning\n\n      const worldPos = this.screenToWorld(e.clientX, e.clientY);\n\n      if (this.currentTool === 'rectangle' || this.currentTool === 'circle') {\n        drawStart = worldPos;\n\n        // Create preview shape with smooth rendering\n        previewShape = new PIXI.Graphics();\n        previewShape.alpha = 0.5;\n        previewShape.roundPixels = false;\n        this.viewport.addChild(previewShape);\n      } else if (this.currentTool === 'emitter') {\n        // Emitters are created immediately on click (no drag needed)\n        const objData = this.createToolObject(worldPos, worldPos);\n\n        // Notify about new object (callback to WebSocket)\n        if (this.onObjectCreated) {\n          this.onObjectCreated(objData);\n        }\n      }\n    });\n\n    canvas.addEventListener('mouseup', (e) => {\n      if (drawStart && previewShape) {\n        const worldPos = this.screenToWorld(e.clientX, e.clientY);\n        \n        // Create actual object\n        const objData = this.createToolObject(drawStart, worldPos);\n        \n        // Clean up preview\n        this.viewport.removeChild(previewShape);\n        previewShape = null;\n        drawStart = null;\n        \n        // Notify about new object (callback to WebSocket)\n        if (this.onObjectCreated) {\n          this.onObjectCreated(objData);\n        }\n      }\n    });\n  }\n\n  // ==================== Viewport Culling ====================\n\n  setupViewportCulling() {\n    // Listen for viewport changes (pan and zoom)\n    this.app.ticker.add(() => {\n      if (this.cullingEnabled) {\n        this.updateVisibleObjects();\n      }\n    });\n\n    // Setup physics prediction loop (runs at 60 FPS with fixed timestep)\n    this.app.ticker.add((deltaTime) => {\n      if (this.physicsEnabled && !this.physicsEngine.isPaused()) {\n        this.updatePhysicsPrediction(deltaTime);\n      }\n    });\n  }\n\n  updateVisibleObjects() {\n    // Calculate current viewport bounds in world coordinates\n    const viewportBounds = this.getViewportBounds();\n\n    // Check if viewport has changed significantly\n    if (!this.lastViewportBounds ||\n        Math.abs(viewportBounds.left - this.lastViewportBounds.left) > 50 ||\n        Math.abs(viewportBounds.top - this.lastViewportBounds.top) > 50 ||\n        Math.abs(viewportBounds.right - this.lastViewportBounds.right) > 50 ||\n        Math.abs(viewportBounds.bottom - this.lastViewportBounds.bottom) > 50) {\n\n      this.lastViewportBounds = viewportBounds;\n\n      // Update visibility for all objects\n      this.objects.forEach((obj, id) => {\n        const objBounds = this.getObjectBounds(obj);\n        const isVisible = this.isBoundsVisible(objBounds, viewportBounds);\n\n        // Only change visibility if it actually changed to avoid unnecessary operations\n        if (obj.visible !== isVisible) {\n          obj.visible = isVisible;\n        }\n      });\n    }\n  }\n\n  getViewportBounds() {\n    // Get screen dimensions\n    const screenWidth = this.app.renderer.width;\n    const screenHeight = this.app.renderer.height;\n\n    // Convert screen corners to world coordinates\n    const topLeft = this.screenToWorld(0, 0);\n    const bottomRight = this.screenToWorld(screenWidth, screenHeight);\n\n    return {\n      left: topLeft.x - this.cullingPadding,\n      top: topLeft.y - this.cullingPadding,\n      right: bottomRight.x + this.cullingPadding,\n      bottom: bottomRight.y + this.cullingPadding\n    };\n  }\n\n  getObjectBounds(obj) {\n    // Calculate object bounds based on type\n    if (obj.userData) {\n      if (obj.userData.type === 'rectangle') {\n        return {\n          left: obj.x,\n          top: obj.y,\n          right: obj.x + obj.userData.width,\n          bottom: obj.y + obj.userData.height\n        };\n      } else if (obj.userData.type === 'circle') {\n        const radius = obj.userData.radius;\n        return {\n          left: obj.x - radius,\n          top: obj.y - radius,\n          right: obj.x + radius,\n          bottom: obj.y + radius\n        };\n      }\n    }\n\n    // Fallback for objects without userData (like text)\n    if (obj.width && obj.height) {\n      return {\n        left: obj.x,\n        top: obj.y,\n        right: obj.x + obj.width,\n        bottom: obj.y + obj.height\n      };\n    }\n\n    // Last resort - treat as point\n    return {\n      left: obj.x,\n      top: obj.y,\n      right: obj.x,\n      bottom: obj.y\n    };\n  }\n\n  isBoundsVisible(objBounds, viewportBounds) {\n    // Check if object bounds intersect with viewport bounds\n    return !(objBounds.right < viewportBounds.left ||\n             objBounds.left > viewportBounds.right ||\n             objBounds.bottom < viewportBounds.top ||\n             objBounds.top > viewportBounds.bottom);\n  }\n\n  // ==================== Physics Prediction and Reconciliation ====================\n\n  /**\n   * Update physics prediction at 60 FPS using fixed timestep\n   * Subtask 5.1: Integrate prediction in animation loop\n   */\n  updatePhysicsPrediction(deltaTime) {\n    // deltaTime is in PIXI frames (60 FPS ≈ 1.0), convert to seconds\n    const deltaSeconds = deltaTime / 60.0;\n    this.physicsAccumulator += deltaSeconds;\n\n    // Run physics at fixed timestep (50 Hz = 0.02s)\n    while (this.physicsAccumulator >= PHYSICS_TIMESTEP) {\n      this.physicsEngine.step();\n      this.physicsAccumulator -= PHYSICS_TIMESTEP;\n    }\n\n    // Sync visual positions from physics engine\n    this.syncVisualFromPhysics();\n  }\n\n  /**\n   * Sync PIXI visual objects from physics engine state\n   */\n  syncVisualFromPhysics() {\n    for (const [id, physicsObj] of this.physicsEngine.objects) {\n      const pixiObj = this.objects.get(id);\n      if (pixiObj && physicsObj.isDynamic) {\n        // Only update dynamic objects (circles)\n        pixiObj.x = physicsObj.x;\n        pixiObj.y = physicsObj.y;\n      }\n    }\n  }\n\n  /**\n   * Handle physics snapshot from server and reconcile\n   * Subtasks 5.2 and 5.3: Snapshot reception + reconciliation logic\n   */\n  handlePhysicsSnapshot(snapshot) {\n    if (!this.physicsEnabled) return;\n\n    this.lastServerSnapshot = snapshot;\n    this.serverSnapshotTime = performance.now();\n\n    // Reconcile each object in the snapshot\n    snapshot.forEach(serverState => {\n      const id = serverState.id;\n      const physicsObj = this.physicsEngine.getObject(id);\n      const pixiObj = this.objects.get(id);\n\n      if (!physicsObj || !pixiObj) {\n        // Object doesn't exist locally - create it\n        if (pixiObj) {\n          // Sync to physics engine\n          this.syncObjectToPhysics(id);\n        }\n        return;\n      }\n\n      if (!physicsObj.isDynamic) {\n        // Static objects don't need reconciliation\n        return;\n      }\n\n      // Calculate divergence between predicted and server positions\n      const dx = serverState.x - physicsObj.x;\n      const dy = serverState.y - physicsObj.y;\n      const divergence = Math.sqrt(dx * dx + dy * dy);\n\n      // Reconcile based on divergence magnitude\n      if (divergence > 100) {\n        // Large divergence - snap immediately (teleport)\n        console.warn(`Large divergence detected for ${id}: ${divergence.toFixed(2)}px - snapping`);\n        physicsObj.x = serverState.x;\n        physicsObj.y = serverState.y;\n        physicsObj.oldX = serverState.x;\n        physicsObj.oldY = serverState.y;\n        pixiObj.x = serverState.x;\n        pixiObj.y = serverState.y;\n      } else if (divergence > 1) {\n        // Small divergence - gentle interpolation using lerp factor\n        const lerpX = physicsObj.x + (dx * this.reconciliationLerpFactor);\n        const lerpY = physicsObj.y + (dy * this.reconciliationLerpFactor);\n\n        physicsObj.x = lerpX;\n        physicsObj.y = lerpY;\n\n        // Maintain velocity by adjusting oldX/oldY\n        const vx = physicsObj.x - physicsObj.oldX;\n        const vy = physicsObj.y - physicsObj.oldY;\n        physicsObj.oldX = lerpX - vx;\n        physicsObj.oldY = lerpY - vy;\n\n        pixiObj.x = lerpX;\n        pixiObj.y = lerpY;\n      }\n      // Divergence < 1px: prediction is accurate, no correction needed\n    });\n  }\n\n  /**\n   * Sync a canvas object to the physics engine\n   */\n  syncObjectToPhysics(id) {\n    const pixiObj = this.objects.get(id);\n    if (!pixiObj || !pixiObj.userData) return;\n\n    const objData = {\n      id,\n      type: pixiObj.userData.type,\n      x: pixiObj.x,\n      y: pixiObj.y,\n      color: this.colorToHexString(pixiObj.tint || 0x3498db),\n      isDynamic: pixiObj.userData.isDynamic !== undefined ? pixiObj.userData.isDynamic : (pixiObj.userData.type === 'circle')\n    };\n\n    if (pixiObj.userData.type === 'circle') {\n      objData.radius = pixiObj.userData.radius;\n    } else if (pixiObj.userData.type === 'rectangle') {\n      objData.width = pixiObj.userData.width;\n      objData.height = pixiObj.userData.height;\n    }\n\n    this.physicsEngine.syncCanvasObject(objData);\n  }\n\n  /**\n   * Enable physics simulation\n   */\n  enablePhysics() {\n    if (this.physicsEnabled) return;\n\n    console.log('Enabling physics simulation...');\n    this.physicsEnabled = true;\n\n    // Sync all existing objects to physics engine\n    this.objects.forEach((pixiObj, id) => {\n      this.syncObjectToPhysics(id);\n    });\n\n    // Resume physics simulation\n    this.physicsEngine.resume();\n    console.log(`Physics enabled with ${this.physicsEngine.objects.size} objects`);\n  }\n\n  /**\n   * Disable physics simulation\n   */\n  disablePhysics() {\n    if (!this.physicsEnabled) return;\n\n    console.log('Disabling physics simulation...');\n    this.physicsEnabled = false;\n    this.physicsEngine.pause();\n  }\n\n  /**\n   * Set global gravity for physics engine\n   */\n  setGravity(gravity) {\n    this.physicsEngine.setGlobalGravity(gravity);\n    console.log(`Gravity set to: ${gravity}`);\n  }\n\n  createToolObject(start, end) {\n    const id = this.generateId();\n\n    if (this.currentTool === 'rectangle') {\n      const width = Math.abs(end.x - start.x);\n      const height = Math.abs(end.y - start.y);\n      const x = Math.min(start.x, end.x);\n      const y = Math.min(start.y, end.y);\n\n      this.createRectangle(id, x, y, width, height, this.currentColor);\n\n      return {\n        id,\n        type: 'rectangle',\n        x, y, width, height,\n        color: this.colorToHexString(this.currentColor),\n        // Physics properties: rectangles are always static (non-dynamic)\n        isDynamic: false,\n        friction: 0.02,\n        restitution: 0.7\n      };\n    } else if (this.currentTool === 'circle') {\n      const dx = end.x - start.x;\n      const dy = end.y - start.y;\n      const radius = Math.sqrt(dx * dx + dy * dy);\n\n      this.createCircle(id, start.x, start.y, radius, this.currentColor);\n\n      return {\n        id,\n        type: 'circle',\n        x: start.x,\n        y: start.y,\n        radius,\n        color: this.colorToHexString(this.currentColor),\n        // Physics properties: circles are dynamic by default\n        isDynamic: true,\n        friction: 0.02,\n        restitution: 0.7\n        // Note: mass is calculated from radius (π*r²) and not stored\n      };\n    }\n  }\n  \n  // ==================== Object Creation ====================\n  \n  createRectangle(id, x, y, width, height, color) {\n    const rect = new PIXI.Graphics();\n    // PixiJS v8 builder pattern with anti-aliasing settings\n    rect.rect(0, 0, width, height).fill(color);\n    rect.x = x;\n    rect.y = y;\n    rect.interactive = true;\n    rect.cursor = 'pointer'; // v8 replaces buttonMode\n    rect.visible = true; // Start visible, culling will handle visibility\n\n    // Enable smooth rendering\n    rect.roundPixels = false;\n\n    // Store dimensions for selection box and physics properties\n    rect.userData = {\n      width,\n      height,\n      type: 'rectangle',\n      isDynamic: false // Rectangles are static by default\n    };\n\n    this.makeDraggable(rect, id);\n    this.makeSelectable(rect, id);\n\n    this.objects.set(id, rect);\n    this.viewport.addChild(rect);\n\n    // Sync to physics engine if enabled\n    if (this.physicsEnabled) {\n      this.syncObjectToPhysics(id);\n    }\n\n    return rect;\n  }\n  \n  createCircle(id, x, y, radius, color) {\n    const circle = new PIXI.Graphics();\n    // PixiJS v8 builder pattern with anti-aliasing settings\n    circle.circle(0, 0, radius).fill(color);\n    circle.x = x;\n    circle.y = y;\n    circle.interactive = true;\n    circle.cursor = 'pointer'; // v8 replaces buttonMode\n    circle.visible = true; // Start visible, culling will handle visibility\n\n    // Enable smooth rendering\n    circle.roundPixels = false;\n\n    // Store dimensions for selection box and physics properties\n    circle.userData = {\n      radius,\n      type: 'circle',\n      isDynamic: true // Circles are dynamic by default\n    };\n\n    this.makeDraggable(circle, id);\n    this.makeSelectable(circle, id);\n\n    this.objects.set(id, circle);\n    this.viewport.addChild(circle);\n\n    // Sync to physics engine if enabled\n    if (this.physicsEnabled) {\n      this.syncObjectToPhysics(id);\n    }\n\n    return circle;\n  }\n\n  createEmitter(id, x, y, rate, lifespan, particleSize, initialVelocity, color) {\n    // Create visual representation of the emitter (a glowing star shape)\n    const emitter = new PIXI.Container();\n    emitter.x = x;\n    emitter.y = y;\n    emitter.interactive = true;\n    emitter.cursor = 'pointer';\n    emitter.visible = true;\n\n    // Create star shape for emitter visualization\n    const starGraphics = new PIXI.Graphics();\n    const numPoints = 8;\n    const outerRadius = 20;\n    const innerRadius = 10;\n\n    // Draw star using polygon\n    const points = [];\n    for (let i = 0; i < numPoints * 2; i++) {\n      const angle = (i * Math.PI) / numPoints;\n      const radius = i % 2 === 0 ? outerRadius : innerRadius;\n      points.push({\n        x: Math.cos(angle) * radius,\n        y: Math.sin(angle) * radius\n      });\n    }\n\n    starGraphics.poly(points).fill(color);\n    starGraphics.circle(0, 0, 5).fill(0xFFFFFF); // White center dot\n    starGraphics.roundPixels = false;\n\n    // Add pulsing animation\n    let pulseTime = 0;\n    const pulseAnimation = (delta) => {\n      pulseTime += delta * 0.05;\n      const scale = 1 + Math.sin(pulseTime) * 0.1;\n      starGraphics.scale.set(scale);\n    };\n\n    emitter.addChild(starGraphics);\n\n    // Store emitter properties\n    emitter.userData = {\n      type: 'emitter',\n      rate,\n      lifespan,\n      particleSize,\n      initialVelocity,\n      pulseAnimation,\n      isDynamic: false // Emitters are static\n    };\n\n    // Add pulse animation to ticker\n    this.app.ticker.add(pulseAnimation);\n\n    this.makeDraggable(emitter, id);\n    this.makeSelectable(emitter, id);\n\n    this.objects.set(id, emitter);\n    this.viewport.addChild(emitter);\n\n    return emitter;\n  }\n  \n  createText(id, text, x, y, fontSize, color) {\n    const textObj = new PIXI.Text(text, {\n      fontSize,\n      fill: color,\n      fontFamily: 'Arial'\n    });\n    textObj.x = x;\n    textObj.y = y;\n    textObj.interactive = true;\n    textObj.buttonMode = true;\n    textObj.visible = true; // Start visible, culling will handle visibility\n\n    this.makeDraggable(textObj, id);\n    this.makeSelectable(textObj, id);\n\n    this.objects.set(id, textObj);\n    this.viewport.addChild(textObj);\n\n    return textObj;\n  }\n  \n  // ==================== Interaction ====================\n  \n  makeDraggable(obj, id) {\n    // Only handle pointerdown - centralized handler does the rest\n    obj.on('pointerdown', (event) => {\n      if (this.currentTool !== 'select') return;\n\n      const worldPos = this.screenToWorld(event.data.global.x, event.data.global.y);\n\n      // Set centralized drag state\n      this.isDragging = true;\n      this.draggedObject = obj;\n      this.draggedObjectId = id;\n      this.dragOffset.x = worldPos.x - obj.x;\n      this.dragOffset.y = worldPos.y - obj.y;\n\n      obj.alpha = 0.7;\n      event.stopPropagation();\n    });\n  }\n  \n  makeSelectable(obj, id) {\n    obj.on('click', (event) => {\n      if (this.currentTool === 'select') {\n        if (event.data.originalEvent.shiftKey) {\n          // Multi-select\n          if (this.selectedObjects.has(id)) {\n            this.deselectObject(id);\n          } else {\n            this.selectObject(id);\n          }\n        } else {\n          // Single select\n          this.clearSelection();\n          this.selectObject(id);\n        }\n        event.stopPropagation();\n      }\n    });\n  }\n  \n  selectObject(id) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    this.selectedObjects.add(id);\n\n    // Trigger selection change callback\n    if (this.onSelectionChange) {\n      this.onSelectionChange(this.selectedObjects);\n    }\n\n    // Remove existing selection indicator if any\n    const existingIndicator = this.selectionIndicators.get(id);\n    if (existingIndicator) {\n      this.viewport.removeChild(existingIndicator);\n      existingIndicator.destroy();\n    }\n\n    // Create selection indicator\n    const indicator = new PIXI.Graphics();\n    \n    // Enable smooth rendering for selection borders\n    indicator.roundPixels = false;\n\n    if (obj.userData) {\n      if (obj.userData.type === 'rectangle') {\n        // Draw selection box around rectangle using v8 builder pattern\n        const { width, height } = obj.userData;\n        indicator.rect(-2, -2, width + 4, height + 4).stroke({ width: 2, color: 0x00FF00, alignment: 0.5 });\n        indicator.x = obj.x;\n        indicator.y = obj.y;\n      } else if (obj.userData.type === 'circle') {\n        // Draw selection box around circle using v8 builder pattern\n        const { radius } = obj.userData;\n        indicator.circle(0, 0, radius + 2).stroke({ width: 2, color: 0x00FF00, alignment: 0.5 });\n        indicator.x = obj.x;\n        indicator.y = obj.y;\n      }\n    }\n\n    // Selection indicators are non-interactive - optimize event traversal\n    indicator.interactive = false;\n    indicator.interactiveChildren = false;\n\n    // Add to viewport and store reference\n    this.viewport.addChild(indicator);\n    this.selectionIndicators.set(id, indicator);\n  }\n\n  deselectObject(id) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    this.selectedObjects.delete(id);\n\n    // Trigger selection change callback\n    if (this.onSelectionChange) {\n      this.onSelectionChange(this.selectedObjects);\n    }\n\n    // Remove selection indicator\n    const indicator = this.selectionIndicators.get(id);\n    if (indicator) {\n      this.viewport.removeChild(indicator);\n      indicator.destroy();\n      this.selectionIndicators.delete(id);\n    }\n  }\n  \n  clearSelection() {\n    this.selectedObjects.forEach(id => this.deselectObject(id));\n    this.selectedObjects.clear();\n\n    // Trigger selection change callback (empty selection)\n    if (this.onSelectionChange) {\n      this.onSelectionChange(this.selectedObjects);\n    }\n  }\n  \n  deleteSelected() {\n    if (this.selectedObjects.size === 0) {\n      return;\n    }\n\n    const idsToDelete = Array.from(this.selectedObjects);\n\n    // Use bulk deletion for better performance\n    const deletedIds = this.deleteObjects(idsToDelete);\n\n    // Clear selection\n    this.selectedObjects.clear();\n\n    // Notify about bulk deletion\n    if (this.onObjectsDeleted && deletedIds.length > 0) {\n      this.onObjectsDeleted(deletedIds);\n    }\n\n    console.log(`Deleted ${deletedIds.length} selected objects`);\n  }\n  \n  // ==================== Object Management ====================\n\n  loadState(canvasState) {\n    console.error('========================================');\n    console.error('=== LOAD STATE CALLED ===');\n    console.error('========================================');\n    console.error('Canvas state received:', canvasState);\n    console.error('Canvas state type:', typeof canvasState);\n    console.error('Is array?', Array.isArray(canvasState));\n\n    // Clear existing objects\n    console.error('Clearing existing objects...');\n    this.objects.forEach((obj, id) => {\n      this.deleteObject(id);\n    });\n    console.error('Objects cleared. Map size:', this.objects.size);\n\n    // Load objects from state\n    if (canvasState && typeof canvasState === 'object') {\n      // If it's an array, iterate through it\n      if (Array.isArray(canvasState)) {\n        console.error(`=== Loading ${canvasState.length} objects from ARRAY ===`);\n        canvasState.forEach((objData, index) => {\n          console.error(`Loading object ${index}:`, JSON.stringify(objData));\n          this.createRemoteObject(objData);\n        });\n      } else {\n        // If it's an object/hash, iterate through its values\n        const values = Object.values(canvasState);\n        console.error(`=== Loading ${values.length} objects from OBJECT ===`);\n        values.forEach((objData, index) => {\n          console.error(`Loading object ${index}:`, JSON.stringify(objData));\n          this.createRemoteObject(objData);\n        });\n      }\n    } else {\n      console.error('!!! INVALID canvas state !!!:', canvasState);\n    }\n\n    console.error('========================================');\n    console.error(`=== LOAD STATE COMPLETE: ${this.objects.size} objects ===`);\n    console.error('Current objects in map:', Array.from(this.objects.keys()));\n    console.error('========================================');\n\n    // Trigger viewport culling after loading objects\n    if (this.cullingEnabled) {\n      this.updateVisibleObjects();\n    }\n  }\n\n  applyDelta(id, delta) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    // Apply position and visual properties\n    for (const [key, value] of Object.entries(delta)) {\n      if (key === 'x' || key === 'y') {\n        obj[key] = value;\n      }\n    }\n\n    // Apply physics properties to userData\n    if (delta.isDynamic !== undefined && obj.userData) {\n      obj.userData.isDynamic = delta.isDynamic;\n    }\n    if (delta.friction !== undefined && obj.userData) {\n      obj.userData.friction = delta.friction;\n    }\n    if (delta.restitution !== undefined && obj.userData) {\n      obj.userData.restitution = delta.restitution;\n    }\n\n    // Handle special cases for Graphics objects\n    if (obj instanceof PIXI.Graphics) {\n      if (delta.width !== undefined || delta.height !== undefined ||\n          delta.color !== undefined || delta.rotation !== undefined) {\n        // Trigger redraw for visual properties\n        this.redrawGraphicsObject(obj);\n      }\n    }\n\n    // Sync to physics engine if physics is enabled\n    if (this.physicsEnabled && (delta.isDynamic !== undefined || delta.friction !== undefined || delta.restitution !== undefined)) {\n      this.syncObjectToPhysics(id);\n    }\n  }\n\n  redrawGraphicsObject(obj) {\n    // Clear and redraw the graphics object based on its current properties\n    obj.clear();\n\n    // Basic rectangle drawing using v8 builder pattern\n    if (obj.width && obj.height) {\n      obj.rect(0, 0, obj.width, obj.height).fill(obj.color || 0xFF0000);\n    }\n\n    // Apply rotation if set\n    if (obj.rotation) {\n      obj.rotation = obj.rotation;\n    }\n  }\n\n  updateObject(id, updates) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    if (updates.x !== undefined) obj.x = updates.x;\n    if (updates.y !== undefined) obj.y = updates.y;\n\n    // For Graphics objects, need to redraw if dimensions change\n    if (obj instanceof PIXI.Graphics) {\n      if (updates.width !== undefined || updates.height !== undefined) {\n        // Recreate the shape - this is simplistic, you might want a better approach\n        console.log('Dimension updates for Graphics require recreation');\n      }\n    }\n  }\n\n  deleteObject(id) {\n    const obj = this.objects.get(id);\n    if (obj) {\n      this.viewport.removeChild(obj);\n      this.objects.delete(id);\n\n      // Destroy object but preserve shared textures\n      obj.destroy({ children: true, texture: false, baseTexture: false });\n\n      // Clean up selection indicator if it exists\n      const indicator = this.selectionIndicators.get(id);\n      if (indicator) {\n        this.viewport.removeChild(indicator);\n        indicator.destroy({ children: true, texture: false, baseTexture: false });\n        this.selectionIndicators.delete(id);\n      }\n\n      // Remove from selected objects set\n      this.selectedObjects.delete(id);\n\n      console.log(`Deleted object ${id} with proper texture preservation`);\n    }\n  }\n\n  deleteObjects(ids) {\n    if (!Array.isArray(ids) || ids.length === 0) {\n      console.warn('deleteObjects: Expected non-empty array of IDs');\n      return;\n    }\n\n    console.log(`Bulk deleting ${ids.length} objects:`, ids);\n\n    // Collect objects to delete for broadcasting\n    const deletedObjects = [];\n\n    // Delete each object\n    ids.forEach(id => {\n      const obj = this.objects.get(id);\n      if (obj) {\n        this.viewport.removeChild(obj);\n        this.objects.delete(id);\n\n        // Destroy object but preserve shared textures\n        obj.destroy({ children: true, texture: false, baseTexture: false });\n\n        // Clean up selection indicator if it exists\n        const indicator = this.selectionIndicators.get(id);\n        if (indicator) {\n          this.viewport.removeChild(indicator);\n          indicator.destroy({ children: true, texture: false, baseTexture: false });\n          this.selectionIndicators.delete(id);\n        }\n\n        // Remove from selected objects set\n        this.selectedObjects.delete(id);\n\n        deletedObjects.push(id);\n      } else {\n        console.warn(`Object ${id} not found for deletion`);\n      }\n    });\n\n    console.log(`Bulk deleted ${deletedObjects.length} objects successfully`);\n\n    // Return deleted IDs for broadcasting\n    return deletedObjects;\n  }\n\n  verifyObjectDeletion(ids) {\n    if (!Array.isArray(ids)) {\n      ids = [ids];\n    }\n\n    let allClean = true;\n    const issues = [];\n\n    ids.forEach(id => {\n      // Check if object still exists in maps\n      if (this.objects.has(id)) {\n        issues.push(`Object ${id} still in objects map`);\n        allClean = false;\n      }\n\n      if (this.selectionIndicators.has(id)) {\n        issues.push(`Selection indicator for ${id} still exists`);\n        allClean = false;\n      }\n\n      if (this.selectedObjects.has(id)) {\n        issues.push(`Object ${id} still in selectedObjects set`);\n        allClean = false;\n      }\n\n      // Check if PIXI object still has parent (indicating it's still in scene)\n      const obj = this.viewport.children.find(child => child._objectId === id);\n      if (obj) {\n        issues.push(`Object ${id} still in viewport children`);\n        allClean = false;\n      }\n    });\n\n    // Check for orphaned PIXI objects in viewport\n    const orphanedPixiObjects = this.viewport.children.filter(child => {\n      // Look for objects that don't have corresponding entries in our maps\n      return child._objectId && !this.objects.has(child._objectId);\n    });\n\n    if (orphanedPixiObjects.length > 0) {\n      issues.push(`${orphanedPixiObjects.length} orphaned PIXI objects found in viewport`);\n      allClean = false;\n    }\n\n    // Check texture memory (basic check)\n    // Note: In PixiJS v8, texture cache access has changed\n    const textureCount = PIXI.Cache ? Object.keys(PIXI.Cache._cache).length : 0;\n    if (textureCount > 100) { // Arbitrary threshold\n      issues.push(`High texture count detected: ${textureCount} textures in cache`);\n    }\n\n    if (!allClean) {\n      console.warn('Memory leak verification failed:', issues);\n    } else {\n      console.log(`Memory leak verification passed for ${ids.length} deleted objects`);\n    }\n\n    return {\n      success: allClean,\n      issues: issues,\n      textureCount: textureCount,\n      orphanedObjects: orphanedPixiObjects.length\n    };\n  }\n\n  getMemoryStats() {\n    const pixiChildren = this.viewport.children.length;\n    const objectsInMap = this.objects.size;\n    const selectionIndicators = this.selectionIndicators.size;\n    const selectedObjects = this.selectedObjects.size;\n    const remoteCursors = this.remoteCursors.size;\n\n    return {\n      pixiChildren,\n      objectsInMap,\n      selectionIndicators,\n      selectedObjects,\n      remoteCursors,\n      totalTrackedObjects: objectsInMap + selectionIndicators + selectedObjects + remoteCursors,\n      // PixiJS v8: Cache API has changed\n      textureCacheSize: PIXI.Cache ? Object.keys(PIXI.Cache._cache).length : 0,\n      baseTextureCacheSize: 0 // BaseTextureCache deprecated in v8\n    };\n  }\n\n  // ==================== Remote Object Sync ====================\n\n  createRemoteObject(objData) {\n    console.log('Creating remote object:', objData);\n    console.log('Object properties:', {\n      id: objData.id,\n      type: objData.type,\n      x: objData.x,\n      y: objData.y,\n      width: objData.width,\n      height: objData.height,\n      radius: objData.radius,\n      color: objData.color,\n      colorType: typeof objData.color\n    });\n\n    // Convert color to proper format (ensure it's a number)\n    const color = this.normalizeColor(objData.color);\n    console.log('Normalized color:', color, 'type:', typeof color);\n\n    // Infer type from data if missing (backwards compatibility)\n    let type = objData.type;\n    if (!type) {\n      console.warn('Object missing type field, inferring from properties:', objData);\n      if (objData.radius !== undefined) {\n        type = 'circle';\n      } else if (objData.width !== undefined && objData.height !== undefined) {\n        type = 'rectangle';\n      } else if (objData.text !== undefined) {\n        type = 'text';\n      } else {\n        console.error('Cannot infer type for object:', objData);\n        return;\n      }\n    }\n\n    if (type === 'rectangle') {\n      // Validate dimensions\n      if (!objData.width || !objData.height || objData.width <= 0 || objData.height <= 0) {\n        console.warn('Skipping rectangle with invalid dimensions:', objData);\n        return;\n      }\n\n      console.log('Creating rectangle with:', {\n        id: objData.id,\n        x: objData.x,\n        y: objData.y,\n        width: objData.width,\n        height: objData.height,\n        color: color\n      });\n      this.createRectangle(\n        objData.id,\n        objData.x,\n        objData.y,\n        objData.width,\n        objData.height,\n        color\n      );\n      console.log('Rectangle created successfully. Objects in map:', this.objects.size);\n    } else if (type === 'circle') {\n      console.log('Creating circle with:', {\n        id: objData.id,\n        x: objData.x,\n        y: objData.y,\n        radius: objData.radius,\n        color: color\n      });\n      this.createCircle(\n        objData.id,\n        objData.x,\n        objData.y,\n        objData.radius,\n        color\n      );\n      console.log('Circle created successfully');\n    } else if (type === 'text') {\n      console.log('Creating text with:', {\n        id: objData.id,\n        text: objData.text,\n        x: objData.x,\n        y: objData.y,\n        fontSize: objData.fontSize,\n        color: color\n      });\n      this.createText(\n        objData.id,\n        objData.text,\n        objData.x,\n        objData.y,\n        objData.fontSize,\n        color\n      );\n      console.log('Text created successfully');\n    } else {\n      console.error('Unknown object type:', type);\n    }\n  }\n\n  normalizeColor(color) {\n    // If it's already a number (0xRRGGBB format), return it\n    if (typeof color === 'number') {\n      return color;\n    }\n\n    // If it's a hex string like \"#3498db\", convert to number\n    if (typeof color === 'string') {\n      if (color.startsWith('#')) {\n        return parseInt(color.substring(1), 16);\n      }\n      // If it's a string number like \"3498db\", convert to number\n      return parseInt(color, 16);\n    }\n\n    // Default color if something goes wrong\n    return 0x3498db;\n  }\n\n  updateRemoteObject(objectId, delta) {\n    console.log('Updating remote object with delta:', objectId, delta);\n    this.applyDelta(objectId, delta);\n  }\n\n  deleteRemoteObject(objectId) {\n    console.log('Deleting remote object:', objectId);\n    this.deleteObject(objectId);\n  }\n  \n  getObject(id) {\n    return this.objects.get(id);\n  }\n\n  // Alias for compatibility with main.js\n  getObjectById(id) {\n    return this.objects.get(id);\n  }\n\n  getAllObjects() {\n    return Array.from(this.objects.entries()).map(([id, obj]) => ({\n      id,\n      type: obj.constructor.name,\n      x: obj.x,\n      y: obj.y\n    }));\n  }\n\n  getPerformanceStats() {\n    return this.performanceMonitor.getStats();\n  }\n  \n  // ==================== Remote Cursors ====================\n  \n  updateRemoteCursor(userId, username, x, y, color) {\n    let cursor = this.remoteCursors.get(userId);\n\n    // Convert color string (like \"#FF6B6B\") to number\n    const colorNum = color && typeof color === 'string' && color.startsWith('#')\n      ? parseInt(color.substring(1), 16)\n      : 0xFF6B6B;\n\n    if (!cursor) {\n      // Create new cursor\n      cursor = new PIXI.Container();\n\n      // Cursor pointer using shared texture and sprite\n      const pointer = new PIXI.Sprite(this.cursorTexture);\n      pointer.tint = colorNum; // Apply color using tint instead of recreating graphics\n\n      // Username label\n      const label = new PIXI.Text(username, {\n        fontSize: 12,\n        fill: 0xFFFFFF,\n        fontWeight: 'bold',\n        stroke: colorNum,\n        strokeThickness: 2,\n        dropShadow: true,\n        dropShadowColor: 0x000000,\n        dropShadowAlpha: 0.7,\n        dropShadowDistance: 1\n      });\n      label.x = 15;\n      label.y = -5; // Position above cursor tip\n\n      cursor.addChild(pointer);\n      cursor.addChild(label);\n      cursor.zIndex = 1000;\n\n      // Remote cursors are non-interactive - optimize event traversal\n      cursor.interactive = false;\n      cursor.interactiveChildren = false;\n\n      this.remoteCursors.set(userId, cursor);\n      this.viewport.addChild(cursor);\n    }\n\n    // Add interpolation for smooth rendering despite batching/throttling\n    if (!cursor.lastUpdate) {\n      cursor.lastUpdate = { x, y, time: performance.now() };\n    }\n\n    const now = performance.now();\n    const dt = now - cursor.lastUpdate.time;\n\n    if (dt > 0 && dt < 100) { // Interpolate over last 100ms for smoothness\n      const lerpFactor = Math.min(dt / 100, 1);\n      cursor.x = cursor.lastUpdate.x + (x - cursor.lastUpdate.x) * lerpFactor;\n      cursor.y = cursor.lastUpdate.y + (y - cursor.lastUpdate.y) * lerpFactor;\n    } else {\n      // Large time gap or first update - jump to position\n      cursor.x = x;\n      cursor.y = y;\n    }\n\n    cursor.lastUpdate = { x, y, time: now };\n  }\n\n  removeRemoteCursor(userId) {\n    const cursor = this.remoteCursors.get(userId);\n    if (cursor) {\n      this.viewport.removeChild(cursor);\n      cursor.destroy();\n      this.remoteCursors.delete(userId);\n    }\n  }\n\n  clearAllRemoteCursors() {\n    console.log(`Clearing all remote cursors (${this.remoteCursors.size} cursors)`)\n    this.remoteCursors.forEach((cursor, userId) => {\n      this.viewport.removeChild(cursor)\n      cursor.destroy()\n    })\n    this.remoteCursors.clear()\n    console.log('All remote cursors cleared')\n  }\n\n  startPeriodicCleanup(intervalMs = 60000) {\n    // Run cleanup every minute to catch any orphaned objects\n    this.cleanupInterval = setInterval(() => {\n      this.performCleanup()\n    }, intervalMs)\n    console.log(`Started periodic cleanup (every ${intervalMs / 1000}s)`)\n  }\n\n  stopPeriodicCleanup() {\n    if (this.cleanupInterval) {\n      clearInterval(this.cleanupInterval)\n      this.cleanupInterval = null\n      console.log('Stopped periodic cleanup')\n    }\n  }\n\n  performCleanup() {\n    console.log('=== Performing periodic cleanup ===')\n    let orphanedIndicators = 0\n    let orphanedCursors = 0\n\n    // Clean up selection indicators for deleted objects\n    this.selectionIndicators.forEach((indicator, id) => {\n      if (!this.objects.has(id)) {\n        this.viewport.removeChild(indicator)\n        indicator.destroy()\n        this.selectionIndicators.delete(id)\n        orphanedIndicators++\n      }\n    })\n\n    // Clean up selected objects that no longer exist\n    this.selectedObjects.forEach(id => {\n      if (!this.objects.has(id)) {\n        this.selectedObjects.delete(id)\n      }\n    })\n\n    // Clean up remote cursors that haven't updated in a while (>5 minutes)\n    const fiveMinutesAgo = performance.now() - (5 * 60 * 1000)\n    this.remoteCursors.forEach((cursor, userId) => {\n      if (cursor.lastUpdate && cursor.lastUpdate.time < fiveMinutesAgo) {\n        this.removeRemoteCursor(userId)\n        orphanedCursors++\n      }\n    })\n\n    if (orphanedIndicators > 0 || orphanedCursors > 0) {\n      console.log(`Cleanup complete: ${orphanedIndicators} indicators, ${orphanedCursors} cursors removed`)\n    } else {\n      console.log('Cleanup complete: No orphaned objects found')\n    }\n  }\n\n  // ==================== Utilities ====================\n  \n  generateId() {\n    return 'obj-' + Math.random().toString(36).substr(2, 9);\n  }\n  \n  setColor(color) {\n    this.currentColor = color;\n  }\n\n  colorToHexString(color) {\n    // Convert JavaScript color number (0x3498db) to CSS hex string (\"#3498db\")\n    if (typeof color === 'number') {\n      return '#' + color.toString(16).padStart(6, '0');\n    }\n    // If it's already a string with #, return as-is\n    if (typeof color === 'string' && color.startsWith('#')) {\n      return color;\n    }\n    // Default fallback\n    return '#3498db';\n  }\n\n  getCanvasState() {\n    const objects = [];\n    this.objects.forEach((obj, id) => {\n      // Serialize object data\n      objects.push({\n        id,\n        type: obj.constructor.name,\n        x: obj.x,\n        y: obj.y,\n        // Add more properties as needed\n      });\n    });\n    return { objects };\n  }\n\n  destroy() {\n    // Clean up performance monitor\n    if (this.performanceMonitor) {\n      this.performanceMonitor.destroy();\n    }\n\n    // Clean up shared cursor texture\n    if (this.cursorTexture) {\n      this.cursorTexture.destroy();\n    }\n\n    // Clean up PIXI objects\n    this.objects.forEach(obj => {\n      if (obj && typeof obj.destroy === 'function') {\n        obj.destroy();\n      }\n    });\n    this.objects.clear();\n\n    this.selectionIndicators.forEach(indicator => {\n      if (indicator && typeof indicator.destroy === 'function') {\n        indicator.destroy();\n      }\n    });\n    this.selectionIndicators.clear();\n\n    this.remoteCursors.forEach(cursor => {\n      if (cursor && typeof cursor.destroy === 'function') {\n        cursor.destroy();\n      }\n    });\n    this.remoteCursors.clear();\n  }\n  \n  // Callbacks - set these from outside\n  onObjectCreated = null;\n  onObjectMoved = null;\n  onObjectDeleted = null;\n  onCursorMoved = null;\n  onSelectionChange = null; // Callback for physics properties UI\n}\n","// websocket.js - WebSocket client for real-time synchronization\n\nexport class LatencyMonitor {\n    constructor(options = {}) {\n        this.maxHistorySize = options.maxHistorySize || 1000\n        this.warningThreshold = options.warningThreshold || 100 // 100ms\n        this.pendingMessages = new Map() // messageId -> { sentTime, type }\n        this.latencyHistory = [] // Array of latency measurements\n        this.stats = {\n            totalMessages: 0,\n            averageLatency: 0,\n            minLatency: Infinity,\n            maxLatency: 0,\n            warningCount: 0\n        }\n    }\n\n    startTracking(messageId, messageType) {\n        this.pendingMessages.set(messageId, {\n            sentTime: performance.now(),\n            type: messageType\n        })\n    }\n\n    endTracking(messageId) {\n        const pending = this.pendingMessages.get(messageId)\n        if (!pending) {\n            return null // Message not found or already tracked\n        }\n\n        const latency = performance.now() - pending.sentTime\n        this.pendingMessages.delete(messageId)\n\n        // Record latency\n        this.recordLatency(latency, pending.type)\n\n        // Warn if high latency\n        if (latency > this.warningThreshold) {\n            console.warn(`⚠️ High latency detected: ${Math.round(latency)}ms for ${pending.type} message`)\n            this.stats.warningCount++\n        }\n\n        return latency\n    }\n\n    recordLatency(latency, messageType) {\n        // Add to history\n        this.latencyHistory.push({\n            latency,\n            type: messageType,\n            timestamp: Date.now()\n        })\n\n        // Trim history if too large\n        if (this.latencyHistory.length > this.maxHistorySize) {\n            this.latencyHistory.shift()\n        }\n\n        // Update stats\n        this.stats.totalMessages++\n        this.stats.minLatency = Math.min(this.stats.minLatency, latency)\n        this.stats.maxLatency = Math.max(this.stats.maxLatency, latency)\n\n        // Recalculate average\n        const sum = this.latencyHistory.reduce((acc, item) => acc + item.latency, 0)\n        this.stats.averageLatency = sum / this.latencyHistory.length\n    }\n\n    getPercentile(percentile) {\n        if (this.latencyHistory.length === 0) {\n            return 0\n        }\n\n        // Sort latencies\n        const sorted = this.latencyHistory\n            .map(item => item.latency)\n            .sort((a, b) => a - b)\n\n        // Calculate percentile index\n        const index = Math.ceil((percentile / 100) * sorted.length) - 1\n        return sorted[Math.max(0, index)]\n    }\n\n    getStats() {\n        return {\n            totalMessages: this.stats.totalMessages,\n            averageLatency: Math.round(this.stats.averageLatency * 100) / 100,\n            minLatency: this.stats.minLatency === Infinity ? 0 : Math.round(this.stats.minLatency * 100) / 100,\n            maxLatency: Math.round(this.stats.maxLatency * 100) / 100,\n            p50: Math.round(this.getPercentile(50) * 100) / 100,\n            p95: Math.round(this.getPercentile(95) * 100) / 100,\n            p99: Math.round(this.getPercentile(99) * 100) / 100,\n            warningCount: this.stats.warningCount,\n            historySize: this.latencyHistory.length,\n            pendingMessages: this.pendingMessages.size\n        }\n    }\n\n    getStatsByType(messageType) {\n        const filtered = this.latencyHistory.filter(item => item.type === messageType)\n        if (filtered.length === 0) {\n            return null\n        }\n\n        const latencies = filtered.map(item => item.latency).sort((a, b) => a - b)\n        const sum = latencies.reduce((acc, val) => acc + val, 0)\n\n        const getPercentile = (p) => {\n            const index = Math.ceil((p / 100) * latencies.length) - 1\n            return latencies[Math.max(0, index)]\n        }\n\n        return {\n            messageType,\n            count: filtered.length,\n            averageLatency: Math.round((sum / filtered.length) * 100) / 100,\n            minLatency: Math.round(latencies[0] * 100) / 100,\n            maxLatency: Math.round(latencies[latencies.length - 1] * 100) / 100,\n            p50: Math.round(getPercentile(50) * 100) / 100,\n            p95: Math.round(getPercentile(95) * 100) / 100,\n            p99: Math.round(getPercentile(99) * 100) / 100\n        }\n    }\n\n    logStats() {\n        const stats = this.getStats()\n        console.log('=== Latency Statistics ===')\n        console.log(`Total messages: ${stats.totalMessages}`)\n        console.log(`Average latency: ${stats.averageLatency}ms`)\n        console.log(`Min latency: ${stats.minLatency}ms`)\n        console.log(`Max latency: ${stats.maxLatency}ms`)\n        console.log(`P50 (median): ${stats.p50}ms`)\n        console.log(`P95: ${stats.p95}ms`)\n        console.log(`P99: ${stats.p99}ms`)\n        console.log(`High latency warnings: ${stats.warningCount}`)\n        console.log(`History size: ${stats.historySize}`)\n        console.log(`Pending messages: ${stats.pendingMessages}`)\n    }\n\n    reset() {\n        this.pendingMessages.clear()\n        this.latencyHistory = []\n        this.stats = {\n            totalMessages: 0,\n            averageLatency: 0,\n            minLatency: Infinity,\n            maxLatency: 0,\n            warningCount: 0\n        }\n    }\n}\n\nexport class CursorThrottle {\n    constructor(sendCallback, intervalMs = 50) { // 20/sec = 50ms\n        this.sendCallback = sendCallback\n        this.intervalMs = intervalMs\n        this.pendingCursor = null\n        this.intervalId = null\n        this.start()\n    }\n\n    start() {\n        this.intervalId = setInterval(() => {\n            if (this.pendingCursor) {\n                this.sendCallback(this.pendingCursor.x, this.pendingCursor.y)\n                this.pendingCursor = null\n            }\n        }, this.intervalMs)\n    }\n\n    update(x, y) {\n        this.pendingCursor = { x, y } // Always update to latest\n    }\n\n    stop() {\n        if (this.intervalId) {\n            clearInterval(this.intervalId)\n            this.intervalId = null\n        }\n    }\n}\n\nexport class WebSocketClient {\n    constructor(url, sessionId, canvasId) {\n        this.url = url\n        this.sessionId = sessionId\n        this.canvasId = canvasId\n        this.ws = null\n        this.isConnected = false\n        this.reconnectAttempts = 0\n        this.maxReconnectAttempts = 5\n        this.reconnectDelay = 1000\n\n        // Message ID counter for latency tracking\n        this.messageIdCounter = 0\n\n        // Latency monitoring\n        this.latencyMonitor = new LatencyMonitor({\n            maxHistorySize: 1000,\n            warningThreshold: 100 // 100ms\n        })\n\n        // Bandwidth tracking for delta compression testing\n        this.bandwidthStats = {\n            totalBytesReceived: 0,\n            objectUpdateMessages: 0,\n            startTime: Date.now()\n        }\n\n        // Cursor throttling using CursorThrottle class\n        this.cursorThrottle = new CursorThrottle((x, y) => {\n            this.send({ type: 'cursor', x, y })\n        })\n\n        // Callbacks\n        this.onAuthSuccess = () => {}\n        this.onAuthFailed = () => {}\n        this.onUserConnected = () => {}\n        this.onUserDisconnected = () => {}\n        this.onPresenceUpdate = () => {}\n        this.onCursorUpdate = () => {}\n        this.onObjectCreated = () => {}\n        this.onObjectUpdated = () => {}\n        this.onObjectDeleted = () => {}\n        this.onObjectsDeleted = () => {}\n        this.onPhysicsSnapshot = () => {}  // New: Physics state snapshot from server\n        this.onPhysicsStateChange = () => {}  // New: Physics state change notification\n        this.onError = () => {}\n        this.onReconnecting = () => {}\n        this.onReconnected = () => {}\n    }\n\n    connect() {\n        console.log(`Connecting to WebSocket: ${this.url}`)\n\n        try {\n            this.ws = new WebSocket(this.url)\n            this.setupEventHandlers()\n        } catch (error) {\n            console.error('WebSocket connection error:', error)\n            this.onError(error)\n            this.scheduleReconnect()\n        }\n    }\n\n    setupEventHandlers() {\n        this.ws.onopen = () => {\n            console.log('WebSocket connected')\n            this.isConnected = true\n            this.reconnectAttempts = 0\n\n            // Send authentication message\n            this.send({\n                type: 'auth',\n                sessionId: this.sessionId,\n                canvasId: this.canvasId\n            })\n\n            if (this.reconnectAttempts > 0) {\n                this.onReconnected()\n            }\n        }\n\n        this.ws.onmessage = (event) => {\n            try {\n                const data = JSON.parse(event.data)\n                this.handleMessage(data)\n            } catch (error) {\n                console.error('Error parsing WebSocket message:', error)\n                this.onError(error)\n            }\n        }\n\n        this.ws.onclose = (event) => {\n            console.log('WebSocket disconnected:', event.code, event.reason)\n            this.isConnected = false\n\n            if (!event.wasClean) {\n                this.scheduleReconnect()\n            }\n        }\n\n        this.ws.onerror = (error) => {\n            console.error('WebSocket error:', error)\n            this.onError(error)\n        }\n    }\n\n    handleMessage(data) {\n        // Track latency if message has an ID (response to our request)\n        if (data.messageId) {\n            const latency = this.latencyMonitor.endTracking(data.messageId)\n            if (latency !== null && latency < 100) {\n                // Only log sub-100ms latencies at debug level\n                console.debug(`Message ${data.type} latency: ${Math.round(latency)}ms`)\n            }\n        }\n\n        switch (data.type) {\n            case 'auth-success':\n                this.onAuthSuccess(data)\n                break\n\n            case 'auth-failed':\n                this.onAuthFailed(data)\n                break\n\n            case 'user-connected':\n                this.onUserConnected(data)\n                break\n\n            case 'user-disconnected':\n                this.onUserDisconnected(data)\n                break\n\n            case 'presence':\n                this.onPresenceUpdate(data.users)\n                break\n\n            case 'cursor':\n                this.onCursorUpdate(data)\n                break\n\n            case 'cursor-batch':\n                // Handle batched cursor updates\n                if (data.cursors && Array.isArray(data.cursors)) {\n                    data.cursors.forEach(cursor => {\n                        this.onCursorUpdate(cursor)\n                    })\n                }\n                break\n\n            case 'object-create':\n                this.onObjectCreated(data)\n                break\n\n            case 'object-update':\n                // Track bandwidth for delta compression testing\n                const messageSize = JSON.stringify(data).length\n                this.bandwidthStats.totalBytesReceived += messageSize\n                this.bandwidthStats.objectUpdateMessages++\n                console.log(`Object update received: ${messageSize} bytes (total: ${this.bandwidthStats.totalBytesReceived} bytes, ${this.bandwidthStats.objectUpdateMessages} messages)`)\n                this.onObjectUpdated(data)\n                break\n\n            case 'object-delete':\n                this.onObjectDeleted(data)\n                break\n\n            case 'objects-delete':\n                this.onObjectsDeleted(data)\n                break\n\n            case 'physics-snapshot':\n                // Handle physics state snapshot from server (~20 Hz)\n                if (data.snapshot && Array.isArray(data.snapshot)) {\n                    this.onPhysicsSnapshot(data.snapshot)\n                }\n                break\n\n            case 'physics-state-change':\n                // Handle physics state change (play/pause/reset)\n                this.onPhysicsStateChange(data)\n                break\n\n            case 'error':\n                console.error('Server error:', data.message)\n                this.onError(new Error(data.message))\n                break\n\n            default:\n                console.warn('Unknown message type:', data.type)\n        }\n    }\n\n    send(data, trackLatency = false) {\n        if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n            // Add message ID for latency tracking if requested\n            if (trackLatency && data.type !== 'cursor') {\n                data.messageId = ++this.messageIdCounter\n                this.latencyMonitor.startTracking(data.messageId, data.type)\n            }\n\n            this.ws.send(JSON.stringify(data))\n        } else {\n            console.warn('WebSocket not connected, message not sent:', data)\n        }\n    }\n\n    sendCursorUpdate(x, y) {\n        this.cursorThrottle.update(x, y)\n    }\n\n    sendObjectCreate(object) {\n        this.send({\n            type: 'object-create',\n            object: object\n        }, true) // Enable latency tracking\n    }\n\n    sendObjectUpdate(objectId, updates) {\n        this.send({\n            type: 'object-update',\n            'object-id': objectId,\n            updates: updates\n        }, true) // Enable latency tracking\n    }\n\n    sendObjectDelete(objectId) {\n        this.send({\n            type: 'object-delete',\n            'object-id': objectId\n        }, true) // Enable latency tracking\n    }\n\n    scheduleReconnect() {\n        if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n            console.error('Max reconnection attempts reached')\n            this.onError(new Error('Unable to reconnect to server'))\n            return\n        }\n\n        this.reconnectAttempts++\n        const delay = this.reconnectDelay * Math.pow(2, this.reconnectAttempts - 1)\n\n        console.log(`Attempting to reconnect in ${delay}ms (attempt ${this.reconnectAttempts}/${this.maxReconnectAttempts})`)\n        this.onReconnecting()\n\n        setTimeout(() => {\n            this.connect()\n        }, delay)\n    }\n\n    getBandwidthStats() {\n        const elapsedMinutes = (Date.now() - this.bandwidthStats.startTime) / (1000 * 60)\n        return {\n            totalBytes: this.bandwidthStats.totalBytesReceived,\n            messageCount: this.bandwidthStats.objectUpdateMessages,\n            averageBytesPerMessage: this.bandwidthStats.objectUpdateMessages > 0\n                ? Math.round(this.bandwidthStats.totalBytesReceived / this.bandwidthStats.objectUpdateMessages)\n                : 0,\n            bytesPerMinute: elapsedMinutes > 0\n                ? Math.round(this.bandwidthStats.totalBytesReceived / elapsedMinutes)\n                : 0,\n            elapsedMinutes: Math.round(elapsedMinutes * 10) / 10\n        }\n    }\n\n    getLatencyStats() {\n        return this.latencyMonitor.getStats()\n    }\n\n    getLatencyStatsByType(messageType) {\n        return this.latencyMonitor.getStatsByType(messageType)\n    }\n\n    logLatencyStats() {\n        this.latencyMonitor.logStats()\n    }\n\n    logBandwidthStats() {\n        const stats = this.getBandwidthStats()\n        console.log('Bandwidth Stats (Delta Compression):', {\n            'Total bytes received': `${stats.totalBytes} bytes`,\n            'Object update messages': stats.messageCount,\n            'Avg bytes per message': `${stats.averageBytesPerMessage} bytes`,\n            'Bytes per minute': `${stats.bytesPerMinute} bytes/min`,\n            'Elapsed time': `${stats.elapsedMinutes} minutes`\n        })\n    }\n\n    disconnect() {\n        // Log final bandwidth stats before disconnecting\n        if (this.bandwidthStats.objectUpdateMessages > 0) {\n            console.log('=== Final Bandwidth Stats (Delta Compression) ===')\n            this.logBandwidthStats()\n        }\n\n        // Stop cursor throttle timer\n        if (this.cursorThrottle) {\n            this.cursorThrottle.stop()\n            console.log('Stopped cursor throttle timer')\n        }\n\n        // Close WebSocket connection\n        if (this.ws) {\n            this.ws.close(1000, 'User disconnect')\n            this.ws = null\n            this.isConnected = false\n        }\n\n        console.log('=== Disconnect cleanup complete ===')\n    }\n\n    sendObjectsDelete(objectIds) {\n        this.send({\n            type: 'objects-delete',\n            'object-ids': objectIds\n        })\n    }\n\n    sendPhysicsControl(action, value = null) {\n        const message = {\n            type: 'physics-control',\n            action: action\n        }\n\n        if (value !== null) {\n            message.value = value\n        }\n\n        this.send(message)\n    }\n}","// auth.js - Authentication UI and logic for CollabCanvas\n\nexport class AuthManager {\n    constructor() {\n        this.modal = document.getElementById('auth-modal')\n        this.loginForm = document.getElementById('login-form')\n        this.registerForm = document.getElementById('register-form')\n        this.auth0Domain = import.meta.env.VITE_AUTH0_DOMAIN\n        this.auth0ClientId = import.meta.env.VITE_AUTH0_CLIENT_ID\n        this.setupEventListeners()\n        this.checkAuthCallback()\n    }\n\n    setupEventListeners() {\n        // Tab switching\n        document.querySelectorAll('.tab-btn').forEach(btn => {\n            btn.addEventListener('click', () => {\n                const tab = btn.dataset.tab\n                this.switchTab(tab)\n            })\n        })\n\n        // Form submissions\n        this.loginForm.addEventListener('submit', async (e) => {\n            e.preventDefault()\n            await this.handleLogin()\n        })\n\n        this.registerForm.addEventListener('submit', async (e) => {\n            e.preventDefault()\n            await this.handleRegister()\n        })\n\n        // OAuth buttons\n        const auth0LoginBtn = document.getElementById('auth0-login-btn')\n        if (auth0LoginBtn) {\n            auth0LoginBtn.addEventListener('click', () => this.loginWithAuth0())\n        }\n\n        const googleLoginBtn = document.getElementById('google-login-btn')\n        if (googleLoginBtn) {\n            googleLoginBtn.addEventListener('click', () => this.loginWithGoogle())\n        }\n\n        const githubLoginBtn = document.getElementById('github-login-btn')\n        if (githubLoginBtn) {\n            githubLoginBtn.addEventListener('click', () => this.loginWithGithub())\n        }\n    }\n\n    switchTab(tab) {\n        // Update tab buttons\n        document.querySelectorAll('.tab-btn').forEach(btn => {\n            btn.classList.toggle('active', btn.dataset.tab === tab)\n        })\n\n        // Update forms\n        document.querySelectorAll('.auth-form').forEach(form => {\n            form.classList.toggle('active', form.id === `${tab}-form`)\n        })\n\n        // Clear errors\n        document.querySelectorAll('.error-message').forEach(err => {\n            err.textContent = ''\n        })\n    }\n\n    showModal() {\n        return new Promise((resolve) => {\n            this.modal.classList.remove('hidden')\n            this.resolveAuth = resolve\n        })\n    }\n\n    hideModal() {\n        this.modal.classList.add('hidden')\n    }\n\n    showError(message, formId = 'login') {\n        const errorEl = document.getElementById(`${formId}-error`)\n        if (errorEl) {\n            errorEl.textContent = message\n            errorEl.style.display = 'block'\n        }\n    }\n\n    async loginWithAuth0() {\n        try {\n            // Check backend health before redirecting\n            const response = await fetch('/auth0/login', { method: 'HEAD' })\n            if (!response.ok && response.status !== 405) {\n                // 405 Method Not Allowed is expected since we're doing HEAD\n                throw new Error('Authentication service unavailable')\n            }\n            // Redirect to backend OAuth initiation\n            window.location.href = '/auth0/login'\n        } catch (error) {\n            console.error('Auth0 login error:', error)\n            this.showError('Could not connect to authentication service. Please try again.')\n        }\n    }\n\n    async loginWithGoogle() {\n        try {\n            // Check backend health before redirecting\n            const response = await fetch('/auth0/login?connection=google-oauth2', { method: 'HEAD' })\n            if (!response.ok && response.status !== 405) {\n                throw new Error('Authentication service unavailable')\n            }\n            // Redirect to backend OAuth with Google connection\n            window.location.href = '/auth0/login?connection=google-oauth2'\n        } catch (error) {\n            console.error('Google login error:', error)\n            this.showError('Could not connect to Google authentication. Please try again.')\n        }\n    }\n\n    async loginWithGithub() {\n        try {\n            // Check backend health before redirecting\n            const response = await fetch('/auth0/login?connection=github', { method: 'HEAD' })\n            if (!response.ok && response.status !== 405) {\n                throw new Error('Authentication service unavailable')\n            }\n            // Redirect to backend OAuth with GitHub connection\n            window.location.href = '/auth0/login?connection=github'\n        } catch (error) {\n            console.error('GitHub login error:', error)\n            this.showError('Could not connect to GitHub authentication. Please try again.')\n        }\n    }\n\n    checkAuthCallback() {\n        // Check if returning from Auth0 callback\n        const url = new URL(window.location)\n        const code = url.searchParams.get('code')\n        const error = url.searchParams.get('error')\n        const errorDescription = url.searchParams.get('error_description')\n\n        if (error) {\n            // OAuth error returned from Auth0\n            console.error('OAuth error:', error, errorDescription)\n\n            // Show user-friendly error message\n            let message = 'Authentication failed. '\n            if (error === 'access_denied') {\n                message += 'Access was denied. Please try again.'\n            } else if (errorDescription) {\n                message += errorDescription\n            } else {\n                message += 'Please try again or contact support.'\n            }\n\n            this.showError(message)\n\n            // Clean URL\n            window.history.replaceState({}, document.title, window.location.pathname)\n        } else if (code) {\n            // Callback will be handled by backend redirect to /auth0/callback\n            // which will set session cookie and redirect back\n            console.log('Auth0 callback detected, processing...')\n        }\n    }\n\n    async handleLogin() {\n        const email = document.getElementById('login-email').value\n        const password = document.getElementById('login-password').value\n        const errorEl = document.getElementById('login-error')\n\n        try {\n            const response = await fetch('/api/login', {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ email, password })\n            })\n\n            const data = await response.json()\n\n            if (data.success && data.data) {\n                this.hideModal()\n                this.resolveAuth({\n                    sessionId: data.data['session-id'],\n                    userId: data.data['user-id'],\n                    username: data.data.username\n                })\n            } else {\n                errorEl.textContent = data.error || 'Login failed'\n            }\n        } catch (error) {\n            console.error('Login error:', error)\n            errorEl.textContent = 'Connection error. Please try again.'\n        }\n    }\n\n    async handleRegister() {\n        const username = document.getElementById('register-username').value\n        const email = document.getElementById('register-email').value\n        const password = document.getElementById('register-password').value\n        const errorEl = document.getElementById('register-error')\n\n        try {\n            const response = await fetch('/api/register', {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ username, email, password })\n            })\n\n            const data = await response.json()\n\n            if (data.success) {\n                // Auto-login after registration\n                await this.loginAfterRegister(email, password)\n            } else {\n                errorEl.textContent = data.error || 'Registration failed'\n            }\n        } catch (error) {\n            console.error('Registration error:', error)\n            errorEl.textContent = 'Connection error. Please try again.'\n        }\n    }\n\n    async loginAfterRegister(email, password) {\n        // Switch to login tab\n        this.switchTab('login')\n\n        // Fill in credentials\n        document.getElementById('login-email').value = email\n        document.getElementById('login-password').value = password\n\n        // Auto-submit\n        await this.handleLogin()\n    }\n}","// main.js - Application entry point for CollabCanvas\n\nimport './styles.css'\nimport * as PIXI from 'pixi.js'\nimport { CanvasManager } from './canvas.js'\nimport { WebSocketClient } from './websocket.js'\nimport { AuthManager } from './auth.js'\n\nclass CollabCanvas {\n    constructor() {\n        this.canvasManager = null\n        this.wsClient = null\n        this.authManager = null\n        this.sessionId = null\n        this.userId = null\n        this.username = null\n        this.canvasId = this.getCanvasId()\n        this.activeUsers = [] // Track active users\n    }\n\n    getCanvasId() {\n        // Get canvas ID from URL or use default shared canvas\n        const params = new URLSearchParams(window.location.search)\n        let canvasId = params.get('canvas')\n\n        if (!canvasId) {\n            // Use a fixed default canvas so all users join the same one\n            canvasId = 'default-canvas'\n            // Update URL without reload\n            const newUrl = new URL(window.location)\n            newUrl.searchParams.set('canvas', canvasId)\n            window.history.replaceState({}, '', newUrl)\n        }\n\n        return canvasId\n    }\n\n    async init() {\n        console.log('Initializing CollabCanvas...')\n\n        // Update canvas ID in status bar\n        document.getElementById('canvas-id').textContent = this.canvasId\n\n        // Initialize authentication\n        this.authManager = new AuthManager()\n\n        // Check for existing session\n        this.sessionId = localStorage.getItem('sessionId')\n\n        if (this.sessionId) {\n            // Validate session with backend\n            const isValid = await this.validateSession()\n\n            if (!isValid) {\n                this.sessionId = null\n                localStorage.removeItem('sessionId')\n            }\n        }\n\n        if (!this.sessionId) {\n            // Hide loading screen and show auth modal\n            this.hideLoadingScreen()\n            const authData = await this.authManager.showModal()\n            this.sessionId = authData.sessionId\n            this.userId = authData.userId\n            this.username = authData.username\n            localStorage.setItem('sessionId', this.sessionId)\n        }\n\n        // Hide loading screen (session is valid)\n        this.hideLoadingScreen()\n\n        // Initialize canvas (async in v8)\n        await this.initCanvas()\n\n        // Initialize WebSocket connection\n        this.initWebSocket()\n\n        // Setup UI event handlers\n        this.setupUIHandlers()\n\n        console.log('CollabCanvas initialized successfully')\n    }\n\n    hideLoadingScreen() {\n        const loadingScreen = document.getElementById('loading-screen')\n        if (loadingScreen) {\n            loadingScreen.classList.add('hidden')\n        }\n    }\n\n    async validateSession() {\n        console.log('[FRONTEND] Validating session...')\n        console.log('[FRONTEND] sessionId from localStorage:', this.sessionId)\n\n        try {\n            const response = await fetch('/api/session', {\n                credentials: 'include',\n                headers: {\n                    'X-Session-ID': this.sessionId\n                }\n            })\n\n            console.log('[FRONTEND] Response status:', response.status)\n            console.log('[FRONTEND] Response ok:', response.ok)\n\n            if (response.ok) {\n                const data = await response.json()\n                console.log('[FRONTEND] Response data:', data)\n\n                if (data.success && data.data && data.data.valid) {\n                    this.userId = data.data['user-id']\n                    this.username = data.data.username\n                    console.log('[FRONTEND] Session restored:', this.username)\n                    return true\n                } else {\n                    console.log('[FRONTEND] Session validation failed - data.success:', data.success, 'data.data:', data.data, 'data.data.valid:', data.data?.valid)\n                }\n            } else {\n                const errorData = await response.json()\n                console.log('[FRONTEND] Error response:', errorData)\n            }\n        } catch (error) {\n            console.error('[FRONTEND] Session validation exception:', error)\n        }\n\n        return false\n    }\n\n    async initCanvas() {\n        const container = document.getElementById('canvas-container')\n\n        // Get current theme for canvas background\n        const currentTheme = document.documentElement.getAttribute('data-theme') || 'dark'\n        const backgroundColor = currentTheme === 'dark' ? 0x16161f : 0xffffff\n\n        // Create PixiJS application with v8 async initialization\n        const app = new PIXI.Application()\n        await app.init({\n            width: window.innerWidth,\n            height: window.innerHeight,\n            backgroundColor: backgroundColor,\n            resizeTo: window,\n            antialias: true,\n            autoDensity: true,\n            resolution: window.devicePixelRatio || 1\n        })\n\n        container.appendChild(app.canvas)\n        \n        // Listen for theme changes and update canvas background\n        const themeToggle = document.getElementById('theme-toggle')\n        if (themeToggle) {\n            themeToggle.addEventListener('click', () => {\n                setTimeout(() => {\n                    const newTheme = document.documentElement.getAttribute('data-theme')\n                    const newBgColor = newTheme === 'dark' ? 0x16161f : 0xffffff\n                    app.renderer.background.color = newBgColor\n                }, 50)\n            })\n        }\n\n        this.canvasManager = new CanvasManager(app)\n\n        // Make performance stats available globally for console access\n        window.getPerformanceStats = () => {\n            return this.canvasManager.getPerformanceStats();\n        };\n\n        // Make latency stats available globally\n        window.getLatencyStats = () => {\n            if (!this.wsClient) return null;\n            return this.wsClient.getLatencyStats();\n        };\n\n        window.logLatencyStats = () => {\n            if (!this.wsClient) {\n                console.warn('WebSocket client not initialized');\n                return;\n            }\n            this.wsClient.logLatencyStats();\n        };\n\n        window.getLatencyStatsByType = (messageType) => {\n            if (!this.wsClient) return null;\n            return this.wsClient.getLatencyStatsByType(messageType);\n        };\n\n        // Set up canvas callbacks for WebSocket synchronization\n        this.canvasManager.onCursorMoved = (x, y) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendCursorUpdate(x, y)\n            }\n        }\n\n        this.canvasManager.onObjectCreated = (object) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectCreate(object)\n            }\n        }\n\n        this.canvasManager.onObjectUpdated = (objectId, updates) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectUpdate(objectId, updates)\n            }\n        }\n\n        this.canvasManager.onObjectDeleted = (objectId) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectDelete(objectId)\n            }\n        }\n\n        this.canvasManager.onObjectsDeleted = (objectIds) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectsDelete(objectIds)\n            }\n        }\n\n        // Update status bar callbacks\n        this.canvasManager.onToolChange = (tool) => {\n            document.getElementById('current-tool').textContent =\n                tool.charAt(0).toUpperCase() + tool.slice(1)\n        }\n\n        this.canvasManager.onMouseMove = (x, y) => {\n            document.getElementById('mouse-position').textContent = `${Math.round(x)}, ${Math.round(y)}`\n        }\n\n        this.canvasManager.onZoomChange = (zoom) => {\n            document.getElementById('zoom-level').textContent = `${Math.round(zoom * 100)}%`\n        }\n\n        this.canvasManager.onObjectCountChange = (count) => {\n            document.getElementById('object-count').textContent = count\n        }\n\n        // Object selection callback for physics properties UI\n        this.canvasManager.onSelectionChange = (selectedObjects) => {\n            this.updatePhysicsPropertiesUI(selectedObjects)\n        }\n\n        // Start periodic memory cleanup (every 60 seconds)\n        // This removes orphaned selection indicators and inactive cursors\n        this.canvasManager.startPeriodicCleanup(60000)\n        console.log('Started periodic memory cleanup (60s interval)')\n    }\n\n    initWebSocket() {\n        // Use wss:// for HTTPS pages, ws:// for HTTP\n        const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:'\n        // window.location.host includes port if non-standard (e.g., localhost:8080)\n        const wsUrl = `${wsProtocol}//${window.location.host}/ws/${this.canvasId}`\n\n        this.wsClient = new WebSocketClient(wsUrl, this.sessionId, this.canvasId)\n\n        // Set up WebSocket callbacks\n        this.wsClient.onAuthSuccess = (data) => {\n            console.error('=== WebSocket authenticated ===')\n            console.error('Auth data received:', data)\n\n            // Backend sends 'canvas-state' (kebab-case), not 'canvasState'\n            const canvasState = data['canvas-state'] || data.canvasState\n            console.error('canvasState exists?', !!canvasState)\n            console.error('canvasState type:', typeof canvasState)\n            console.error('canvasState length:', canvasState ? canvasState.length : 0)\n\n            // Load initial canvas state\n            if (canvasState) {\n                console.error('=== CALLING loadState ===')\n                this.canvasManager.loadState(canvasState)\n                console.error('=== loadState RETURNED ===')\n            } else {\n                console.error('=== NO CANVAS STATE IN AUTH RESPONSE ===')\n            }\n        }\n\n        this.wsClient.onUserConnected = (data) => {\n            // Add new user to active users list\n            this.activeUsers.push({\n                'user-id': data.userId || data['user-id'],\n                username: data.username,\n                color: data.color\n            })\n            this.updatePresenceList(this.activeUsers)\n            this.showNotification(`${data.username} joined`, 'info')\n        }\n\n        this.wsClient.onUserDisconnected = (data) => {\n            // Remove user from active users list\n            const userId = data.userId || data['user-id']\n            this.activeUsers = this.activeUsers.filter(u =>\n                (u['user-id'] || u.userId) !== userId\n            )\n            this.updatePresenceList(this.activeUsers)\n            this.canvasManager.removeRemoteCursor(userId)\n            this.showNotification(`${data.username} left`, 'info')\n        }\n\n        this.wsClient.onPresenceUpdate = (users) => {\n            // Replace entire active users list with server's authoritative list\n            this.activeUsers = users\n            this.updatePresenceList(this.activeUsers)\n        }\n\n        this.wsClient.onCursorUpdate = (data) => {\n            this.canvasManager.updateRemoteCursor(\n                data.userId,\n                data.username,\n                data.x,\n                data.y,\n                data.color\n            )\n        }\n\n        this.wsClient.onObjectCreated = (data) => {\n            this.canvasManager.createRemoteObject(data.object)\n        }\n\n        this.wsClient.onObjectUpdated = (data) => {\n            // Backend sends 'object-id' (kebab-case)\n            const objectId = data['object-id'] || data.objectId\n            this.canvasManager.updateRemoteObject(objectId, data.delta)\n        }\n\n        this.wsClient.onObjectDeleted = (data) => {\n            // Remove user from active users list\n            const userId = data.userId || data['user-id']\n            this.activeUsers = this.activeUsers.filter(u =>\n                (u['user-id'] || u.userId) !== userId\n            )\n            this.updatePresenceList(this.activeUsers)\n            this.canvasManager.removeRemoteCursor(userId)\n            this.showNotification(`${data.username} left`, 'info')\n        }\n\n        this.wsClient.onObjectsDeleted = (data) => {\n            const objectIds = data['object-ids'] || data.objectIds || []\n            console.log('Received bulk delete for objects:', objectIds)\n\n            // Handle remote bulk deletion\n            if (objectIds.length > 0) {\n                objectIds.forEach(objectId => {\n                    this.canvasManager.deleteObject(objectId)\n                })\n                console.log(`Processed remote bulk deletion of ${objectIds.length} objects`)\n            }\n        }\n\n        // Physics snapshot handler (Subtask 5.2: Handle snapshot reception)\n        this.wsClient.onPhysicsSnapshot = (snapshot) => {\n            this.canvasManager.handlePhysicsSnapshot(snapshot)\n        }\n\n        // Physics state change handler (play/pause/reset notifications)\n        this.wsClient.onPhysicsStateChange = (data) => {\n            const action = data.action || data.state\n            console.log(`Physics state changed: ${action}`)\n\n            if (action === 'play' || action === 'playing') {\n                this.canvasManager.enablePhysics()\n                this.showNotification('Physics simulation started', 'info')\n            } else if (action === 'pause' || action === 'paused') {\n                this.canvasManager.disablePhysics()\n                this.showNotification('Physics simulation paused', 'info')\n            } else if (action === 'reset') {\n                this.canvasManager.disablePhysics()\n                this.canvasManager.physicsEngine.reset()\n                this.showNotification('Physics simulation reset', 'info')\n            } else if (action === 'set-gravity') {\n                const gravity = data.value || data.gravity\n                this.canvasManager.setGravity(gravity)\n                this.showNotification(`Gravity set to ${gravity}`, 'info')\n            }\n        }\n\n        this.wsClient.onError = (error) => {\n            console.error('WebSocket error:', error)\n            this.showNotification('Connection error', 'error')\n        }\n\n        this.wsClient.onReconnecting = () => {\n            this.showNotification('Reconnecting...', 'warning')\n        }\n\n        this.wsClient.onReconnected = () => {\n            this.showNotification('Reconnected', 'success')\n        }\n\n        // Connect to WebSocket\n        this.wsClient.connect()\n    }\n\n    setupUIHandlers() {\n        // Tool buttons\n        document.querySelectorAll('.tool-btn').forEach(btn => {\n            btn.addEventListener('click', () => {\n                const tool = btn.dataset.tool\n                this.canvasManager.setTool(tool)\n\n                // Update active button\n                document.querySelectorAll('.tool-btn').forEach(b =>\n                    b.classList.remove('active'))\n                btn.classList.add('active')\n            })\n        })\n\n        // Color picker\n        const colorPicker = document.getElementById('color-picker')\n        colorPicker.addEventListener('change', (e) => {\n            this.canvasManager.setColor(e.target.value)\n        })\n\n        // Physics Controls\n        this.setupPhysicsControls()\n\n        // Physics Properties UI\n        this.setupPhysicsPropertiesUI()\n\n        // Keyboard shortcuts\n        document.addEventListener('keydown', (e) => {\n            // Prevent shortcuts when typing in inputs\n            if (e.target.tagName === 'INPUT') return\n\n            switch(e.key.toLowerCase()) {\n                case 'v':\n                    this.selectTool('select')\n                    break\n                case 'r':\n                    this.selectTool('rectangle')\n                    break\n                case 'c':\n                    this.selectTool('circle')\n                    break\n                case 'p':\n                    if (e.ctrlKey && e.shiftKey) {\n                        e.preventDefault()\n                        this.runPerformanceTest()\n                    }\n                    break\n                case 'delete':\n                case 'backspace':\n                    if (!e.target.isContentEditable) {\n                        e.preventDefault()\n                        this.canvasManager.deleteSelected()\n                    }\n                    break\n                case 'z':\n                    if (e.ctrlKey || e.metaKey) {\n                        e.preventDefault()\n                        if (e.shiftKey) {\n                            this.canvasManager.redo()\n                        } else {\n                            this.canvasManager.undo()\n                        }\n                    }\n                    break\n            }\n        })\n\n        // Logout button (if added to UI)\n        const logoutBtn = document.getElementById('logout-btn')\n        if (logoutBtn) {\n            logoutBtn.addEventListener('click', async () => {\n                await this.logout()\n            })\n        }\n    }\n\n    selectTool(tool) {\n        this.canvasManager.setTool(tool)\n\n        // Update UI\n        document.querySelectorAll('.tool-btn').forEach(btn => {\n            if (btn.dataset.tool === tool) {\n                btn.classList.add('active')\n            } else {\n                btn.classList.remove('active')\n            }\n        })\n    }\n\n    setupPhysicsControls() {\n        // Play button\n        const playBtn = document.getElementById('play-btn')\n        if (playBtn) {\n            playBtn.addEventListener('click', () => {\n                if (this.wsClient && this.wsClient.isConnected) {\n                    this.wsClient.sendPhysicsControl('play')\n                    console.log('Sent physics control: play')\n                }\n            })\n        }\n\n        // Pause button\n        const pauseBtn = document.getElementById('pause-btn')\n        if (pauseBtn) {\n            pauseBtn.addEventListener('click', () => {\n                if (this.wsClient && this.wsClient.isConnected) {\n                    this.wsClient.sendPhysicsControl('pause')\n                    console.log('Sent physics control: pause')\n                }\n            })\n        }\n\n        // Reset button\n        const resetBtn = document.getElementById('reset-btn')\n        if (resetBtn) {\n            resetBtn.addEventListener('click', () => {\n                if (this.wsClient && this.wsClient.isConnected) {\n                    this.wsClient.sendPhysicsControl('reset')\n                    console.log('Sent physics control: reset')\n                }\n            })\n        }\n\n        // Gravity slider\n        const gravitySlider = document.getElementById('gravity-slider')\n        const gravityValue = document.getElementById('gravity-value')\n        if (gravitySlider && gravityValue) {\n            gravitySlider.addEventListener('input', (e) => {\n                const value = parseFloat(e.target.value)\n                gravityValue.textContent = value.toFixed(1)\n            })\n\n            gravitySlider.addEventListener('change', (e) => {\n                const value = parseFloat(e.target.value)\n                if (this.wsClient && this.wsClient.isConnected) {\n                    this.wsClient.sendPhysicsControl('set-gravity', value)\n                    console.log('Sent physics control: set-gravity', value)\n                }\n            })\n        }\n\n        // Boundary selector\n        const boundarySelector = document.getElementById('boundary-selector')\n        if (boundarySelector) {\n            boundarySelector.addEventListener('change', (e) => {\n                const value = e.target.value\n                if (this.wsClient && this.wsClient.isConnected) {\n                    this.wsClient.sendPhysicsControl('set-boundary', value)\n                    console.log('Sent physics control: set-boundary', value)\n                }\n            })\n        }\n    }\n\n    updatePresenceList(users = []) {\n        const container = document.getElementById('users-container')\n        container.innerHTML = ''\n\n        users.forEach(user => {\n            const userItem = document.createElement('div')\n            userItem.className = 'user-item'\n            // Handle both kebab-case and camelCase keys\n            const username = user.username\n            const color = user.color\n            userItem.innerHTML = `\n                <span class=\"user-indicator\" style=\"background-color: ${color}\"></span>\n                <span>${username}</span>\n            `\n            container.appendChild(userItem)\n        })\n    }\n\n    setupPhysicsPropertiesUI() {\n        // isDynamic checkbox\n        const isDynamicCheckbox = document.getElementById('prop-isDynamic')\n        if (isDynamicCheckbox) {\n            isDynamicCheckbox.addEventListener('change', (e) => {\n                this.updateSelectedObjectPhysicsProperty('isDynamic', e.target.checked)\n            })\n        }\n\n        // Friction slider\n        const frictionSlider = document.getElementById('prop-friction')\n        const frictionValue = document.getElementById('prop-friction-value')\n        if (frictionSlider && frictionValue) {\n            frictionSlider.addEventListener('input', (e) => {\n                frictionValue.textContent = parseFloat(e.target.value).toFixed(2)\n            })\n            frictionSlider.addEventListener('change', (e) => {\n                const value = parseFloat(e.target.value)\n                this.updateSelectedObjectPhysicsProperty('friction', value)\n            })\n        }\n\n        // Restitution slider\n        const restitutionSlider = document.getElementById('prop-restitution')\n        const restitutionValue = document.getElementById('prop-restitution-value')\n        if (restitutionSlider && restitutionValue) {\n            restitutionSlider.addEventListener('input', (e) => {\n                restitutionValue.textContent = parseFloat(e.target.value).toFixed(2)\n            })\n            restitutionSlider.addEventListener('change', (e) => {\n                const value = parseFloat(e.target.value)\n                this.updateSelectedObjectPhysicsProperty('restitution', value)\n            })\n        }\n    }\n\n    updatePhysicsPropertiesUI(selectedObjects) {\n        const propertiesSection = document.getElementById('properties-section')\n        const isDynamicCheckbox = document.getElementById('prop-isDynamic')\n        const isDynamicHint = document.getElementById('prop-isDynamic-hint')\n        const frictionSlider = document.getElementById('prop-friction')\n        const frictionValue = document.getElementById('prop-friction-value')\n        const restitutionSlider = document.getElementById('prop-restitution')\n        const restitutionValue = document.getElementById('prop-restitution-value')\n\n        // Show/hide properties panel based on selection\n        if (selectedObjects.size === 0) {\n            propertiesSection.style.display = 'none'\n            return\n        }\n\n        // Show properties panel\n        propertiesSection.style.display = 'block'\n\n        // Get first selected object (for simplicity, only show properties for single selection)\n        const firstObjectId = Array.from(selectedObjects)[0]\n        const object = this.canvasManager.getObjectById(firstObjectId)\n\n        if (!object) {\n            propertiesSection.style.display = 'none'\n            return\n        }\n\n        // Multi-selection: show but disable controls\n        if (selectedObjects.size > 1) {\n            isDynamicCheckbox.disabled = true\n            frictionSlider.disabled = true\n            restitutionSlider.disabled = true\n            isDynamicHint.textContent = 'Select a single object to edit properties'\n            return\n        }\n\n        // Single selection: enable controls and populate values\n        frictionSlider.disabled = false\n        restitutionSlider.disabled = false\n\n        // Check if object is a rectangle (rectangles can't be dynamic per Task 3)\n        const isRectangle = object.type === 'rectangle'\n\n        if (isRectangle) {\n            isDynamicCheckbox.disabled = true\n            isDynamicCheckbox.checked = false\n            isDynamicHint.textContent = 'Rectangles are always static (boundaries)'\n        } else {\n            isDynamicCheckbox.disabled = false\n            isDynamicCheckbox.checked = object.isDynamic || false\n            isDynamicHint.textContent = ''\n        }\n\n        // Update slider values\n        const friction = object.friction !== undefined ? object.friction : 0.02\n        const restitution = object.restitution !== undefined ? object.restitution : 0.7\n\n        frictionSlider.value = friction\n        frictionValue.textContent = friction.toFixed(2)\n\n        restitutionSlider.value = restitution\n        restitutionValue.textContent = restitution.toFixed(2)\n    }\n\n    updateSelectedObjectPhysicsProperty(propertyName, value) {\n        // Only update if single object is selected\n        if (this.canvasManager.selectedObjects.size !== 1) {\n            console.warn('Cannot update physics properties for multiple objects')\n            return\n        }\n\n        const objectId = Array.from(this.canvasManager.selectedObjects)[0]\n        const object = this.canvasManager.getObjectById(objectId)\n\n        if (!object) {\n            console.warn('Selected object not found:', objectId)\n            return\n        }\n\n        // Prevent setting isDynamic=true for rectangles\n        if (propertyName === 'isDynamic' && value === true && object.type === 'rectangle') {\n            console.warn('Rectangles cannot be dynamic (they are static boundaries)')\n            return\n        }\n\n        // Update object locally\n        object[propertyName] = value\n        console.log(`Updated object ${objectId} ${propertyName} to ${value}`)\n\n        // Send update via WebSocket\n        if (this.wsClient && this.wsClient.isConnected) {\n            const updates = {}\n            updates[propertyName] = value\n            this.wsClient.sendObjectUpdate(objectId, updates)\n            console.log('Sent physics property update via WebSocket:', updates)\n        }\n    }\n\n    showNotification(message, type = 'info') {\n        // Simple notification system (can be enhanced with a library)\n        console.log(`[${type.toUpperCase()}] ${message}`)\n\n        // TODO: Implement visual notifications\n    }\n\n    async logout() {\n        try {\n            await fetch('/api/logout', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': this.sessionId\n                }\n            })\n        } catch (error) {\n            console.error('Logout error:', error)\n        }\n\n        // Clean up\n        localStorage.removeItem('sessionId')\n\n        // Stop periodic cleanup timer\n        if (this.canvasManager) {\n            this.canvasManager.stopPeriodicCleanup()\n        }\n\n        // Disconnect WebSocket (also cleans up cursor throttle)\n        if (this.wsClient) {\n            this.wsClient.disconnect()\n        }\n\n        // Reload page to show login\n        window.location.reload()\n    }\n\n    async runPerformanceTest() {\n        console.log('Performance testing is not available in production build');\n        console.log('Use development build (npm run dev) for performance testing');\n    }\n}\n\n// Initialize application when DOM is ready\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n        const app = new CollabCanvas()\n        app.init()\n        window.collabCanvas = app // For debugging\n    })\n} else {\n    const app = new CollabCanvas()\n    app.init()\n    window.collabCanvas = app // For debugging\n}"],"names":["PHYSICS_TIMESTEP","PhysicsObject","constructor","config","this","id","type","x","y","oldX","oldY","vx","vy","ax","ay","radius","width","height","mass","isDynamic","undefined","restitution","friction","color","PhysicsEngine","objects","Map","globalGravity","paused","boundaryMode","createCircle","options","calculateMassFromRadius","obj","set","createRectangle","removeObject","delete","getObject","get","clearAll","clear","Math","PI","integrateVerlet","dt","dt2","frictionFactor","newX","newY","applyGravity","applyForce","fx","fy","applyBoundaryConstraints","r","checkCircleCircleCollision","c1","c2","dx","dy","distSq","rSum","dist","sqrt","overlap","nx","ny","totalMass","ratio1","ratio2","min","v1x","v1y","dvn","impulse","checkCircleRectangleCollision","circle","rect","cx","cy","rx","ry","rw","rh","max","dot","resolveAllCollisions","Array","from","values","collisionCount","i","length","j","obj1","obj2","other","step","getStateSnapshot","snapshot","push","rotation","setGlobalGravity","gravity","pause","resume","reset","isPaused","syncCanvasObject","objData","updateObjectPosition","PIXI.extensions","PIXI.CullerPlugin","add","console","log","e","PerformanceMonitor","app","canvasManager","fpsHistory","maxHistorySize","currentFps","lastTime","performance","now","frameCount","ticker","update","bind","deltaTime","deltaMs","round","shift","avgFps","getAverageFps","objectCount","size","warn","toFixed","reduce","a","b","getStats","current","average","destroy","remove","CanvasManager","viewport","PIXI.Container","selectedObjects","Set","selectionIndicators","remoteCursors","isPanning","panStart","currentTool","currentColor","isDragging","draggedObject","draggedObjectId","dragOffset","lastDragUpdate","cullingEnabled","cullingPadding","lastViewportBounds","performanceMonitor","cursorTexture","createSharedCursorTexture","physicsEngine","physicsEnabled","lastPhysicsUpdate","physicsAccumulator","reconciliationLerpFactor","lastServerSnapshot","serverSnapshotTime","stage","addChild","sortableChildren","cullable","drawGrid","setupPanZoom","setupCentralizedDrag","setupKeyboardShortcuts","setupToolHandlers","setupViewportCulling","graphics","PIXI.Graphics","poly","fill","texture","renderer","generateTexture","resolution","scaleMode","PIXI.SCALE_MODES","LINEAR","grid","roundPixels","gridExtent","moveTo","lineTo","stroke","alpha","zIndex","interactive","interactiveChildren","canvas","addEventListener","button","altKey","clientX","clientY","style","cursor","preventDefault","zoomFactor","deltaY","mouseX","mouseY","worldPosBefore","screenToWorld","newScale","scale","worldPosAfter","passive","worldPos","onObjectUpdated","screenX","screenY","worldToScreen","worldX","worldY","document","key","setTool","deleteSelected","tool","drawStart","previewShape","lastPreviewUpdate","previewUpdatePending","onCursorMoved","requestAnimationFrame","currentWorldPos","createToolObject","onObjectCreated","removeChild","updateVisibleObjects","updatePhysicsPrediction","viewportBounds","getViewportBounds","abs","left","top","right","bottom","forEach","objBounds","getObjectBounds","isVisible","isBoundsVisible","visible","screenWidth","screenHeight","topLeft","bottomRight","userData","deltaSeconds","syncVisualFromPhysics","physicsObj","pixiObj","handlePhysicsSnapshot","serverState","syncObjectToPhysics","divergence","lerpX","lerpY","colorToHexString","tint","enablePhysics","disablePhysics","setGravity","start","end","generateId","makeDraggable","makeSelectable","createEmitter","rate","lifespan","particleSize","initialVelocity","emitter","starGraphics","points","numPoints","angle","cos","sin","pulseTime","pulseAnimation","delta","createText","text","fontSize","textObj","PIXI.Text","fontFamily","buttonMode","on","event","data","global","stopPropagation","originalEvent","shiftKey","has","deselectObject","selectObject","clearSelection","onSelectionChange","existingIndicator","indicator","alignment","idsToDelete","deletedIds","deleteObjects","onObjectsDeleted","loadState","canvasState","error","isArray","deleteObject","index","JSON","stringify","createRemoteObject","Object","keys","applyDelta","value","entries","redrawGraphicsObject","updateObject","updates","children","baseTexture","ids","deletedObjects","verifyObjectDeletion","allClean","issues","find","child","_objectId","orphanedPixiObjects","filter","textureCount","PIXI.Cache","_cache","success","orphanedObjects","getMemoryStats","pixiChildren","objectsInMap","totalTrackedObjects","textureCacheSize","baseTextureCacheSize","colorType","normalizeColor","startsWith","parseInt","substring","updateRemoteObject","objectId","deleteRemoteObject","getObjectById","getAllObjects","map","name","getPerformanceStats","updateRemoteCursor","userId","username","colorNum","pointer","PIXI.Sprite","label","fontWeight","strokeThickness","dropShadow","dropShadowColor","dropShadowAlpha","dropShadowDistance","lastUpdate","time","lerpFactor","removeRemoteCursor","clearAllRemoteCursors","startPeriodicCleanup","intervalMs","cleanupInterval","setInterval","performCleanup","stopPeriodicCleanup","clearInterval","orphanedIndicators","orphanedCursors","fiveMinutesAgo","random","toString","substr","setColor","padStart","getCanvasState","onObjectMoved","onObjectDeleted","LatencyMonitor","warningThreshold","pendingMessages","latencyHistory","stats","totalMessages","averageLatency","minLatency","Infinity","maxLatency","warningCount","startTracking","messageId","messageType","sentTime","endTracking","pending","latency","recordLatency","timestamp","Date","sum","acc","item","getPercentile","percentile","sorted","sort","ceil","p50","p95","p99","historySize","getStatsByType","filtered","latencies","val","p","count","logStats","CursorThrottle","sendCallback","pendingCursor","intervalId","stop","WebSocketClient","url","sessionId","canvasId","ws","isConnected","reconnectAttempts","maxReconnectAttempts","reconnectDelay","messageIdCounter","latencyMonitor","bandwidthStats","totalBytesReceived","objectUpdateMessages","startTime","cursorThrottle","send","onAuthSuccess","onAuthFailed","onUserConnected","onUserDisconnected","onPresenceUpdate","onCursorUpdate","onPhysicsSnapshot","onPhysicsStateChange","onError","onReconnecting","onReconnected","connect","WebSocket","setupEventHandlers","scheduleReconnect","onopen","onmessage","parse","handleMessage","onclose","code","reason","wasClean","onerror","debug","users","cursors","messageSize","message","Error","trackLatency","readyState","OPEN","sendCursorUpdate","sendObjectCreate","object","sendObjectUpdate","sendObjectDelete","delay","pow","setTimeout","getBandwidthStats","elapsedMinutes","totalBytes","messageCount","averageBytesPerMessage","bytesPerMinute","getLatencyStats","getLatencyStatsByType","logLatencyStats","logBandwidthStats","disconnect","close","sendObjectsDelete","objectIds","sendPhysicsControl","action","AuthManager","modal","getElementById","loginForm","registerForm","auth0Domain","auth0ClientId","setupEventListeners","checkAuthCallback","querySelectorAll","btn","tab","dataset","switchTab","async","handleLogin","handleRegister","auth0LoginBtn","loginWithAuth0","googleLoginBtn","loginWithGoogle","githubLoginBtn","loginWithGithub","classList","toggle","form","err","textContent","showModal","Promise","resolve","resolveAuth","hideModal","showError","formId","errorEl","display","response","fetch","method","ok","status","window","location","href","URL","searchParams","errorDescription","history","replaceState","title","pathname","email","password","credentials","headers","body","json","loginAfterRegister","CollabCanvas","wsClient","authManager","getCanvasId","activeUsers","URLSearchParams","search","newUrl","init","localStorage","getItem","validateSession","removeItem","hideLoadingScreen","authData","setItem","initCanvas","initWebSocket","setupUIHandlers","loadingScreen","valid","errorData","container","backgroundColor","documentElement","getAttribute","PIXI.Application","innerWidth","innerHeight","resizeTo","antialias","autoDensity","devicePixelRatio","appendChild","themeToggle","newBgColor","background","onToolChange","charAt","toUpperCase","slice","onMouseMove","onZoomChange","zoom","onObjectCountChange","updatePhysicsPropertiesUI","wsUrl","protocol","host","updatePresenceList","showNotification","u","state","target","setupPhysicsControls","setupPhysicsPropertiesUI","tagName","toLowerCase","selectTool","ctrlKey","runPerformanceTest","isContentEditable","metaKey","redo","undo","logoutBtn","logout","playBtn","pauseBtn","resetBtn","gravitySlider","gravityValue","parseFloat","boundarySelector","innerHTML","user","userItem","createElement","className","isDynamicCheckbox","updateSelectedObjectPhysicsProperty","checked","frictionSlider","frictionValue","restitutionSlider","restitutionValue","propertiesSection","isDynamicHint","firstObjectId","disabled","propertyName","Authorization","reload","collabCanvas"],"mappings":"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"}
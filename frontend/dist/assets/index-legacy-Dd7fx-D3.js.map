{"version":3,"file":"index-legacy-Dd7fx-D3.js","sources":["../../src/canvas.js","../../src/websocket.js","../../src/auth.js","../../src/performance-test.js","../../src/main.js"],"sourcesContent":["// src/canvas.js\n// Complete PixiJS Canvas Manager for CollabCanvas\nimport * as PIXI from 'pixi.js';\n\nexport class PerformanceMonitor {\n  constructor(app, canvasManager) {\n    this.app = app;\n    this.canvasManager = canvasManager;\n    this.fpsHistory = [];\n    this.maxHistorySize = 60;\n    this.currentFps = 60;\n    this.lastTime = performance.now();\n    this.frameCount = 0;\n\n    // Bind ticker update\n    this.app.ticker.add(this.update.bind(this));\n\n    console.log('PerformanceMonitor initialized');\n  }\n\n  update(deltaTime) {\n    // Calculate FPS based on delta time (in seconds)\n    const now = performance.now();\n    const deltaMs = now - this.lastTime;\n\n    if (deltaMs > 0) {\n      this.currentFps = Math.round(1000 / deltaMs);\n    }\n\n    this.lastTime = now;\n\n    // Add to history\n    this.fpsHistory.push(this.currentFps);\n    if (this.fpsHistory.length > this.maxHistorySize) {\n      this.fpsHistory.shift(); // Remove oldest entry\n    }\n\n    // Check for low FPS and log warnings\n    if (this.currentFps < 55) {\n      const avgFps = this.getAverageFps();\n      const objectCount = this.canvasManager ? this.canvasManager.objects.size : 0;\n      console.warn(`⚠️ Low FPS detected: ${this.currentFps} FPS (avg: ${avgFps.toFixed(1)}, objects: ${objectCount})`);\n    }\n  }\n\n  getAverageFps() {\n    if (this.fpsHistory.length === 0) return 60;\n    const sum = this.fpsHistory.reduce((a, b) => a + b, 0);\n    return sum / this.fpsHistory.length;\n  }\n\n  getStats() {\n    if (this.fpsHistory.length === 0) {\n      return {\n        current: this.currentFps,\n        average: 60,\n        min: 60,\n        max: 60\n      };\n    }\n\n    return {\n      current: this.currentFps,\n      average: Math.round(this.getAverageFps() * 10) / 10,\n      min: Math.min(...this.fpsHistory),\n      max: Math.max(...this.fpsHistory)\n    };\n  }\n\n  destroy() {\n    if (this.app && this.app.ticker) {\n      this.app.ticker.remove(this.update.bind(this));\n    }\n  }\n}\n\nexport class CanvasManager {\n  constructor(app) {\n    this.app = app;\n    this.viewport = new PIXI.Container();\n    this.objects = new Map(); // objectId -> PIXI Graphics\n    this.selectedObjects = new Set();\n    this.selectionIndicators = new Map(); // objectId -> selection box Graphics\n    this.remoteCursors = new Map(); // userId -> cursor container\n\n    // State\n    this.isPanning = false;\n    this.panStart = { x: 0, y: 0 };\n    this.currentTool = 'select'; // 'select', 'rectangle', 'circle', 'text'\n    this.currentColor = 0x3498db; // Default blue\n\n    // Viewport culling\n    this.cullingEnabled = true;\n    this.cullingPadding = 200; // Extra padding around viewport for smooth scrolling\n    this.lastViewportBounds = null;\n\n    // Performance monitoring\n    this.performanceMonitor = new PerformanceMonitor(app, this);\n\n    // Shared cursor texture for performance optimization\n    this.cursorTexture = this.createSharedCursorTexture();\n\n    // Viewport setup\n    this.app.stage.addChild(this.viewport);\n    this.viewport.sortableChildren = true;\n\n    // Grid background (optional visual aid)\n    this.drawGrid();\n\n    // Setup interaction\n    this.setupPanZoom();\n    this.setupKeyboardShortcuts();\n    this.setupToolHandlers();\n    this.setupViewportCulling();\n\n    console.log('Canvas initialized');\n  }\n\n  createSharedCursorTexture() {\n    // Create cursor shape using Graphics\n    const graphics = new PIXI.Graphics();\n\n    // Draw cursor pointer (triangle)\n    graphics.beginFill(0xFFFFFF); // White fill (will be tinted)\n    graphics.moveTo(0, 0);\n    graphics.lineTo(12, 18);\n    graphics.lineTo(6, 18);\n    graphics.lineTo(0, 24);\n    graphics.endFill();\n\n    // Render to texture\n    const texture = this.app.renderer.generateTexture(graphics, {\n      resolution: 1,\n      scaleMode: PIXI.SCALE_MODES.LINEAR\n    });\n\n    // Clean up graphics object\n    graphics.destroy();\n\n    return texture;\n  }\n\n  // ==================== Grid ====================\n  \n  drawGrid() {\n    const grid = new PIXI.Graphics();\n    grid.lineStyle(1, 0x333333, 0.3);\n    \n    const gridSize = 50;\n    const gridExtent = 5000;\n    \n    // Vertical lines\n    for (let x = -gridExtent; x <= gridExtent; x += gridSize) {\n      grid.moveTo(x, -gridExtent);\n      grid.lineTo(x, gridExtent);\n    }\n    \n    // Horizontal lines\n    for (let y = -gridExtent; y <= gridExtent; y += gridSize) {\n      grid.moveTo(-gridExtent, y);\n      grid.lineTo(gridExtent, y);\n    }\n    \n    grid.zIndex = -1;\n    this.viewport.addChild(grid);\n  }\n  \n  // ==================== Pan & Zoom ====================\n  \n  setupPanZoom() {\n    const canvas = this.app.view;\n    \n    // Pan with middle mouse or Alt+drag\n    canvas.addEventListener('mousedown', (e) => {\n      if (e.button === 1 || (e.button === 0 && e.altKey)) {\n        this.isPanning = true;\n        this.panStart = { x: e.clientX, y: e.clientY };\n        canvas.style.cursor = 'grabbing';\n        e.preventDefault();\n      }\n    });\n    \n    canvas.addEventListener('mousemove', (e) => {\n      if (this.isPanning) {\n        const dx = e.clientX - this.panStart.x;\n        const dy = e.clientY - this.panStart.y;\n        \n        this.viewport.x += dx;\n        this.viewport.y += dy;\n        \n        this.panStart = { x: e.clientX, y: e.clientY };\n      }\n    });\n    \n    canvas.addEventListener('mouseup', () => {\n      if (this.isPanning) {\n        this.isPanning = false;\n        canvas.style.cursor = 'default';\n      }\n    });\n    \n    // Zoom with mouse wheel\n    canvas.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      \n      const zoomFactor = e.deltaY > 0 ? 0.9 : 1.1;\n      const mouseX = e.clientX;\n      const mouseY = e.clientY;\n      \n      // Get position before zoom\n      const worldPosBefore = this.screenToWorld(mouseX, mouseY);\n      \n      // Apply zoom\n      const newScale = this.viewport.scale.x * zoomFactor;\n      if (newScale >= 0.1 && newScale <= 10) {\n        this.viewport.scale.set(newScale);\n        \n        // Adjust position to keep mouse over same world point\n        const worldPosAfter = this.screenToWorld(mouseX, mouseY);\n        this.viewport.x += (worldPosAfter.x - worldPosBefore.x) * this.viewport.scale.x;\n        this.viewport.y += (worldPosAfter.y - worldPosBefore.y) * this.viewport.scale.y;\n      }\n    }, { passive: false });\n  }\n  \n  screenToWorld(screenX, screenY) {\n    return {\n      x: (screenX - this.viewport.x) / this.viewport.scale.x,\n      y: (screenY - this.viewport.y) / this.viewport.scale.y\n    };\n  }\n  \n  worldToScreen(worldX, worldY) {\n    return {\n      x: worldX * this.viewport.scale.x + this.viewport.x,\n      y: worldY * this.viewport.scale.y + this.viewport.y\n    };\n  }\n  \n  // ==================== Keyboard Shortcuts ====================\n  \n  setupKeyboardShortcuts() {\n    document.addEventListener('keydown', (e) => {\n      // Tool shortcuts\n      if (e.key === 'r' || e.key === 'R') {\n        this.setTool('rectangle');\n      } else if (e.key === 'c' || e.key === 'C') {\n        this.setTool('circle');\n      } else if (e.key === 't' || e.key === 'T') {\n        this.setTool('text');\n      } else if (e.key === 'v' || e.key === 'V' || e.key === 'Escape') {\n        this.setTool('select');\n      } else if (e.key === 'Delete' || e.key === 'Backspace') {\n        this.deleteSelected();\n      }\n    });\n  }\n  \n  setTool(tool) {\n    this.currentTool = tool;\n    console.log('Tool:', tool);\n    // Update UI indicator if you have one\n  }\n  \n  // ==================== Tool Handlers ====================\n  \n  setupToolHandlers() {\n    const canvas = this.app.view;\n    let drawStart = null;\n    let previewShape = null;\n\n    // Track cursor movement\n    canvas.addEventListener('mousemove', (e) => {\n      const worldPos = this.screenToWorld(e.clientX, e.clientY);\n\n      // Notify about cursor movement\n      if (this.onCursorMoved) {\n        this.onCursorMoved(worldPos.x, worldPos.y);\n      }\n\n      // Handle preview shape drawing\n      if (drawStart && previewShape) {\n        const width = worldPos.x - drawStart.x;\n        const height = worldPos.y - drawStart.y;\n\n        previewShape.clear();\n        previewShape.beginFill(this.currentColor);\n\n        if (this.currentTool === 'rectangle') {\n          previewShape.drawRect(drawStart.x, drawStart.y, width, height);\n        } else if (this.currentTool === 'circle') {\n          const radius = Math.sqrt(width * width + height * height);\n          previewShape.drawCircle(drawStart.x, drawStart.y, radius);\n        }\n\n        previewShape.endFill();\n      }\n    });\n\n    canvas.addEventListener('mousedown', (e) => {\n      if (e.button !== 0 || e.altKey) return; // Left click only, not panning\n      \n      const worldPos = this.screenToWorld(e.clientX, e.clientY);\n      \n      if (this.currentTool === 'rectangle' || this.currentTool === 'circle') {\n        drawStart = worldPos;\n        \n        // Create preview shape\n        previewShape = new PIXI.Graphics();\n        previewShape.alpha = 0.5;\n        this.viewport.addChild(previewShape);\n      }\n    });\n\n    canvas.addEventListener('mouseup', (e) => {\n      if (drawStart && previewShape) {\n        const worldPos = this.screenToWorld(e.clientX, e.clientY);\n        \n        // Create actual object\n        const objData = this.createToolObject(drawStart, worldPos);\n        \n        // Clean up preview\n        this.viewport.removeChild(previewShape);\n        previewShape = null;\n        drawStart = null;\n        \n        // Notify about new object (callback to WebSocket)\n        if (this.onObjectCreated) {\n          this.onObjectCreated(objData);\n        }\n      }\n    });\n  }\n\n  // ==================== Viewport Culling ====================\n\n  setupViewportCulling() {\n    // Listen for viewport changes (pan and zoom)\n    this.app.ticker.add(() => {\n      if (this.cullingEnabled) {\n        this.updateVisibleObjects();\n      }\n    });\n  }\n\n  updateVisibleObjects() {\n    // Calculate current viewport bounds in world coordinates\n    const viewportBounds = this.getViewportBounds();\n\n    // Check if viewport has changed significantly\n    if (!this.lastViewportBounds ||\n        Math.abs(viewportBounds.left - this.lastViewportBounds.left) > 50 ||\n        Math.abs(viewportBounds.top - this.lastViewportBounds.top) > 50 ||\n        Math.abs(viewportBounds.right - this.lastViewportBounds.right) > 50 ||\n        Math.abs(viewportBounds.bottom - this.lastViewportBounds.bottom) > 50) {\n\n      this.lastViewportBounds = viewportBounds;\n\n      // Update visibility for all objects\n      this.objects.forEach((obj, id) => {\n        const objBounds = this.getObjectBounds(obj);\n        const isVisible = this.isBoundsVisible(objBounds, viewportBounds);\n\n        // Only change visibility if it actually changed to avoid unnecessary operations\n        if (obj.visible !== isVisible) {\n          obj.visible = isVisible;\n        }\n      });\n    }\n  }\n\n  getViewportBounds() {\n    // Get screen dimensions\n    const screenWidth = this.app.renderer.width;\n    const screenHeight = this.app.renderer.height;\n\n    // Convert screen corners to world coordinates\n    const topLeft = this.screenToWorld(0, 0);\n    const bottomRight = this.screenToWorld(screenWidth, screenHeight);\n\n    return {\n      left: topLeft.x - this.cullingPadding,\n      top: topLeft.y - this.cullingPadding,\n      right: bottomRight.x + this.cullingPadding,\n      bottom: bottomRight.y + this.cullingPadding\n    };\n  }\n\n  getObjectBounds(obj) {\n    // Calculate object bounds based on type\n    if (obj.userData) {\n      if (obj.userData.type === 'rectangle') {\n        return {\n          left: obj.x,\n          top: obj.y,\n          right: obj.x + obj.userData.width,\n          bottom: obj.y + obj.userData.height\n        };\n      } else if (obj.userData.type === 'circle') {\n        const radius = obj.userData.radius;\n        return {\n          left: obj.x - radius,\n          top: obj.y - radius,\n          right: obj.x + radius,\n          bottom: obj.y + radius\n        };\n      }\n    }\n\n    // Fallback for objects without userData (like text)\n    if (obj.width && obj.height) {\n      return {\n        left: obj.x,\n        top: obj.y,\n        right: obj.x + obj.width,\n        bottom: obj.y + obj.height\n      };\n    }\n\n    // Last resort - treat as point\n    return {\n      left: obj.x,\n      top: obj.y,\n      right: obj.x,\n      bottom: obj.y\n    };\n  }\n\n  isBoundsVisible(objBounds, viewportBounds) {\n    // Check if object bounds intersect with viewport bounds\n    return !(objBounds.right < viewportBounds.left ||\n             objBounds.left > viewportBounds.right ||\n             objBounds.bottom < viewportBounds.top ||\n             objBounds.top > viewportBounds.bottom);\n  }\n\n  createToolObject(start, end) {\n    const id = this.generateId();\n    \n    if (this.currentTool === 'rectangle') {\n      const width = Math.abs(end.x - start.x);\n      const height = Math.abs(end.y - start.y);\n      const x = Math.min(start.x, end.x);\n      const y = Math.min(start.y, end.y);\n      \n      this.createRectangle(id, x, y, width, height, this.currentColor);\n      \n      return {\n        id,\n        type: 'rectangle',\n        x, y, width, height,\n        color: this.currentColor\n      };\n    } else if (this.currentTool === 'circle') {\n      const dx = end.x - start.x;\n      const dy = end.y - start.y;\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      \n      this.createCircle(id, start.x, start.y, radius, this.currentColor);\n      \n      return {\n        id,\n        type: 'circle',\n        x: start.x,\n        y: start.y,\n        radius,\n        color: this.currentColor\n      };\n    }\n  }\n  \n  // ==================== Object Creation ====================\n  \n  createRectangle(id, x, y, width, height, color) {\n    const rect = new PIXI.Graphics();\n    rect.beginFill(color);\n    rect.drawRect(0, 0, width, height);\n    rect.endFill();\n    rect.x = x;\n    rect.y = y;\n    rect.interactive = true;\n    rect.buttonMode = true;\n    rect.visible = true; // Start visible, culling will handle visibility\n\n    // Store dimensions for selection box\n    rect.userData = { width, height, type: 'rectangle' };\n\n    this.makeDraggable(rect, id);\n    this.makeSelectable(rect, id);\n\n    this.objects.set(id, rect);\n    this.viewport.addChild(rect);\n\n    return rect;\n  }\n  \n  createCircle(id, x, y, radius, color) {\n    const circle = new PIXI.Graphics();\n    circle.beginFill(color);\n    circle.drawCircle(0, 0, radius);\n    circle.endFill();\n    circle.x = x;\n    circle.y = y;\n    circle.interactive = true;\n    circle.buttonMode = true;\n    circle.visible = true; // Start visible, culling will handle visibility\n\n    // Store dimensions for selection box\n    circle.userData = { radius, type: 'circle' };\n\n    this.makeDraggable(circle, id);\n    this.makeSelectable(circle, id);\n\n    this.objects.set(id, circle);\n    this.viewport.addChild(circle);\n\n    return circle;\n  }\n  \n  createText(id, text, x, y, fontSize, color) {\n    const textObj = new PIXI.Text(text, {\n      fontSize,\n      fill: color,\n      fontFamily: 'Arial'\n    });\n    textObj.x = x;\n    textObj.y = y;\n    textObj.interactive = true;\n    textObj.buttonMode = true;\n    textObj.visible = true; // Start visible, culling will handle visibility\n\n    this.makeDraggable(textObj, id);\n    this.makeSelectable(textObj, id);\n\n    this.objects.set(id, textObj);\n    this.viewport.addChild(textObj);\n\n    return textObj;\n  }\n  \n  // ==================== Interaction ====================\n  \n  makeDraggable(obj, id) {\n    let dragData = null;\n    let dragOffset = { x: 0, y: 0 };\n    let lastDragUpdate = 0;\n    const dragUpdateInterval = 50; // Send updates every 50ms during drag (~20 FPS)\n\n    obj.on('pointerdown', (event) => {\n      if (this.currentTool !== 'select') return;\n\n      dragData = event.data;\n      obj.alpha = 0.7;\n      dragData.dragging = true;\n\n      // Store the offset between cursor and object position\n      const cursorPos = dragData.getLocalPosition(obj.parent);\n      dragOffset.x = cursorPos.x - obj.x;\n      dragOffset.y = cursorPos.y - obj.y;\n\n      event.stopPropagation();\n    });\n\n    obj.on('pointerup', () => {\n      if (dragData && dragData.dragging) {\n        obj.alpha = 1;\n        dragData.dragging = false;\n\n        // Send final position update\n        if (this.onObjectUpdated) {\n          this.onObjectUpdated(id, { x: obj.x, y: obj.y });\n        }\n\n        dragData = null;\n      }\n    });\n\n    obj.on('pointermove', () => {\n      if (dragData && dragData.dragging) {\n        const newPosition = dragData.getLocalPosition(obj.parent);\n        // Apply the offset to maintain cursor position relative to object\n        obj.x = newPosition.x - dragOffset.x;\n        obj.y = newPosition.y - dragOffset.y;\n\n        // Send throttled updates during drag for real-time visualization\n        const now = performance.now();\n        if (now - lastDragUpdate >= dragUpdateInterval) {\n          if (this.onObjectUpdated) {\n            this.onObjectUpdated(id, { x: obj.x, y: obj.y });\n          }\n          lastDragUpdate = now;\n        }\n      }\n    });\n  }\n  \n  makeSelectable(obj, id) {\n    obj.on('click', (event) => {\n      if (this.currentTool === 'select') {\n        if (event.data.originalEvent.shiftKey) {\n          // Multi-select\n          if (this.selectedObjects.has(id)) {\n            this.deselectObject(id);\n          } else {\n            this.selectObject(id);\n          }\n        } else {\n          // Single select\n          this.clearSelection();\n          this.selectObject(id);\n        }\n        event.stopPropagation();\n      }\n    });\n  }\n  \n  selectObject(id) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    this.selectedObjects.add(id);\n\n    // Remove existing selection indicator if any\n    const existingIndicator = this.selectionIndicators.get(id);\n    if (existingIndicator) {\n      this.viewport.removeChild(existingIndicator);\n      existingIndicator.destroy();\n    }\n\n    // Create selection indicator\n    const indicator = new PIXI.Graphics();\n    indicator.lineStyle(2, 0x00FF00);\n\n    if (obj.userData) {\n      if (obj.userData.type === 'rectangle') {\n        // Draw selection box around rectangle\n        const { width, height } = obj.userData;\n        indicator.drawRect(-2, -2, width + 4, height + 4);\n        indicator.x = obj.x;\n        indicator.y = obj.y;\n      } else if (obj.userData.type === 'circle') {\n        // Draw selection box around circle\n        const { radius } = obj.userData;\n        indicator.drawCircle(0, 0, radius + 2);\n        indicator.x = obj.x;\n        indicator.y = obj.y;\n      }\n    }\n\n    // Add to viewport and store reference\n    this.viewport.addChild(indicator);\n    this.selectionIndicators.set(id, indicator);\n  }\n\n  deselectObject(id) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    this.selectedObjects.delete(id);\n\n    // Remove selection indicator\n    const indicator = this.selectionIndicators.get(id);\n    if (indicator) {\n      this.viewport.removeChild(indicator);\n      indicator.destroy();\n      this.selectionIndicators.delete(id);\n    }\n  }\n  \n  clearSelection() {\n    this.selectedObjects.forEach(id => this.deselectObject(id));\n    this.selectedObjects.clear();\n  }\n  \n  deleteSelected() {\n    if (this.selectedObjects.size === 0) {\n      return;\n    }\n\n    const idsToDelete = Array.from(this.selectedObjects);\n\n    // Use bulk deletion for better performance\n    const deletedIds = this.deleteObjects(idsToDelete);\n\n    // Clear selection\n    this.selectedObjects.clear();\n\n    // Notify about bulk deletion\n    if (this.onObjectsDeleted && deletedIds.length > 0) {\n      this.onObjectsDeleted(deletedIds);\n    }\n\n    console.log(`Deleted ${deletedIds.length} selected objects`);\n  }\n  \n  // ==================== Object Management ====================\n\n  loadState(canvasState) {\n    console.error('========================================');\n    console.error('=== LOAD STATE CALLED ===');\n    console.error('========================================');\n    console.error('Canvas state received:', canvasState);\n    console.error('Canvas state type:', typeof canvasState);\n    console.error('Is array?', Array.isArray(canvasState));\n\n    // Clear existing objects\n    console.error('Clearing existing objects...');\n    this.objects.forEach((obj, id) => {\n      this.deleteObject(id);\n    });\n    console.error('Objects cleared. Map size:', this.objects.size);\n\n    // Load objects from state\n    if (canvasState && typeof canvasState === 'object') {\n      // If it's an array, iterate through it\n      if (Array.isArray(canvasState)) {\n        console.error(`=== Loading ${canvasState.length} objects from ARRAY ===`);\n        canvasState.forEach((objData, index) => {\n          console.error(`Loading object ${index}:`, JSON.stringify(objData));\n          this.createRemoteObject(objData);\n        });\n      } else {\n        // If it's an object/hash, iterate through its values\n        const values = Object.values(canvasState);\n        console.error(`=== Loading ${values.length} objects from OBJECT ===`);\n        values.forEach((objData, index) => {\n          console.error(`Loading object ${index}:`, JSON.stringify(objData));\n          this.createRemoteObject(objData);\n        });\n      }\n    } else {\n      console.error('!!! INVALID canvas state !!!:', canvasState);\n    }\n\n    console.error('========================================');\n    console.error(`=== LOAD STATE COMPLETE: ${this.objects.size} objects ===`);\n    console.error('Current objects in map:', Array.from(this.objects.keys()));\n    console.error('========================================');\n\n    // Trigger viewport culling after loading objects\n    if (this.cullingEnabled) {\n      this.updateVisibleObjects();\n    }\n  }\n\n  applyDelta(id, delta) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    // Apply all properties from delta\n    for (const [key, value] of Object.entries(delta)) {\n      obj[key] = value;\n    }\n\n    // Handle special cases for Graphics objects\n    if (obj instanceof PIXI.Graphics) {\n      if (delta.width !== undefined || delta.height !== undefined ||\n          delta.color !== undefined || delta.rotation !== undefined) {\n        // Trigger redraw for visual properties\n        this.redrawGraphicsObject(obj);\n      }\n    }\n  }\n\n  redrawGraphicsObject(obj) {\n    // Clear and redraw the graphics object based on its current properties\n    obj.clear();\n\n    // Basic rectangle drawing - you might want to extend this for other shapes\n    if (obj.width && obj.height) {\n      obj.beginFill(obj.color || 0xFF0000);\n      obj.drawRect(0, 0, obj.width, obj.height);\n      obj.endFill();\n    }\n\n    // Apply rotation if set\n    if (obj.rotation) {\n      obj.rotation = obj.rotation;\n    }\n  }\n\n  updateObject(id, updates) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    if (updates.x !== undefined) obj.x = updates.x;\n    if (updates.y !== undefined) obj.y = updates.y;\n\n    // For Graphics objects, need to redraw if dimensions change\n    if (obj instanceof PIXI.Graphics) {\n      if (updates.width !== undefined || updates.height !== undefined) {\n        // Recreate the shape - this is simplistic, you might want a better approach\n        console.log('Dimension updates for Graphics require recreation');\n      }\n    }\n  }\n\n  deleteObject(id) {\n    const obj = this.objects.get(id);\n    if (obj) {\n      this.viewport.removeChild(obj);\n      this.objects.delete(id);\n\n      // Destroy object but preserve shared textures\n      obj.destroy({ children: true, texture: false, baseTexture: false });\n\n      // Clean up selection indicator if it exists\n      const indicator = this.selectionIndicators.get(id);\n      if (indicator) {\n        this.viewport.removeChild(indicator);\n        indicator.destroy({ children: true, texture: false, baseTexture: false });\n        this.selectionIndicators.delete(id);\n      }\n\n      // Remove from selected objects set\n      this.selectedObjects.delete(id);\n\n      console.log(`Deleted object ${id} with proper texture preservation`);\n    }\n  }\n\n  deleteObjects(ids) {\n    if (!Array.isArray(ids) || ids.length === 0) {\n      console.warn('deleteObjects: Expected non-empty array of IDs');\n      return;\n    }\n\n    console.log(`Bulk deleting ${ids.length} objects:`, ids);\n\n    // Collect objects to delete for broadcasting\n    const deletedObjects = [];\n\n    // Delete each object\n    ids.forEach(id => {\n      const obj = this.objects.get(id);\n      if (obj) {\n        this.viewport.removeChild(obj);\n        this.objects.delete(id);\n\n        // Destroy object but preserve shared textures\n        obj.destroy({ children: true, texture: false, baseTexture: false });\n\n        // Clean up selection indicator if it exists\n        const indicator = this.selectionIndicators.get(id);\n        if (indicator) {\n          this.viewport.removeChild(indicator);\n          indicator.destroy({ children: true, texture: false, baseTexture: false });\n          this.selectionIndicators.delete(id);\n        }\n\n        // Remove from selected objects set\n        this.selectedObjects.delete(id);\n\n        deletedObjects.push(id);\n      } else {\n        console.warn(`Object ${id} not found for deletion`);\n      }\n    });\n\n    console.log(`Bulk deleted ${deletedObjects.length} objects successfully`);\n\n    // Return deleted IDs for broadcasting\n    return deletedObjects;\n  }\n\n  verifyObjectDeletion(ids) {\n    if (!Array.isArray(ids)) {\n      ids = [ids];\n    }\n\n    let allClean = true;\n    const issues = [];\n\n    ids.forEach(id => {\n      // Check if object still exists in maps\n      if (this.objects.has(id)) {\n        issues.push(`Object ${id} still in objects map`);\n        allClean = false;\n      }\n\n      if (this.selectionIndicators.has(id)) {\n        issues.push(`Selection indicator for ${id} still exists`);\n        allClean = false;\n      }\n\n      if (this.selectedObjects.has(id)) {\n        issues.push(`Object ${id} still in selectedObjects set`);\n        allClean = false;\n      }\n\n      // Check if PIXI object still has parent (indicating it's still in scene)\n      const obj = this.viewport.children.find(child => child._objectId === id);\n      if (obj) {\n        issues.push(`Object ${id} still in viewport children`);\n        allClean = false;\n      }\n    });\n\n    // Check for orphaned PIXI objects in viewport\n    const orphanedPixiObjects = this.viewport.children.filter(child => {\n      // Look for objects that don't have corresponding entries in our maps\n      return child._objectId && !this.objects.has(child._objectId);\n    });\n\n    if (orphanedPixiObjects.length > 0) {\n      issues.push(`${orphanedPixiObjects.length} orphaned PIXI objects found in viewport`);\n      allClean = false;\n    }\n\n    // Check texture memory (basic check)\n    const textureCount = Object.keys(PIXI.utils.TextureCache).length;\n    if (textureCount > 100) { // Arbitrary threshold\n      issues.push(`High texture count detected: ${textureCount} textures in cache`);\n    }\n\n    if (!allClean) {\n      console.warn('Memory leak verification failed:', issues);\n    } else {\n      console.log(`Memory leak verification passed for ${ids.length} deleted objects`);\n    }\n\n    return {\n      success: allClean,\n      issues: issues,\n      textureCount: textureCount,\n      orphanedObjects: orphanedPixiObjects.length\n    };\n  }\n\n  getMemoryStats() {\n    const pixiChildren = this.viewport.children.length;\n    const objectsInMap = this.objects.size;\n    const selectionIndicators = this.selectionIndicators.size;\n    const selectedObjects = this.selectedObjects.size;\n    const remoteCursors = this.remoteCursors.size;\n\n    return {\n      pixiChildren,\n      objectsInMap,\n      selectionIndicators,\n      selectedObjects,\n      remoteCursors,\n      totalTrackedObjects: objectsInMap + selectionIndicators + selectedObjects + remoteCursors,\n      textureCacheSize: Object.keys(PIXI.utils.TextureCache).length,\n      baseTextureCacheSize: Object.keys(PIXI.utils.BaseTextureCache).length\n    };\n  }\n\n  // ==================== Remote Object Sync ====================\n\n  createRemoteObject(objData) {\n    console.log('Creating remote object:', objData);\n    console.log('Object properties:', {\n      id: objData.id,\n      type: objData.type,\n      x: objData.x,\n      y: objData.y,\n      width: objData.width,\n      height: objData.height,\n      radius: objData.radius,\n      color: objData.color,\n      colorType: typeof objData.color\n    });\n\n    // Convert color to proper format (ensure it's a number)\n    const color = this.normalizeColor(objData.color);\n    console.log('Normalized color:', color, 'type:', typeof color);\n\n    // Infer type from data if missing (backwards compatibility)\n    let type = objData.type;\n    if (!type) {\n      console.warn('Object missing type field, inferring from properties:', objData);\n      if (objData.radius !== undefined) {\n        type = 'circle';\n      } else if (objData.width !== undefined && objData.height !== undefined) {\n        type = 'rectangle';\n      } else if (objData.text !== undefined) {\n        type = 'text';\n      } else {\n        console.error('Cannot infer type for object:', objData);\n        return;\n      }\n    }\n\n    if (type === 'rectangle') {\n      // Validate dimensions\n      if (!objData.width || !objData.height || objData.width <= 0 || objData.height <= 0) {\n        console.warn('Skipping rectangle with invalid dimensions:', objData);\n        return;\n      }\n\n      console.log('Creating rectangle with:', {\n        id: objData.id,\n        x: objData.x,\n        y: objData.y,\n        width: objData.width,\n        height: objData.height,\n        color: color\n      });\n      this.createRectangle(\n        objData.id,\n        objData.x,\n        objData.y,\n        objData.width,\n        objData.height,\n        color\n      );\n      console.log('Rectangle created successfully. Objects in map:', this.objects.size);\n    } else if (type === 'circle') {\n      console.log('Creating circle with:', {\n        id: objData.id,\n        x: objData.x,\n        y: objData.y,\n        radius: objData.radius,\n        color: color\n      });\n      this.createCircle(\n        objData.id,\n        objData.x,\n        objData.y,\n        objData.radius,\n        color\n      );\n      console.log('Circle created successfully');\n    } else if (type === 'text') {\n      console.log('Creating text with:', {\n        id: objData.id,\n        text: objData.text,\n        x: objData.x,\n        y: objData.y,\n        fontSize: objData.fontSize,\n        color: color\n      });\n      this.createText(\n        objData.id,\n        objData.text,\n        objData.x,\n        objData.y,\n        objData.fontSize,\n        color\n      );\n      console.log('Text created successfully');\n    } else {\n      console.error('Unknown object type:', type);\n    }\n  }\n\n  normalizeColor(color) {\n    // If it's already a number (0xRRGGBB format), return it\n    if (typeof color === 'number') {\n      return color;\n    }\n\n    // If it's a hex string like \"#3498db\", convert to number\n    if (typeof color === 'string') {\n      if (color.startsWith('#')) {\n        return parseInt(color.substring(1), 16);\n      }\n      // If it's a string number like \"3498db\", convert to number\n      return parseInt(color, 16);\n    }\n\n    // Default color if something goes wrong\n    return 0x3498db;\n  }\n\n  updateRemoteObject(objectId, delta) {\n    console.log('Updating remote object with delta:', objectId, delta);\n    this.applyDelta(objectId, delta);\n  }\n\n  deleteRemoteObject(objectId) {\n    console.log('Deleting remote object:', objectId);\n    this.deleteObject(objectId);\n  }\n  \n  getObject(id) {\n    return this.objects.get(id);\n  }\n  \n  getAllObjects() {\n    return Array.from(this.objects.entries()).map(([id, obj]) => ({\n      id,\n      type: obj.constructor.name,\n      x: obj.x,\n      y: obj.y\n    }));\n  }\n\n  getPerformanceStats() {\n    return this.performanceMonitor.getStats();\n  }\n  \n  // ==================== Remote Cursors ====================\n  \n  updateRemoteCursor(userId, username, x, y, color) {\n    let cursor = this.remoteCursors.get(userId);\n\n    // Convert color string (like \"#FF6B6B\") to number\n    const colorNum = color && typeof color === 'string' && color.startsWith('#')\n      ? parseInt(color.substring(1), 16)\n      : 0xFF6B6B;\n\n    if (!cursor) {\n      // Create new cursor\n      cursor = new PIXI.Container();\n\n      // Cursor pointer using shared texture and sprite\n      const pointer = new PIXI.Sprite(this.cursorTexture);\n      pointer.tint = colorNum; // Apply color using tint instead of recreating graphics\n\n      // Username label\n      const label = new PIXI.Text(username, {\n        fontSize: 12,\n        fill: 0xFFFFFF,\n        fontWeight: 'bold',\n        stroke: colorNum,\n        strokeThickness: 2,\n        dropShadow: true,\n        dropShadowColor: 0x000000,\n        dropShadowAlpha: 0.7,\n        dropShadowDistance: 1\n      });\n      label.x = 15;\n      label.y = -5; // Position above cursor tip\n\n      cursor.addChild(pointer);\n      cursor.addChild(label);\n      cursor.zIndex = 1000;\n\n      this.remoteCursors.set(userId, cursor);\n      this.viewport.addChild(cursor);\n    }\n\n    // Add interpolation for smooth rendering despite batching/throttling\n    if (!cursor.lastUpdate) {\n      cursor.lastUpdate = { x, y, time: performance.now() };\n    }\n\n    const now = performance.now();\n    const dt = now - cursor.lastUpdate.time;\n\n    if (dt > 0 && dt < 100) { // Interpolate over last 100ms for smoothness\n      const lerpFactor = Math.min(dt / 100, 1);\n      cursor.x = cursor.lastUpdate.x + (x - cursor.lastUpdate.x) * lerpFactor;\n      cursor.y = cursor.lastUpdate.y + (y - cursor.lastUpdate.y) * lerpFactor;\n    } else {\n      // Large time gap or first update - jump to position\n      cursor.x = x;\n      cursor.y = y;\n    }\n\n    cursor.lastUpdate = { x, y, time: now };\n  }\n\n  removeRemoteCursor(userId) {\n    const cursor = this.remoteCursors.get(userId);\n    if (cursor) {\n      this.viewport.removeChild(cursor);\n      cursor.destroy();\n      this.remoteCursors.delete(userId);\n    }\n  }\n\n  clearAllRemoteCursors() {\n    console.log(`Clearing all remote cursors (${this.remoteCursors.size} cursors)`)\n    this.remoteCursors.forEach((cursor, userId) => {\n      this.viewport.removeChild(cursor)\n      cursor.destroy()\n    })\n    this.remoteCursors.clear()\n    console.log('All remote cursors cleared')\n  }\n\n  startPeriodicCleanup(intervalMs = 60000) {\n    // Run cleanup every minute to catch any orphaned objects\n    this.cleanupInterval = setInterval(() => {\n      this.performCleanup()\n    }, intervalMs)\n    console.log(`Started periodic cleanup (every ${intervalMs / 1000}s)`)\n  }\n\n  stopPeriodicCleanup() {\n    if (this.cleanupInterval) {\n      clearInterval(this.cleanupInterval)\n      this.cleanupInterval = null\n      console.log('Stopped periodic cleanup')\n    }\n  }\n\n  performCleanup() {\n    console.log('=== Performing periodic cleanup ===')\n    let orphanedIndicators = 0\n    let orphanedCursors = 0\n\n    // Clean up selection indicators for deleted objects\n    this.selectionIndicators.forEach((indicator, id) => {\n      if (!this.objects.has(id)) {\n        this.viewport.removeChild(indicator)\n        indicator.destroy()\n        this.selectionIndicators.delete(id)\n        orphanedIndicators++\n      }\n    })\n\n    // Clean up selected objects that no longer exist\n    this.selectedObjects.forEach(id => {\n      if (!this.objects.has(id)) {\n        this.selectedObjects.delete(id)\n      }\n    })\n\n    // Clean up remote cursors that haven't updated in a while (>5 minutes)\n    const fiveMinutesAgo = performance.now() - (5 * 60 * 1000)\n    this.remoteCursors.forEach((cursor, userId) => {\n      if (cursor.lastUpdate && cursor.lastUpdate.time < fiveMinutesAgo) {\n        this.removeRemoteCursor(userId)\n        orphanedCursors++\n      }\n    })\n\n    if (orphanedIndicators > 0 || orphanedCursors > 0) {\n      console.log(`Cleanup complete: ${orphanedIndicators} indicators, ${orphanedCursors} cursors removed`)\n    } else {\n      console.log('Cleanup complete: No orphaned objects found')\n    }\n  }\n\n  // ==================== Utilities ====================\n  \n  generateId() {\n    return 'obj-' + Math.random().toString(36).substr(2, 9);\n  }\n  \n  setColor(color) {\n    this.currentColor = color;\n  }\n  \n  getCanvasState() {\n    const objects = [];\n    this.objects.forEach((obj, id) => {\n      // Serialize object data\n      objects.push({\n        id,\n        type: obj.constructor.name,\n        x: obj.x,\n        y: obj.y,\n        // Add more properties as needed\n      });\n    });\n    return { objects };\n  }\n\n  destroy() {\n    // Clean up performance monitor\n    if (this.performanceMonitor) {\n      this.performanceMonitor.destroy();\n    }\n\n    // Clean up shared cursor texture\n    if (this.cursorTexture) {\n      this.cursorTexture.destroy();\n    }\n\n    // Clean up PIXI objects\n    this.objects.forEach(obj => {\n      if (obj && typeof obj.destroy === 'function') {\n        obj.destroy();\n      }\n    });\n    this.objects.clear();\n\n    this.selectionIndicators.forEach(indicator => {\n      if (indicator && typeof indicator.destroy === 'function') {\n        indicator.destroy();\n      }\n    });\n    this.selectionIndicators.clear();\n\n    this.remoteCursors.forEach(cursor => {\n      if (cursor && typeof cursor.destroy === 'function') {\n        cursor.destroy();\n      }\n    });\n    this.remoteCursors.clear();\n  }\n  \n  // Callbacks - set these from outside\n  onObjectCreated = null;\n  onObjectMoved = null;\n  onObjectDeleted = null;\n  onCursorMoved = null;\n}\n","// websocket.js - WebSocket client for real-time synchronization\n\nexport class LatencyMonitor {\n    constructor(options = {}) {\n        this.maxHistorySize = options.maxHistorySize || 1000\n        this.warningThreshold = options.warningThreshold || 100 // 100ms\n        this.pendingMessages = new Map() // messageId -> { sentTime, type }\n        this.latencyHistory = [] // Array of latency measurements\n        this.stats = {\n            totalMessages: 0,\n            averageLatency: 0,\n            minLatency: Infinity,\n            maxLatency: 0,\n            warningCount: 0\n        }\n    }\n\n    startTracking(messageId, messageType) {\n        this.pendingMessages.set(messageId, {\n            sentTime: performance.now(),\n            type: messageType\n        })\n    }\n\n    endTracking(messageId) {\n        const pending = this.pendingMessages.get(messageId)\n        if (!pending) {\n            return null // Message not found or already tracked\n        }\n\n        const latency = performance.now() - pending.sentTime\n        this.pendingMessages.delete(messageId)\n\n        // Record latency\n        this.recordLatency(latency, pending.type)\n\n        // Warn if high latency\n        if (latency > this.warningThreshold) {\n            console.warn(`⚠️ High latency detected: ${Math.round(latency)}ms for ${pending.type} message`)\n            this.stats.warningCount++\n        }\n\n        return latency\n    }\n\n    recordLatency(latency, messageType) {\n        // Add to history\n        this.latencyHistory.push({\n            latency,\n            type: messageType,\n            timestamp: Date.now()\n        })\n\n        // Trim history if too large\n        if (this.latencyHistory.length > this.maxHistorySize) {\n            this.latencyHistory.shift()\n        }\n\n        // Update stats\n        this.stats.totalMessages++\n        this.stats.minLatency = Math.min(this.stats.minLatency, latency)\n        this.stats.maxLatency = Math.max(this.stats.maxLatency, latency)\n\n        // Recalculate average\n        const sum = this.latencyHistory.reduce((acc, item) => acc + item.latency, 0)\n        this.stats.averageLatency = sum / this.latencyHistory.length\n    }\n\n    getPercentile(percentile) {\n        if (this.latencyHistory.length === 0) {\n            return 0\n        }\n\n        // Sort latencies\n        const sorted = this.latencyHistory\n            .map(item => item.latency)\n            .sort((a, b) => a - b)\n\n        // Calculate percentile index\n        const index = Math.ceil((percentile / 100) * sorted.length) - 1\n        return sorted[Math.max(0, index)]\n    }\n\n    getStats() {\n        return {\n            totalMessages: this.stats.totalMessages,\n            averageLatency: Math.round(this.stats.averageLatency * 100) / 100,\n            minLatency: this.stats.minLatency === Infinity ? 0 : Math.round(this.stats.minLatency * 100) / 100,\n            maxLatency: Math.round(this.stats.maxLatency * 100) / 100,\n            p50: Math.round(this.getPercentile(50) * 100) / 100,\n            p95: Math.round(this.getPercentile(95) * 100) / 100,\n            p99: Math.round(this.getPercentile(99) * 100) / 100,\n            warningCount: this.stats.warningCount,\n            historySize: this.latencyHistory.length,\n            pendingMessages: this.pendingMessages.size\n        }\n    }\n\n    getStatsByType(messageType) {\n        const filtered = this.latencyHistory.filter(item => item.type === messageType)\n        if (filtered.length === 0) {\n            return null\n        }\n\n        const latencies = filtered.map(item => item.latency).sort((a, b) => a - b)\n        const sum = latencies.reduce((acc, val) => acc + val, 0)\n\n        const getPercentile = (p) => {\n            const index = Math.ceil((p / 100) * latencies.length) - 1\n            return latencies[Math.max(0, index)]\n        }\n\n        return {\n            messageType,\n            count: filtered.length,\n            averageLatency: Math.round((sum / filtered.length) * 100) / 100,\n            minLatency: Math.round(latencies[0] * 100) / 100,\n            maxLatency: Math.round(latencies[latencies.length - 1] * 100) / 100,\n            p50: Math.round(getPercentile(50) * 100) / 100,\n            p95: Math.round(getPercentile(95) * 100) / 100,\n            p99: Math.round(getPercentile(99) * 100) / 100\n        }\n    }\n\n    logStats() {\n        const stats = this.getStats()\n        console.log('=== Latency Statistics ===')\n        console.log(`Total messages: ${stats.totalMessages}`)\n        console.log(`Average latency: ${stats.averageLatency}ms`)\n        console.log(`Min latency: ${stats.minLatency}ms`)\n        console.log(`Max latency: ${stats.maxLatency}ms`)\n        console.log(`P50 (median): ${stats.p50}ms`)\n        console.log(`P95: ${stats.p95}ms`)\n        console.log(`P99: ${stats.p99}ms`)\n        console.log(`High latency warnings: ${stats.warningCount}`)\n        console.log(`History size: ${stats.historySize}`)\n        console.log(`Pending messages: ${stats.pendingMessages}`)\n    }\n\n    reset() {\n        this.pendingMessages.clear()\n        this.latencyHistory = []\n        this.stats = {\n            totalMessages: 0,\n            averageLatency: 0,\n            minLatency: Infinity,\n            maxLatency: 0,\n            warningCount: 0\n        }\n    }\n}\n\nexport class CursorThrottle {\n    constructor(sendCallback, intervalMs = 50) { // 20/sec = 50ms\n        this.sendCallback = sendCallback\n        this.intervalMs = intervalMs\n        this.pendingCursor = null\n        this.intervalId = null\n        this.start()\n    }\n\n    start() {\n        this.intervalId = setInterval(() => {\n            if (this.pendingCursor) {\n                this.sendCallback(this.pendingCursor.x, this.pendingCursor.y)\n                this.pendingCursor = null\n            }\n        }, this.intervalMs)\n    }\n\n    update(x, y) {\n        this.pendingCursor = { x, y } // Always update to latest\n    }\n\n    stop() {\n        if (this.intervalId) {\n            clearInterval(this.intervalId)\n            this.intervalId = null\n        }\n    }\n}\n\nexport class WebSocketClient {\n    constructor(url, sessionId, canvasId) {\n        this.url = url\n        this.sessionId = sessionId\n        this.canvasId = canvasId\n        this.ws = null\n        this.isConnected = false\n        this.reconnectAttempts = 0\n        this.maxReconnectAttempts = 5\n        this.reconnectDelay = 1000\n\n        // Message ID counter for latency tracking\n        this.messageIdCounter = 0\n\n        // Latency monitoring\n        this.latencyMonitor = new LatencyMonitor({\n            maxHistorySize: 1000,\n            warningThreshold: 100 // 100ms\n        })\n\n        // Bandwidth tracking for delta compression testing\n        this.bandwidthStats = {\n            totalBytesReceived: 0,\n            objectUpdateMessages: 0,\n            startTime: Date.now()\n        }\n\n        // Cursor throttling using CursorThrottle class\n        this.cursorThrottle = new CursorThrottle((x, y) => {\n            this.send({ type: 'cursor', x, y })\n        })\n\n        // Callbacks\n        this.onAuthSuccess = () => {}\n        this.onAuthFailed = () => {}\n        this.onUserConnected = () => {}\n        this.onUserDisconnected = () => {}\n        this.onPresenceUpdate = () => {}\n        this.onCursorUpdate = () => {}\n        this.onObjectCreated = () => {}\n        this.onObjectUpdated = () => {}\n        this.onObjectDeleted = () => {}\n        this.onObjectsDeleted = () => {}\n        this.onError = () => {}\n        this.onReconnecting = () => {}\n        this.onReconnected = () => {}\n    }\n\n    connect() {\n        console.log(`Connecting to WebSocket: ${this.url}`)\n\n        try {\n            this.ws = new WebSocket(this.url)\n            this.setupEventHandlers()\n        } catch (error) {\n            console.error('WebSocket connection error:', error)\n            this.onError(error)\n            this.scheduleReconnect()\n        }\n    }\n\n    setupEventHandlers() {\n        this.ws.onopen = () => {\n            console.log('WebSocket connected')\n            this.isConnected = true\n            this.reconnectAttempts = 0\n\n            // Send authentication message\n            this.send({\n                type: 'auth',\n                sessionId: this.sessionId,\n                canvasId: this.canvasId\n            })\n\n            if (this.reconnectAttempts > 0) {\n                this.onReconnected()\n            }\n        }\n\n        this.ws.onmessage = (event) => {\n            try {\n                const data = JSON.parse(event.data)\n                this.handleMessage(data)\n            } catch (error) {\n                console.error('Error parsing WebSocket message:', error)\n                this.onError(error)\n            }\n        }\n\n        this.ws.onclose = (event) => {\n            console.log('WebSocket disconnected:', event.code, event.reason)\n            this.isConnected = false\n\n            if (!event.wasClean) {\n                this.scheduleReconnect()\n            }\n        }\n\n        this.ws.onerror = (error) => {\n            console.error('WebSocket error:', error)\n            this.onError(error)\n        }\n    }\n\n    handleMessage(data) {\n        // Track latency if message has an ID (response to our request)\n        if (data.messageId) {\n            const latency = this.latencyMonitor.endTracking(data.messageId)\n            if (latency !== null && latency < 100) {\n                // Only log sub-100ms latencies at debug level\n                console.debug(`Message ${data.type} latency: ${Math.round(latency)}ms`)\n            }\n        }\n\n        switch (data.type) {\n            case 'auth-success':\n                this.onAuthSuccess(data)\n                break\n\n            case 'auth-failed':\n                this.onAuthFailed(data)\n                break\n\n            case 'user-connected':\n                this.onUserConnected(data)\n                break\n\n            case 'user-disconnected':\n                this.onUserDisconnected(data)\n                break\n\n            case 'presence':\n                this.onPresenceUpdate(data.users)\n                break\n\n            case 'cursor':\n                this.onCursorUpdate(data)\n                break\n\n            case 'cursor-batch':\n                // Handle batched cursor updates\n                if (data.cursors && Array.isArray(data.cursors)) {\n                    data.cursors.forEach(cursor => {\n                        this.onCursorUpdate(cursor)\n                    })\n                }\n                break\n\n            case 'object-create':\n                this.onObjectCreated(data)\n                break\n\n            case 'object-update':\n                // Track bandwidth for delta compression testing\n                const messageSize = JSON.stringify(data).length\n                this.bandwidthStats.totalBytesReceived += messageSize\n                this.bandwidthStats.objectUpdateMessages++\n                console.log(`Object update received: ${messageSize} bytes (total: ${this.bandwidthStats.totalBytesReceived} bytes, ${this.bandwidthStats.objectUpdateMessages} messages)`)\n                this.onObjectUpdated(data)\n                break\n\n            case 'object-delete':\n                this.onObjectDeleted(data)\n                break\n\n            case 'objects-delete':\n                this.onObjectsDeleted(data)\n                break\n\n            case 'error':\n                console.error('Server error:', data.message)\n                this.onError(new Error(data.message))\n                break\n\n            default:\n                console.warn('Unknown message type:', data.type)\n        }\n    }\n\n    send(data, trackLatency = false) {\n        if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n            // Add message ID for latency tracking if requested\n            if (trackLatency && data.type !== 'cursor') {\n                data.messageId = ++this.messageIdCounter\n                this.latencyMonitor.startTracking(data.messageId, data.type)\n            }\n\n            this.ws.send(JSON.stringify(data))\n        } else {\n            console.warn('WebSocket not connected, message not sent:', data)\n        }\n    }\n\n    sendCursorUpdate(x, y) {\n        this.cursorThrottle.update(x, y)\n    }\n\n    sendObjectCreate(object) {\n        this.send({\n            type: 'object-create',\n            object: object\n        }, true) // Enable latency tracking\n    }\n\n    sendObjectUpdate(objectId, updates) {\n        this.send({\n            type: 'object-update',\n            'object-id': objectId,\n            updates: updates\n        }, true) // Enable latency tracking\n    }\n\n    sendObjectDelete(objectId) {\n        this.send({\n            type: 'object-delete',\n            'object-id': objectId\n        }, true) // Enable latency tracking\n    }\n\n    scheduleReconnect() {\n        if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n            console.error('Max reconnection attempts reached')\n            this.onError(new Error('Unable to reconnect to server'))\n            return\n        }\n\n        this.reconnectAttempts++\n        const delay = this.reconnectDelay * Math.pow(2, this.reconnectAttempts - 1)\n\n        console.log(`Attempting to reconnect in ${delay}ms (attempt ${this.reconnectAttempts}/${this.maxReconnectAttempts})`)\n        this.onReconnecting()\n\n        setTimeout(() => {\n            this.connect()\n        }, delay)\n    }\n\n    getBandwidthStats() {\n        const elapsedMinutes = (Date.now() - this.bandwidthStats.startTime) / (1000 * 60)\n        return {\n            totalBytes: this.bandwidthStats.totalBytesReceived,\n            messageCount: this.bandwidthStats.objectUpdateMessages,\n            averageBytesPerMessage: this.bandwidthStats.objectUpdateMessages > 0\n                ? Math.round(this.bandwidthStats.totalBytesReceived / this.bandwidthStats.objectUpdateMessages)\n                : 0,\n            bytesPerMinute: elapsedMinutes > 0\n                ? Math.round(this.bandwidthStats.totalBytesReceived / elapsedMinutes)\n                : 0,\n            elapsedMinutes: Math.round(elapsedMinutes * 10) / 10\n        }\n    }\n\n    getLatencyStats() {\n        return this.latencyMonitor.getStats()\n    }\n\n    getLatencyStatsByType(messageType) {\n        return this.latencyMonitor.getStatsByType(messageType)\n    }\n\n    logLatencyStats() {\n        this.latencyMonitor.logStats()\n    }\n\n    logBandwidthStats() {\n        const stats = this.getBandwidthStats()\n        console.log('Bandwidth Stats (Delta Compression):', {\n            'Total bytes received': `${stats.totalBytes} bytes`,\n            'Object update messages': stats.messageCount,\n            'Avg bytes per message': `${stats.averageBytesPerMessage} bytes`,\n            'Bytes per minute': `${stats.bytesPerMinute} bytes/min`,\n            'Elapsed time': `${stats.elapsedMinutes} minutes`\n        })\n    }\n\n    disconnect() {\n        // Log final bandwidth stats before disconnecting\n        if (this.bandwidthStats.objectUpdateMessages > 0) {\n            console.log('=== Final Bandwidth Stats (Delta Compression) ===')\n            this.logBandwidthStats()\n        }\n\n        // Stop cursor throttle timer\n        if (this.cursorThrottle) {\n            this.cursorThrottle.stop()\n            console.log('Stopped cursor throttle timer')\n        }\n\n        // Close WebSocket connection\n        if (this.ws) {\n            this.ws.close(1000, 'User disconnect')\n            this.ws = null\n            this.isConnected = false\n        }\n\n        console.log('=== Disconnect cleanup complete ===')\n    }\n\n    sendObjectsDelete(objectIds) {\n        this.send({\n            type: 'objects-delete',\n            'object-ids': objectIds\n        })\n    }\n\n    sendObjectsDelete(objectIds) {\n        this.send({\n            type: 'objects-delete',\n            'object-ids': objectIds\n        })\n    }\n}","// auth.js - Authentication UI and logic for CollabCanvas\n\nexport class AuthManager {\n    constructor() {\n        this.modal = document.getElementById('auth-modal')\n        this.loginForm = document.getElementById('login-form')\n        this.registerForm = document.getElementById('register-form')\n        this.setupEventListeners()\n    }\n\n    setupEventListeners() {\n        // Tab switching\n        document.querySelectorAll('.tab-btn').forEach(btn => {\n            btn.addEventListener('click', () => {\n                const tab = btn.dataset.tab\n                this.switchTab(tab)\n            })\n        })\n\n        // Form submissions\n        this.loginForm.addEventListener('submit', async (e) => {\n            e.preventDefault()\n            await this.handleLogin()\n        })\n\n        this.registerForm.addEventListener('submit', async (e) => {\n            e.preventDefault()\n            await this.handleRegister()\n        })\n    }\n\n    switchTab(tab) {\n        // Update tab buttons\n        document.querySelectorAll('.tab-btn').forEach(btn => {\n            btn.classList.toggle('active', btn.dataset.tab === tab)\n        })\n\n        // Update forms\n        document.querySelectorAll('.auth-form').forEach(form => {\n            form.classList.toggle('active', form.id === `${tab}-form`)\n        })\n\n        // Clear errors\n        document.querySelectorAll('.error-message').forEach(err => {\n            err.textContent = ''\n        })\n    }\n\n    showModal() {\n        return new Promise((resolve) => {\n            this.modal.classList.remove('hidden')\n            this.resolveAuth = resolve\n        })\n    }\n\n    hideModal() {\n        this.modal.classList.add('hidden')\n    }\n\n    async handleLogin() {\n        const email = document.getElementById('login-email').value\n        const password = document.getElementById('login-password').value\n        const errorEl = document.getElementById('login-error')\n\n        try {\n            const response = await fetch('/api/login', {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ email, password })\n            })\n\n            const data = await response.json()\n\n            if (data.success && data.data) {\n                this.hideModal()\n                this.resolveAuth({\n                    sessionId: data.data['session-id'],\n                    userId: data.data['user-id'],\n                    username: data.data.username\n                })\n            } else {\n                errorEl.textContent = data.error || 'Login failed'\n            }\n        } catch (error) {\n            console.error('Login error:', error)\n            errorEl.textContent = 'Connection error. Please try again.'\n        }\n    }\n\n    async handleRegister() {\n        const username = document.getElementById('register-username').value\n        const email = document.getElementById('register-email').value\n        const password = document.getElementById('register-password').value\n        const errorEl = document.getElementById('register-error')\n\n        try {\n            const response = await fetch('/api/register', {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ username, email, password })\n            })\n\n            const data = await response.json()\n\n            if (data.success) {\n                // Auto-login after registration\n                await this.loginAfterRegister(email, password)\n            } else {\n                errorEl.textContent = data.error || 'Registration failed'\n            }\n        } catch (error) {\n            console.error('Registration error:', error)\n            errorEl.textContent = 'Connection error. Please try again.'\n        }\n    }\n\n    async loginAfterRegister(email, password) {\n        // Switch to login tab\n        this.switchTab('login')\n\n        // Fill in credentials\n        document.getElementById('login-email').value = email\n        document.getElementById('login-password').value = password\n\n        // Auto-submit\n        await this.handleLogin()\n    }\n}","// Performance Test for Object Culling\n// This script tests rendering performance with many objects and viewport culling\n\nexport class PerformanceTest {\n  constructor(canvasManager) {\n    this.canvasManager = canvasManager;\n    this.testResults = [];\n    this.isRunning = false;\n  }\n\n  // Generate test objects spread across a large area\n  generateTestObjects(count = 500) {\n    console.log(`Generating ${count} test objects...`);\n\n    const objects = [];\n    const spread = 2000; // Spread objects over 2000x2000 area\n\n    for (let i = 0; i < count; i++) {\n      const x = (Math.random() - 0.5) * spread;\n      const y = (Math.random() - 0.5) * spread;\n      const type = Math.random() > 0.5 ? 'rectangle' : 'circle';\n      const color = Math.floor(Math.random() * 0xFFFFFF);\n\n      let objData;\n      if (type === 'rectangle') {\n        const width = 20 + Math.random() * 80;\n        const height = 20 + Math.random() * 80;\n        objData = {\n          id: `perf-test-${i}`,\n          type: 'rectangle',\n          x, y, width, height, color\n        };\n      } else {\n        const radius = 10 + Math.random() * 40;\n        objData = {\n          id: `perf-test-${i}`,\n          type: 'circle',\n          x, y, radius, color\n        };\n      }\n\n      objects.push(objData);\n    }\n\n    return objects;\n  }\n\n  // Load test objects into canvas\n  loadTestObjects(objects) {\n    console.log(`Loading ${objects.length} test objects into canvas...`);\n\n    // Clear existing objects first\n    this.canvasManager.objects.forEach((obj, id) => {\n      if (id.startsWith('perf-test-')) {\n        this.canvasManager.deleteObject(id);\n      }\n    });\n\n    // Load new objects\n    objects.forEach(objData => {\n      this.canvasManager.createRemoteObject(objData);\n    });\n\n    console.log(`Loaded ${objects.length} test objects. Total objects: ${this.canvasManager.objects.size}`);\n  }\n\n  // FPS monitoring class\n  startFPSMonitoring(duration = 10000) {\n    return new Promise((resolve) => {\n      const fpsHistory = [];\n      let lastTime = performance.now();\n      let frameCount = 0;\n\n      const measureFPS = () => {\n        const now = performance.now();\n        frameCount++;\n\n        if (now - lastTime >= 1000) { // Update every second\n          const fps = Math.round((frameCount * 1000) / (now - lastTime));\n          fpsHistory.push(fps);\n          console.log(`FPS: ${fps}, Visible objects: ${this.getVisibleObjectCount()}`);\n          frameCount = 0;\n          lastTime = now;\n        }\n      };\n\n      // Start monitoring\n      const tickerCallback = () => {\n        measureFPS();\n      };\n\n      this.canvasManager.app.ticker.add(tickerCallback);\n\n      // Stop after duration\n      setTimeout(() => {\n        this.canvasManager.app.ticker.remove(tickerCallback);\n\n        const avgFPS = fpsHistory.reduce((a, b) => a + b, 0) / fpsHistory.length;\n        const minFPS = Math.min(...fpsHistory);\n        const maxFPS = Math.max(...fpsHistory);\n\n        const result = {\n          duration,\n          avgFPS: Math.round(avgFPS),\n          minFPS,\n          maxFPS,\n          fpsHistory,\n          totalObjects: this.canvasManager.objects.size,\n          visibleObjects: this.getVisibleObjectCount()\n        };\n\n        console.log('FPS Test Results:', result);\n        resolve(result);\n      }, duration);\n    });\n  }\n\n  getVisibleObjectCount() {\n    let visible = 0;\n    this.canvasManager.objects.forEach(obj => {\n      if (obj.visible) visible++;\n    });\n    return visible;\n  }\n\n  // Simulate pan operation\n  async simulatePan(panDistance = 1000, steps = 20) {\n    console.log(`Simulating pan operation: ${panDistance}px over ${steps} steps`);\n\n    const startX = this.canvasManager.viewport.x;\n    const startY = this.canvasManager.viewport.y;\n    const stepX = panDistance / steps;\n    const stepY = panDistance / steps;\n\n    for (let i = 0; i < steps; i++) {\n      this.canvasManager.viewport.x = startX + (stepX * i);\n      this.canvasManager.viewport.y = startY + (stepY * i);\n\n      // Wait for next frame\n      await new Promise(resolve => requestAnimationFrame(resolve));\n    }\n\n    console.log('Pan simulation complete');\n  }\n\n  // Simulate zoom operation\n  async simulateZoom(zoomLevels = [0.5, 1.0, 2.0], duration = 2000) {\n    console.log(`Simulating zoom operation through levels: ${zoomLevels.join(' -> ')}`);\n\n    const stepDuration = duration / zoomLevels.length;\n\n    for (const targetScale of zoomLevels) {\n      const startScale = this.canvasManager.viewport.scale.x;\n      const scaleDiff = targetScale - startScale;\n      const steps = 10;\n      const scaleStep = scaleDiff / steps;\n\n      for (let i = 0; i < steps; i++) {\n        const newScale = startScale + (scaleStep * i);\n        this.canvasManager.viewport.scale.set(newScale);\n\n        // Wait for next frame\n        await new Promise(resolve => requestAnimationFrame(resolve));\n      }\n\n      await new Promise(resolve => setTimeout(resolve, stepDuration));\n    }\n\n    console.log('Zoom simulation complete');\n  }\n\n  // Run comprehensive performance test\n  async runComprehensiveTest() {\n    if (this.isRunning) {\n      console.warn('Performance test already running');\n      return;\n    }\n\n    this.isRunning = true;\n    console.log('Starting comprehensive performance test...');\n\n    try {\n      // Generate and load test objects\n      const testObjects = this.generateTestObjects(500);\n      this.loadTestObjects(testObjects);\n\n      // Wait for initial culling\n      await new Promise(resolve => setTimeout(resolve, 100));\n\n      console.log(`Initial state: ${this.getVisibleObjectCount()} visible objects out of ${this.canvasManager.objects.size} total`);\n\n      // Test 1: Static FPS monitoring\n      console.log('\\n=== Test 1: Static FPS Monitoring ===');\n      const staticResults = await this.startFPSMonitoring(5000);\n      this.testResults.push({ test: 'static', ...staticResults });\n\n      // Test 2: FPS during pan operation\n      console.log('\\n=== Test 2: FPS During Pan Operation ===');\n      const panPromise = this.startFPSMonitoring(3000);\n      await this.simulatePan(800, 15);\n      const panResults = await panPromise;\n      this.testResults.push({ test: 'pan', ...panResults });\n\n      // Test 3: FPS during zoom operation\n      console.log('\\n=== Test 3: FPS During Zoom Operation ===');\n      const zoomPromise = this.startFPSMonitoring(4000);\n      await this.simulateZoom([0.3, 0.8, 1.5, 0.8], 3000);\n      const zoomResults = await zoomPromise;\n      this.testResults.push({ test: 'zoom', ...zoomResults });\n\n      // Test 4: Culling effectiveness test\n      console.log('\\n=== Test 4: Culling Effectiveness ===');\n      const cullingResults = this.testCullingEffectiveness();\n      this.testResults.push({ test: 'culling', ...cullingResults });\n\n      // Summary\n      this.printSummary();\n\n    } catch (error) {\n      console.error('Performance test failed:', error);\n    } finally {\n      this.isRunning = false;\n    }\n  }\n\n  testCullingEffectiveness() {\n    // Test culling by moving viewport to different areas\n    const results = [];\n\n    // Save original position\n    const originalX = this.canvasManager.viewport.x;\n    const originalY = this.canvasManager.viewport.y;\n\n    // Test different viewport positions\n    const testPositions = [\n      { x: 0, y: 0, name: 'center' },\n      { x: 1000, y: 1000, name: 'corner1' },\n      { x: -1000, y: -1000, name: 'corner2' },\n      { x: 2000, y: 0, name: 'edge1' },\n      { x: 0, y: 2000, name: 'edge2' }\n    ];\n\n    testPositions.forEach(pos => {\n      this.canvasManager.viewport.x = pos.x;\n      this.canvasManager.viewport.y = pos.y;\n\n      // Force culling update\n      this.canvasManager.updateVisibleObjects();\n\n      const visibleCount = this.getVisibleObjectCount();\n      results.push({\n        position: pos.name,\n        viewportX: pos.x,\n        viewportY: pos.y,\n        visibleObjects: visibleCount,\n        totalObjects: this.canvasManager.objects.size\n      });\n\n      console.log(`${pos.name}: ${visibleCount} visible objects`);\n    });\n\n    // Restore original position\n    this.canvasManager.viewport.x = originalX;\n    this.canvasManager.viewport.y = originalY;\n    this.canvasManager.updateVisibleObjects();\n\n    return { positions: results };\n  }\n\n  printSummary() {\n    console.log('\\n=== PERFORMANCE TEST SUMMARY ===');\n\n    const staticTest = this.testResults.find(r => r.test === 'static');\n    const panTest = this.testResults.find(r => r.test === 'pan');\n    const zoomTest = this.testResults.find(r => r.test === 'zoom');\n    const cullingTest = this.testResults.find(r => r.test === 'culling');\n\n    if (staticTest) {\n      console.log(`Static FPS: Avg ${staticTest.avgFPS}, Min ${staticTest.minFPS}, Max ${staticTest.maxFPS}`);\n    }\n\n    if (panTest) {\n      console.log(`Pan FPS: Avg ${panTest.avgFPS}, Min ${panTest.minFPS}, Max ${panTest.maxFPS}`);\n    }\n\n    if (zoomTest) {\n      console.log(`Zoom FPS: Avg ${zoomTest.avgFPS}, Min ${zoomTest.minFPS}, Max ${zoomTest.maxFPS}`);\n    }\n\n    if (cullingTest) {\n      const positions = cullingTest.positions;\n      const avgVisible = positions.reduce((sum, p) => sum + p.visibleObjects, 0) / positions.length;\n      const minVisible = Math.min(...positions.map(p => p.visibleObjects));\n      const maxVisible = Math.max(...positions.map(p => p.visibleObjects));\n\n      console.log(`Culling Effectiveness: Avg ${Math.round(avgVisible)} visible objects (Min: ${minVisible}, Max: ${maxVisible}) out of ${positions[0].totalObjects} total`);\n    }\n\n    // Performance requirements check\n    const passed = this.checkRequirements();\n    console.log(`\\nRequirements Check: ${passed ? 'PASSED' : 'FAILED'}`);\n\n    if (!passed) {\n      console.log('Issues:');\n      if (staticTest && staticTest.minFPS < 55) console.log('- Static FPS below 55');\n      if (panTest && panTest.minFPS < 55) console.log('- Pan FPS below 55');\n      if (zoomTest && zoomTest.minFPS < 55) console.log('- Zoom FPS below 55');\n    }\n  }\n\n  checkRequirements() {\n    const staticTest = this.testResults.find(r => r.test === 'static');\n    const panTest = this.testResults.find(r => r.test === 'pan');\n    const zoomTest = this.testResults.find(r => r.test === 'zoom');\n\n    return (!staticTest || staticTest.minFPS >= 55) &&\n           (!panTest || panTest.minFPS >= 55) &&\n           (!zoomTest || zoomTest.minFPS >= 55);\n  }\n\n  // Utility method to run test from browser console\n  static runTestOnCanvas(canvasManager) {\n    const tester = new PerformanceTest(canvasManager);\n    tester.runComprehensiveTest();\n    return tester;\n  }\n}\n\n// Export for use in browser console or other scripts\nif (typeof window !== 'undefined') {\n  window.PerformanceTest = PerformanceTest;\n}","// main.js - Application entry point for CollabCanvas\n\nimport './styles.css'\nimport * as PIXI from 'pixi.js'\nimport { CanvasManager } from './canvas.js'\nimport { WebSocketClient } from './websocket.js'\nimport { AuthManager } from './auth.js'\nimport { PerformanceTest } from './performance-test.js'\n\nclass CollabCanvas {\n    constructor() {\n        this.canvasManager = null\n        this.wsClient = null\n        this.authManager = null\n        this.sessionId = null\n        this.userId = null\n        this.username = null\n        this.canvasId = this.getCanvasId()\n        this.activeUsers = [] // Track active users\n    }\n\n    getCanvasId() {\n        // Get canvas ID from URL or use default shared canvas\n        const params = new URLSearchParams(window.location.search)\n        let canvasId = params.get('canvas')\n\n        if (!canvasId) {\n            // Use a fixed default canvas so all users join the same one\n            canvasId = 'default-canvas'\n            // Update URL without reload\n            const newUrl = new URL(window.location)\n            newUrl.searchParams.set('canvas', canvasId)\n            window.history.replaceState({}, '', newUrl)\n        }\n\n        return canvasId\n    }\n\n    async init() {\n        console.log('Initializing CollabCanvas...')\n\n        // Update canvas ID in status bar\n        document.getElementById('canvas-id').textContent = this.canvasId\n\n        // Initialize authentication\n        this.authManager = new AuthManager()\n\n        // Check for existing session\n        this.sessionId = localStorage.getItem('sessionId')\n\n        if (this.sessionId) {\n            // Validate session with backend\n            const isValid = await this.validateSession()\n\n            if (!isValid) {\n                this.sessionId = null\n                localStorage.removeItem('sessionId')\n            }\n        }\n\n        if (!this.sessionId) {\n            // Hide loading screen and show auth modal\n            this.hideLoadingScreen()\n            const authData = await this.authManager.showModal()\n            this.sessionId = authData.sessionId\n            this.userId = authData.userId\n            this.username = authData.username\n            localStorage.setItem('sessionId', this.sessionId)\n        }\n\n        // Hide loading screen (session is valid)\n        this.hideLoadingScreen()\n\n        // Initialize canvas\n        this.initCanvas()\n\n        // Initialize WebSocket connection\n        this.initWebSocket()\n\n        // Setup UI event handlers\n        this.setupUIHandlers()\n\n        console.log('CollabCanvas initialized successfully')\n    }\n\n    hideLoadingScreen() {\n        const loadingScreen = document.getElementById('loading-screen')\n        if (loadingScreen) {\n            loadingScreen.classList.add('hidden')\n        }\n    }\n\n    async validateSession() {\n        try {\n            const response = await fetch('/api/session', {\n                credentials: 'include',\n                headers: {\n                    'Authorization': this.sessionId\n                }\n            })\n\n            if (response.ok) {\n                const data = await response.json()\n                if (data.success && data.data && data.data.valid) {\n                    this.userId = data.data['user-id']\n                    this.username = data.data.username\n                    console.log('Session restored:', this.username)\n                    return true\n                }\n            }\n        } catch (error) {\n            console.error('Session validation failed:', error)\n        }\n\n        return false\n    }\n\n    initCanvas() {\n        const container = document.getElementById('canvas-container')\n\n        // Create PixiJS application\n        const app = new PIXI.Application({\n            width: window.innerWidth,\n            height: window.innerHeight,\n            backgroundColor: 0x1a1a1a,\n            resizeTo: window\n        })\n\n        container.appendChild(app.view)\n\n        this.canvasManager = new CanvasManager(app)\n\n        // Make performance stats available globally for console access\n        window.getPerformanceStats = () => {\n            return this.canvasManager.getPerformanceStats();\n        };\n\n        // Make latency stats available globally\n        window.getLatencyStats = () => {\n            if (!this.wsClient) return null;\n            return this.wsClient.getLatencyStats();\n        };\n\n        window.logLatencyStats = () => {\n            if (!this.wsClient) {\n                console.warn('WebSocket client not initialized');\n                return;\n            }\n            this.wsClient.logLatencyStats();\n        };\n\n        window.getLatencyStatsByType = (messageType) => {\n            if (!this.wsClient) return null;\n            return this.wsClient.getLatencyStatsByType(messageType);\n        };\n\n        // Set up canvas callbacks for WebSocket synchronization\n        this.canvasManager.onCursorMoved = (x, y) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendCursorUpdate(x, y)\n            }\n        }\n\n        this.canvasManager.onObjectCreated = (object) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectCreate(object)\n            }\n        }\n\n        this.canvasManager.onObjectUpdated = (objectId, updates) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectUpdate(objectId, updates)\n            }\n        }\n\n        this.canvasManager.onObjectDeleted = (objectId) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectDelete(objectId)\n            }\n        }\n\n        this.canvasManager.onObjectsDeleted = (objectIds) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectsDelete(objectIds)\n            }\n        }\n\n        // Update status bar callbacks\n        this.canvasManager.onToolChange = (tool) => {\n            document.getElementById('current-tool').textContent =\n                tool.charAt(0).toUpperCase() + tool.slice(1)\n        }\n\n        this.canvasManager.onMouseMove = (x, y) => {\n            document.getElementById('mouse-position').textContent = `${Math.round(x)}, ${Math.round(y)}`\n        }\n\n        this.canvasManager.onZoomChange = (zoom) => {\n            document.getElementById('zoom-level').textContent = `${Math.round(zoom * 100)}%`\n        }\n\n        this.canvasManager.onObjectCountChange = (count) => {\n            document.getElementById('object-count').textContent = count\n        }\n\n        // Start periodic memory cleanup (every 60 seconds)\n        // This removes orphaned selection indicators and inactive cursors\n        this.canvasManager.startPeriodicCleanup(60000)\n        console.log('Started periodic memory cleanup (60s interval)')\n    }\n\n    initWebSocket() {\n        // Use wss:// for HTTPS pages, ws:// for HTTP\n        const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:'\n        // window.location.host includes port if non-standard (e.g., localhost:8080)\n        const wsUrl = `${wsProtocol}//${window.location.host}/ws/${this.canvasId}`\n\n        this.wsClient = new WebSocketClient(wsUrl, this.sessionId, this.canvasId)\n\n        // Set up WebSocket callbacks\n        this.wsClient.onAuthSuccess = (data) => {\n            console.error('=== WebSocket authenticated ===')\n            console.error('Auth data received:', data)\n\n            // Backend sends 'canvas-state' (kebab-case), not 'canvasState'\n            const canvasState = data['canvas-state'] || data.canvasState\n            console.error('canvasState exists?', !!canvasState)\n            console.error('canvasState type:', typeof canvasState)\n            console.error('canvasState length:', canvasState ? canvasState.length : 0)\n\n            // Load initial canvas state\n            if (canvasState) {\n                console.error('=== CALLING loadState ===')\n                this.canvasManager.loadState(canvasState)\n                console.error('=== loadState RETURNED ===')\n            } else {\n                console.error('=== NO CANVAS STATE IN AUTH RESPONSE ===')\n            }\n        }\n\n        this.wsClient.onUserConnected = (data) => {\n            // Add new user to active users list\n            this.activeUsers.push({\n                'user-id': data.userId || data['user-id'],\n                username: data.username,\n                color: data.color\n            })\n            this.updatePresenceList(this.activeUsers)\n            this.showNotification(`${data.username} joined`, 'info')\n        }\n\n        this.wsClient.onUserDisconnected = (data) => {\n            // Remove user from active users list\n            const userId = data.userId || data['user-id']\n            this.activeUsers = this.activeUsers.filter(u =>\n                (u['user-id'] || u.userId) !== userId\n            )\n            this.updatePresenceList(this.activeUsers)\n            this.canvasManager.removeRemoteCursor(userId)\n            this.showNotification(`${data.username} left`, 'info')\n        }\n\n        this.wsClient.onPresenceUpdate = (users) => {\n            // Replace entire active users list with server's authoritative list\n            this.activeUsers = users\n            this.updatePresenceList(this.activeUsers)\n        }\n\n        this.wsClient.onCursorUpdate = (data) => {\n            this.canvasManager.updateRemoteCursor(\n                data.userId,\n                data.username,\n                data.x,\n                data.y,\n                data.color\n            )\n        }\n\n        this.wsClient.onObjectCreated = (data) => {\n            this.canvasManager.createRemoteObject(data.object)\n        }\n\n        this.wsClient.onObjectUpdated = (data) => {\n            // Backend sends 'object-id' (kebab-case)\n            const objectId = data['object-id'] || data.objectId\n            this.canvasManager.updateRemoteObject(objectId, data.delta)\n        }\n\n        this.wsClient.onObjectDeleted = (data) => {\n            // Remove user from active users list\n            const userId = data.userId || data['user-id']\n            this.activeUsers = this.activeUsers.filter(u =>\n                (u['user-id'] || u.userId) !== userId\n            )\n            this.updatePresenceList(this.activeUsers)\n            this.canvasManager.removeRemoteCursor(userId)\n            this.showNotification(`${data.username} left`, 'info')\n        }\n\n        this.wsClient.onObjectsDeleted = (data) => {\n            const objectIds = data['object-ids'] || data.objectIds || []\n            console.log('Received bulk delete for objects:', objectIds)\n\n            // Handle remote bulk deletion\n            if (objectIds.length > 0) {\n                objectIds.forEach(objectId => {\n                    this.canvasManager.deleteObject(objectId)\n                })\n                console.log(`Processed remote bulk deletion of ${objectIds.length} objects`)\n            }\n        }\n\n        this.wsClient.onError = (error) => {\n            console.error('WebSocket error:', error)\n            this.showNotification('Connection error', 'error')\n        }\n\n        this.wsClient.onReconnecting = () => {\n            this.showNotification('Reconnecting...', 'warning')\n        }\n\n        this.wsClient.onReconnected = () => {\n            this.showNotification('Reconnected', 'success')\n        }\n\n        // Connect to WebSocket\n        this.wsClient.connect()\n    }\n\n    setupUIHandlers() {\n        // Tool buttons\n        document.querySelectorAll('.tool-btn').forEach(btn => {\n            btn.addEventListener('click', () => {\n                const tool = btn.dataset.tool\n                this.canvasManager.setTool(tool)\n\n                // Update active button\n                document.querySelectorAll('.tool-btn').forEach(b =>\n                    b.classList.remove('active'))\n                btn.classList.add('active')\n            })\n        })\n\n        // Color picker\n        const colorPicker = document.getElementById('color-picker')\n        colorPicker.addEventListener('change', (e) => {\n            this.canvasManager.setColor(e.target.value)\n        })\n\n        // Keyboard shortcuts\n        document.addEventListener('keydown', (e) => {\n            // Prevent shortcuts when typing in inputs\n            if (e.target.tagName === 'INPUT') return\n\n            switch(e.key.toLowerCase()) {\n                case 'v':\n                    this.selectTool('select')\n                    break\n                case 'r':\n                    this.selectTool('rectangle')\n                    break\n                case 'c':\n                    this.selectTool('circle')\n                    break\n                case 'p':\n                    if (e.ctrlKey && e.shiftKey) {\n                        e.preventDefault()\n                        this.runPerformanceTest()\n                    }\n                    break\n                case 'delete':\n                case 'backspace':\n                    if (!e.target.isContentEditable) {\n                        e.preventDefault()\n                        this.canvasManager.deleteSelected()\n                    }\n                    break\n                case 'z':\n                    if (e.ctrlKey || e.metaKey) {\n                        e.preventDefault()\n                        if (e.shiftKey) {\n                            this.canvasManager.redo()\n                        } else {\n                            this.canvasManager.undo()\n                        }\n                    }\n                    break\n            }\n        })\n\n        // Logout button (if added to UI)\n        const logoutBtn = document.getElementById('logout-btn')\n        if (logoutBtn) {\n            logoutBtn.addEventListener('click', async () => {\n                await this.logout()\n            })\n        }\n    }\n\n    selectTool(tool) {\n        this.canvasManager.setTool(tool)\n\n        // Update UI\n        document.querySelectorAll('.tool-btn').forEach(btn => {\n            if (btn.dataset.tool === tool) {\n                btn.classList.add('active')\n            } else {\n                btn.classList.remove('active')\n            }\n        })\n    }\n\n    updatePresenceList(users = []) {\n        const container = document.getElementById('users-container')\n        container.innerHTML = ''\n\n        users.forEach(user => {\n            const userItem = document.createElement('div')\n            userItem.className = 'user-item'\n            // Handle both kebab-case and camelCase keys\n            const username = user.username\n            const color = user.color\n            userItem.innerHTML = `\n                <span class=\"user-indicator\" style=\"background-color: ${color}\"></span>\n                <span>${username}</span>\n            `\n            container.appendChild(userItem)\n        })\n    }\n\n    showNotification(message, type = 'info') {\n        // Simple notification system (can be enhanced with a library)\n        console.log(`[${type.toUpperCase()}] ${message}`)\n\n        // TODO: Implement visual notifications\n    }\n\n    async logout() {\n        try {\n            await fetch('/api/logout', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': this.sessionId\n                }\n            })\n        } catch (error) {\n            console.error('Logout error:', error)\n        }\n\n        // Clean up\n        localStorage.removeItem('sessionId')\n\n        // Stop periodic cleanup timer\n        if (this.canvasManager) {\n            this.canvasManager.stopPeriodicCleanup()\n        }\n\n        // Disconnect WebSocket (also cleans up cursor throttle)\n        if (this.wsClient) {\n            this.wsClient.disconnect()\n        }\n\n        // Reload page to show login\n        window.location.reload()\n    }\n\n    async runPerformanceTest() {\n        console.log('Starting performance test... Press Ctrl+Shift+P to run object culling performance tests');\n\n        if (!this.canvasManager) {\n            console.error('Canvas manager not initialized');\n            return;\n        }\n\n        try {\n            const tester = new PerformanceTest(this.canvasManager);\n            await tester.runComprehensiveTest();\n            console.log('Performance test completed successfully');\n        } catch (error) {\n            console.error('Performance test failed:', error);\n        }\n    }\n}\n\n// Initialize application when DOM is ready\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n        const app = new CollabCanvas()\n        app.init()\n        window.collabCanvas = app // For debugging\n    })\n} else {\n    const app = new CollabCanvas()\n    app.init()\n    window.collabCanvas = app // For debugging\n}"],"names":["PerformanceMonitor","constructor","app","canvasManager","this","fpsHistory","maxHistorySize","currentFps","lastTime","performance","now","frameCount","ticker","add","update","bind","console","log","deltaTime","deltaMs","Math","round","push","length","shift","avgFps","getAverageFps","objectCount","objects","size","warn","toFixed","reduce","a","b","getStats","current","average","min","max","destroy","remove","CanvasManager","viewport","PIXI.Container","Map","selectedObjects","Set","selectionIndicators","remoteCursors","isPanning","panStart","x","y","currentTool","currentColor","cullingEnabled","cullingPadding","lastViewportBounds","performanceMonitor","cursorTexture","createSharedCursorTexture","stage","addChild","sortableChildren","drawGrid","setupPanZoom","setupKeyboardShortcuts","setupToolHandlers","setupViewportCulling","graphics","PIXI.Graphics","beginFill","moveTo","lineTo","endFill","texture","renderer","generateTexture","resolution","scaleMode","PIXI.SCALE_MODES","LINEAR","grid","lineStyle","gridExtent","zIndex","canvas","view","addEventListener","e","button","altKey","clientX","clientY","style","cursor","preventDefault","dx","dy","zoomFactor","deltaY","mouseX","mouseY","worldPosBefore","screenToWorld","newScale","scale","set","worldPosAfter","passive","screenX","screenY","worldToScreen","worldX","worldY","document","key","setTool","deleteSelected","tool","drawStart","previewShape","worldPos","onCursorMoved","width","height","clear","drawRect","radius","sqrt","drawCircle","alpha","objData","createToolObject","removeChild","onObjectCreated","updateVisibleObjects","viewportBounds","getViewportBounds","abs","left","top","right","bottom","forEach","obj","id","objBounds","getObjectBounds","isVisible","isBoundsVisible","visible","screenWidth","screenHeight","topLeft","bottomRight","userData","type","start","end","generateId","createRectangle","color","createCircle","rect","interactive","buttonMode","makeDraggable","makeSelectable","circle","createText","text","fontSize","textObj","PIXI.Text","fill","fontFamily","dragData","dragOffset","lastDragUpdate","on","event","data","dragging","cursorPos","getLocalPosition","parent","stopPropagation","onObjectUpdated","newPosition","originalEvent","shiftKey","has","deselectObject","selectObject","clearSelection","get","existingIndicator","indicator","delete","idsToDelete","Array","from","deletedIds","deleteObjects","onObjectsDeleted","loadState","canvasState","error","isArray","deleteObject","index","JSON","stringify","createRemoteObject","values","Object","keys","applyDelta","delta","value","entries","undefined","rotation","redrawGraphicsObject","updateObject","updates","children","baseTexture","ids","deletedObjects","verifyObjectDeletion","allClean","issues","find","child","_objectId","orphanedPixiObjects","filter","textureCount","PIXI.utils.TextureCache","success","orphanedObjects","getMemoryStats","pixiChildren","objectsInMap","totalTrackedObjects","textureCacheSize","baseTextureCacheSize","PIXI.utils.BaseTextureCache","colorType","normalizeColor","startsWith","parseInt","substring","updateRemoteObject","objectId","deleteRemoteObject","getObject","getAllObjects","map","name","getPerformanceStats","updateRemoteCursor","userId","username","colorNum","pointer","PIXI.Sprite","tint","label","fontWeight","stroke","strokeThickness","dropShadow","dropShadowColor","dropShadowAlpha","dropShadowDistance","lastUpdate","time","dt","lerpFactor","removeRemoteCursor","clearAllRemoteCursors","startPeriodicCleanup","intervalMs","cleanupInterval","setInterval","performCleanup","stopPeriodicCleanup","clearInterval","orphanedIndicators","orphanedCursors","fiveMinutesAgo","random","toString","substr","setColor","getCanvasState","onObjectMoved","onObjectDeleted","LatencyMonitor","options","warningThreshold","pendingMessages","latencyHistory","stats","totalMessages","averageLatency","minLatency","Infinity","maxLatency","warningCount","startTracking","messageId","messageType","sentTime","endTracking","pending","latency","recordLatency","timestamp","Date","sum","acc","item","getPercentile","percentile","sorted","sort","ceil","p50","p95","p99","historySize","getStatsByType","filtered","latencies","val","p","count","logStats","reset","CursorThrottle","sendCallback","pendingCursor","intervalId","stop","WebSocketClient","url","sessionId","canvasId","ws","isConnected","reconnectAttempts","maxReconnectAttempts","reconnectDelay","messageIdCounter","latencyMonitor","bandwidthStats","totalBytesReceived","objectUpdateMessages","startTime","cursorThrottle","send","onAuthSuccess","onAuthFailed","onUserConnected","onUserDisconnected","onPresenceUpdate","onCursorUpdate","onError","onReconnecting","onReconnected","connect","WebSocket","setupEventHandlers","scheduleReconnect","onopen","onmessage","parse","handleMessage","onclose","code","reason","wasClean","onerror","debug","users","cursors","messageSize","message","Error","trackLatency","readyState","OPEN","sendCursorUpdate","sendObjectCreate","object","sendObjectUpdate","sendObjectDelete","delay","pow","setTimeout","getBandwidthStats","elapsedMinutes","totalBytes","messageCount","averageBytesPerMessage","bytesPerMinute","getLatencyStats","getLatencyStatsByType","logLatencyStats","logBandwidthStats","disconnect","close","sendObjectsDelete","objectIds","AuthManager","modal","getElementById","loginForm","registerForm","setupEventListeners","querySelectorAll","btn","tab","dataset","switchTab","async","handleLogin","handleRegister","classList","toggle","form","err","textContent","showModal","Promise","resolve","resolveAuth","hideModal","email","password","errorEl","response","fetch","method","credentials","headers","body","json","loginAfterRegister","PerformanceTest","testResults","isRunning","generateTestObjects","i","floor","loadTestObjects","startFPSMonitoring","duration","measureFPS","fps","getVisibleObjectCount","tickerCallback","avgFPS","minFPS","maxFPS","result","totalObjects","visibleObjects","simulatePan","panDistance","steps","startX","startY","stepX","stepY","requestAnimationFrame","simulateZoom","zoomLevels","join","stepDuration","targetScale","startScale","scaleStep","runComprehensiveTest","testObjects","staticResults","test","panPromise","panResults","zoomPromise","zoomResults","cullingResults","testCullingEffectiveness","printSummary","results","originalX","originalY","pos","visibleCount","position","viewportX","viewportY","positions","staticTest","r","panTest","zoomTest","cullingTest","avgVisible","minVisible","maxVisible","passed","checkRequirements","runTestOnCanvas","tester","window","CollabCanvas","wsClient","authManager","getCanvasId","activeUsers","URLSearchParams","location","search","newUrl","URL","searchParams","history","replaceState","init","localStorage","getItem","validateSession","removeItem","hideLoadingScreen","authData","setItem","initCanvas","initWebSocket","setupUIHandlers","loadingScreen","Authorization","ok","valid","container","PIXI.Application","innerWidth","innerHeight","backgroundColor","resizeTo","appendChild","onToolChange","charAt","toUpperCase","slice","onMouseMove","onZoomChange","zoom","onObjectCountChange","wsUrl","protocol","host","updatePresenceList","showNotification","u","target","tagName","toLowerCase","selectTool","ctrlKey","runPerformanceTest","isContentEditable","metaKey","redo","undo","logoutBtn","logout","innerHTML","user","userItem","createElement","className","reload","collabCanvas"],"mappings":"85EAIO,MAAMA,EACXC,WAAAA,CAAYC,EAAKC,GACfC,KAAKF,IAAMA,EACXE,KAAKD,cAAgBA,EACrBC,KAAKC,WAAa,GAClBD,KAAKE,eAAiB,GACtBF,KAAKG,WAAa,GAClBH,KAAKI,SAAWC,YAAYC,MAC5BN,KAAKO,WAAa,EAGlBP,KAAKF,IAAIU,OAAOC,IAAIT,KAAKU,OAAOC,KAAKX,OAErCY,QAAQC,IAAI,iCACd,CAEAH,MAAAA,CAAOI,GAEL,MAAMR,EAAMD,YAAYC,MAClBS,EAAUT,EAAMN,KAAKI,SAe3B,GAbIW,EAAU,IACZf,KAAKG,WAAaa,KAAKC,MAAM,IAAOF,IAGtCf,KAAKI,SAAWE,EAGhBN,KAAKC,WAAWiB,KAAKlB,KAAKG,YACtBH,KAAKC,WAAWkB,OAASnB,KAAKE,gBAChCF,KAAKC,WAAWmB,QAIdpB,KAAKG,WAAa,GAAI,CACxB,MAAMkB,EAASrB,KAAKsB,gBACdC,EAAcvB,KAAKD,cAAgBC,KAAKD,cAAcyB,QAAQC,KAAO,EAC3Eb,QAAQc,KAAK,wBAAwB1B,KAAKG,wBAAwBkB,EAAOM,QAAQ,gBAAgBJ,KACnG,CACF,CAEAD,aAAAA,GACE,OAA+B,IAA3BtB,KAAKC,WAAWkB,OAAqB,GAC7BnB,KAAKC,WAAW2B,OAAO,CAACC,EAAGC,IAAMD,EAAIC,EAAG,GACvC9B,KAAKC,WAAWkB,MAC/B,CAEAY,QAAAA,GACE,OAA+B,IAA3B/B,KAAKC,WAAWkB,OACX,CACLa,QAAShC,KAAKG,WACd8B,QAAS,GACTC,IAAK,GACLC,IAAK,IAIF,CACLH,QAAShC,KAAKG,WACd8B,QAASjB,KAAKC,MAA6B,GAAvBjB,KAAKsB,iBAAwB,GACjDY,IAAKlB,KAAKkB,OAAOlC,KAAKC,YACtBkC,IAAKnB,KAAKmB,OAAOnC,KAAKC,YAE1B,CAEAmC,OAAAA,GACMpC,KAAKF,KAAOE,KAAKF,IAAIU,QACvBR,KAAKF,IAAIU,OAAO6B,OAAOrC,KAAKU,OAAOC,KAAKX,MAE5C,EAGK,MAAMsC,EACXzC,WAAAA,CAAYC,GACVE,KAAKF,IAAMA,EACXE,KAAKuC,SAAW,IAAIC,EACpBxC,KAAKwB,QAAU,IAAIiB,IACnBzC,KAAK0C,gBAAkB,IAAIC,IAC3B3C,KAAK4C,oBAAsB,IAAIH,IAC/BzC,KAAK6C,cAAgB,IAAIJ,IAGzBzC,KAAK8C,WAAY,EACjB9C,KAAK+C,SAAW,CAAEC,EAAG,EAAGC,EAAG,GAC3BjD,KAAKkD,YAAc,SACnBlD,KAAKmD,aAAe,QAGpBnD,KAAKoD,gBAAiB,EACtBpD,KAAKqD,eAAiB,IACtBrD,KAAKsD,mBAAqB,KAG1BtD,KAAKuD,mBAAqB,IAAI3D,EAAmBE,EAAKE,MAGtDA,KAAKwD,cAAgBxD,KAAKyD,4BAG1BzD,KAAKF,IAAI4D,MAAMC,SAAS3D,KAAKuC,UAC7BvC,KAAKuC,SAASqB,kBAAmB,EAGjC5D,KAAK6D,WAGL7D,KAAK8D,eACL9D,KAAK+D,yBACL/D,KAAKgE,oBACLhE,KAAKiE,uBAELrD,QAAQC,IAAI,qBACd,CAEA4C,yBAAAA,GAEE,MAAMS,EAAW,IAAIC,EAGrBD,EAASE,UAAU,UACnBF,EAASG,OAAO,EAAG,GACnBH,EAASI,OAAO,GAAI,IACpBJ,EAASI,OAAO,EAAG,IACnBJ,EAASI,OAAO,EAAG,IACnBJ,EAASK,UAGT,MAAMC,EAAUxE,KAAKF,IAAI2E,SAASC,gBAAgBR,EAAU,CAC1DS,WAAY,EACZC,UAAWC,EAAiBC,SAM9B,OAFAZ,EAAS9B,UAEFoC,CACT,CAIAX,QAAAA,GACE,MAAMkB,EAAO,IAAIZ,EACjBY,EAAKC,UAAU,EAAG,QAAU,IAE5B,MACMC,EAAa,IAGnB,IAAK,IAAIjC,GAAI,IAAaA,GAAKiC,EAAYjC,GAJ1B,GAKf+B,EAAKV,OAAOrB,GAAG,KACf+B,EAAKT,OAAOtB,EAAGiC,GAIjB,IAAK,IAAIhC,GAAI,IAAaA,GAAKgC,EAAYhC,GAV1B,GAWf8B,EAAKV,QAAO,IAAapB,GACzB8B,EAAKT,OAAOW,EAAYhC,GAG1B8B,EAAKG,QAAS,EACdlF,KAAKuC,SAASoB,SAASoB,EACzB,CAIAjB,YAAAA,GACE,MAAMqB,EAASnF,KAAKF,IAAIsF,KAGxBD,EAAOE,iBAAiB,YAAcC,KACnB,IAAbA,EAAEC,QAA8B,IAAbD,EAAEC,QAAgBD,EAAEE,UACzCxF,KAAK8C,WAAY,EACjB9C,KAAK+C,SAAW,CAAEC,EAAGsC,EAAEG,QAASxC,EAAGqC,EAAEI,SACrCP,EAAOQ,MAAMC,OAAS,WACtBN,EAAEO,oBAINV,EAAOE,iBAAiB,YAAcC,IACpC,GAAItF,KAAK8C,UAAW,CAClB,MAAMgD,EAAKR,EAAEG,QAAUzF,KAAK+C,SAASC,EAC/B+C,EAAKT,EAAEI,QAAU1F,KAAK+C,SAASE,EAErCjD,KAAKuC,SAASS,GAAK8C,EACnB9F,KAAKuC,SAASU,GAAK8C,EAEnB/F,KAAK+C,SAAW,CAAEC,EAAGsC,EAAEG,QAASxC,EAAGqC,EAAEI,QACvC,IAGFP,EAAOE,iBAAiB,UAAW,KAC7BrF,KAAK8C,YACP9C,KAAK8C,WAAY,EACjBqC,EAAOQ,MAAMC,OAAS,aAK1BT,EAAOE,iBAAiB,QAAUC,IAChCA,EAAEO,iBAEF,MAAMG,EAAaV,EAAEW,OAAS,EAAI,GAAM,IAClCC,EAASZ,EAAEG,QACXU,EAASb,EAAEI,QAGXU,EAAiBpG,KAAKqG,cAAcH,EAAQC,GAG5CG,EAAWtG,KAAKuC,SAASgE,MAAMvD,EAAIgD,EACzC,GAAIM,GAAY,IAAOA,GAAY,GAAI,CACrCtG,KAAKuC,SAASgE,MAAMC,IAAIF,GAGxB,MAAMG,EAAgBzG,KAAKqG,cAAcH,EAAQC,GACjDnG,KAAKuC,SAASS,IAAMyD,EAAczD,EAAIoD,EAAepD,GAAKhD,KAAKuC,SAASgE,MAAMvD,EAC9EhD,KAAKuC,SAASU,IAAMwD,EAAcxD,EAAImD,EAAenD,GAAKjD,KAAKuC,SAASgE,MAAMtD,CAChF,GACC,CAAEyD,SAAS,GAChB,CAEAL,aAAAA,CAAcM,EAASC,GACrB,MAAO,CACL5D,GAAI2D,EAAU3G,KAAKuC,SAASS,GAAKhD,KAAKuC,SAASgE,MAAMvD,EACrDC,GAAI2D,EAAU5G,KAAKuC,SAASU,GAAKjD,KAAKuC,SAASgE,MAAMtD,EAEzD,CAEA4D,aAAAA,CAAcC,EAAQC,GACpB,MAAO,CACL/D,EAAG8D,EAAS9G,KAAKuC,SAASgE,MAAMvD,EAAIhD,KAAKuC,SAASS,EAClDC,EAAG8D,EAAS/G,KAAKuC,SAASgE,MAAMtD,EAAIjD,KAAKuC,SAASU,EAEtD,CAIAc,sBAAAA,GACEiD,SAAS3B,iBAAiB,UAAYC,IAEtB,MAAVA,EAAE2B,KAAyB,MAAV3B,EAAE2B,IACrBjH,KAAKkH,QAAQ,aACM,MAAV5B,EAAE2B,KAAyB,MAAV3B,EAAE2B,IAC5BjH,KAAKkH,QAAQ,UACM,MAAV5B,EAAE2B,KAAyB,MAAV3B,EAAE2B,IAC5BjH,KAAKkH,QAAQ,QACM,MAAV5B,EAAE2B,KAAyB,MAAV3B,EAAE2B,KAAyB,WAAV3B,EAAE2B,IAC7CjH,KAAKkH,QAAQ,UACM,WAAV5B,EAAE2B,KAA8B,cAAV3B,EAAE2B,KACjCjH,KAAKmH,kBAGX,CAEAD,OAAAA,CAAQE,GACNpH,KAAKkD,YAAckE,EACnBxG,QAAQC,IAAI,QAASuG,EAEvB,CAIApD,iBAAAA,GACE,MAAMmB,EAASnF,KAAKF,IAAIsF,KACxB,IAAIiC,EAAY,KACZC,EAAe,KAGnBnC,EAAOE,iBAAiB,YAAcC,IACpC,MAAMiC,EAAWvH,KAAKqG,cAAcf,EAAEG,QAASH,EAAEI,SAQjD,GALI1F,KAAKwH,eACPxH,KAAKwH,cAAcD,EAASvE,EAAGuE,EAAStE,GAItCoE,GAAaC,EAAc,CAC7B,MAAMG,EAAQF,EAASvE,EAAIqE,EAAUrE,EAC/B0E,EAASH,EAAStE,EAAIoE,EAAUpE,EAKtC,GAHAqE,EAAaK,QACbL,EAAalD,UAAUpE,KAAKmD,cAEH,cAArBnD,KAAKkD,YACPoE,EAAaM,SAASP,EAAUrE,EAAGqE,EAAUpE,EAAGwE,EAAOC,QAClD,GAAyB,WAArB1H,KAAKkD,YAA0B,CACxC,MAAM2E,EAAS7G,KAAK8G,KAAKL,EAAQA,EAAQC,EAASA,GAClDJ,EAAaS,WAAWV,EAAUrE,EAAGqE,EAAUpE,EAAG4E,EACpD,CAEAP,EAAa/C,SACf,IAGFY,EAAOE,iBAAiB,YAAcC,IACpC,GAAiB,IAAbA,EAAEC,QAAgBD,EAAEE,OAAQ,OAEhC,MAAM+B,EAAWvH,KAAKqG,cAAcf,EAAEG,QAASH,EAAEI,SAExB,cAArB1F,KAAKkD,aAAoD,WAArBlD,KAAKkD,cAC3CmE,EAAYE,EAGZD,EAAe,IAAInD,EACnBmD,EAAaU,MAAQ,GACrBhI,KAAKuC,SAASoB,SAAS2D,MAI3BnC,EAAOE,iBAAiB,UAAYC,IAClC,GAAI+B,GAAaC,EAAc,CAC7B,MAAMC,EAAWvH,KAAKqG,cAAcf,EAAEG,QAASH,EAAEI,SAG3CuC,EAAUjI,KAAKkI,iBAAiBb,EAAWE,GAGjDvH,KAAKuC,SAAS4F,YAAYb,GAC1BA,EAAe,KACfD,EAAY,KAGRrH,KAAKoI,iBACPpI,KAAKoI,gBAAgBH,EAEzB,GAEJ,CAIAhE,oBAAAA,GAEEjE,KAAKF,IAAIU,OAAOC,IAAI,KACdT,KAAKoD,gBACPpD,KAAKqI,wBAGX,CAEAA,oBAAAA,GAEE,MAAMC,EAAiBtI,KAAKuI,sBAGvBvI,KAAKsD,oBACNtC,KAAKwH,IAAIF,EAAeG,KAAOzI,KAAKsD,mBAAmBmF,MAAQ,IAC/DzH,KAAKwH,IAAIF,EAAeI,IAAM1I,KAAKsD,mBAAmBoF,KAAO,IAC7D1H,KAAKwH,IAAIF,EAAeK,MAAQ3I,KAAKsD,mBAAmBqF,OAAS,IACjE3H,KAAKwH,IAAIF,EAAeM,OAAS5I,KAAKsD,mBAAmBsF,QAAU,MAErE5I,KAAKsD,mBAAqBgF,EAG1BtI,KAAKwB,QAAQqH,QAAQ,CAACC,EAAKC,KACzB,MAAMC,EAAYhJ,KAAKiJ,gBAAgBH,GACjCI,EAAYlJ,KAAKmJ,gBAAgBH,EAAWV,GAG9CQ,EAAIM,UAAYF,IAClBJ,EAAIM,QAAUF,KAItB,CAEAX,iBAAAA,GAEE,MAAMc,EAAcrJ,KAAKF,IAAI2E,SAASgD,MAChC6B,EAAetJ,KAAKF,IAAI2E,SAASiD,OAGjC6B,EAAUvJ,KAAKqG,cAAc,EAAG,GAChCmD,EAAcxJ,KAAKqG,cAAcgD,EAAaC,GAEpD,MAAO,CACLb,KAAMc,EAAQvG,EAAIhD,KAAKqD,eACvBqF,IAAKa,EAAQtG,EAAIjD,KAAKqD,eACtBsF,MAAOa,EAAYxG,EAAIhD,KAAKqD,eAC5BuF,OAAQY,EAAYvG,EAAIjD,KAAKqD,eAEjC,CAEA4F,eAAAA,CAAgBH,GAEd,GAAIA,EAAIW,SAAU,CAChB,GAA0B,cAAtBX,EAAIW,SAASC,KACf,MAAO,CACLjB,KAAMK,EAAI9F,EACV0F,IAAKI,EAAI7F,EACT0F,MAAOG,EAAI9F,EAAI8F,EAAIW,SAAShC,MAC5BmB,OAAQE,EAAI7F,EAAI6F,EAAIW,SAAS/B,WAEA,WAAtBoB,EAAIW,SAASC,KAAmB,CACzC,MAAM7B,EAASiB,EAAIW,SAAS5B,OAC5B,MAAO,CACLY,KAAMK,EAAI9F,EAAI6E,EACda,IAAKI,EAAI7F,EAAI4E,EACbc,MAAOG,EAAI9F,EAAI6E,EACfe,OAAQE,EAAI7F,EAAI4E,EAEpB,CACF,CAGA,OAAIiB,EAAIrB,OAASqB,EAAIpB,OACZ,CACLe,KAAMK,EAAI9F,EACV0F,IAAKI,EAAI7F,EACT0F,MAAOG,EAAI9F,EAAI8F,EAAIrB,MACnBmB,OAAQE,EAAI7F,EAAI6F,EAAIpB,QAKjB,CACLe,KAAMK,EAAI9F,EACV0F,IAAKI,EAAI7F,EACT0F,MAAOG,EAAI9F,EACX4F,OAAQE,EAAI7F,EAEhB,CAEAkG,eAAAA,CAAgBH,EAAWV,GAEzB,QAASU,EAAUL,MAAQL,EAAeG,MACjCO,EAAUP,KAAOH,EAAeK,OAChCK,EAAUJ,OAASN,EAAeI,KAClCM,EAAUN,IAAMJ,EAAeM,OAC1C,CAEAV,gBAAAA,CAAiByB,EAAOC,GACtB,MAAMb,EAAK/I,KAAK6J,aAEhB,GAAyB,cAArB7J,KAAKkD,YAA6B,CACpC,MAAMuE,EAAQzG,KAAKwH,IAAIoB,EAAI5G,EAAI2G,EAAM3G,GAC/B0E,EAAS1G,KAAKwH,IAAIoB,EAAI3G,EAAI0G,EAAM1G,GAChCD,EAAIhC,KAAKkB,IAAIyH,EAAM3G,EAAG4G,EAAI5G,GAC1BC,EAAIjC,KAAKkB,IAAIyH,EAAM1G,EAAG2G,EAAI3G,GAIhC,OAFAjD,KAAK8J,gBAAgBf,EAAI/F,EAAGC,EAAGwE,EAAOC,EAAQ1H,KAAKmD,cAE5C,CACL4F,KACAW,KAAM,YACN1G,IAAGC,IAAGwE,QAAOC,SACbqC,MAAO/J,KAAKmD,aAEhB,CAAO,GAAyB,WAArBnD,KAAKkD,YAA0B,CACxC,MAAM4C,EAAK8D,EAAI5G,EAAI2G,EAAM3G,EACnB+C,EAAK6D,EAAI3G,EAAI0G,EAAM1G,EACnB4E,EAAS7G,KAAK8G,KAAKhC,EAAKA,EAAKC,EAAKA,GAIxC,OAFA/F,KAAKgK,aAAajB,EAAIY,EAAM3G,EAAG2G,EAAM1G,EAAG4E,EAAQ7H,KAAKmD,cAE9C,CACL4F,KACAW,KAAM,SACN1G,EAAG2G,EAAM3G,EACTC,EAAG0G,EAAM1G,EACT4E,SACAkC,MAAO/J,KAAKmD,aAEhB,CACF,CAIA2G,eAAAA,CAAgBf,EAAI/F,EAAGC,EAAGwE,EAAOC,EAAQqC,GACvC,MAAME,EAAO,IAAI9F,EAmBjB,OAlBA8F,EAAK7F,UAAU2F,GACfE,EAAKrC,SAAS,EAAG,EAAGH,EAAOC,GAC3BuC,EAAK1F,UACL0F,EAAKjH,EAAIA,EACTiH,EAAKhH,EAAIA,EACTgH,EAAKC,aAAc,EACnBD,EAAKE,YAAa,EAClBF,EAAKb,SAAU,EAGfa,EAAKR,SAAW,CAAEhC,QAAOC,SAAQgC,KAAM,aAEvC1J,KAAKoK,cAAcH,EAAMlB,GACzB/I,KAAKqK,eAAeJ,EAAMlB,GAE1B/I,KAAKwB,QAAQgF,IAAIuC,EAAIkB,GACrBjK,KAAKuC,SAASoB,SAASsG,GAEhBA,CACT,CAEAD,YAAAA,CAAajB,EAAI/F,EAAGC,EAAG4E,EAAQkC,GAC7B,MAAMO,EAAS,IAAInG,EAmBnB,OAlBAmG,EAAOlG,UAAU2F,GACjBO,EAAOvC,WAAW,EAAG,EAAGF,GACxByC,EAAO/F,UACP+F,EAAOtH,EAAIA,EACXsH,EAAOrH,EAAIA,EACXqH,EAAOJ,aAAc,EACrBI,EAAOH,YAAa,EACpBG,EAAOlB,SAAU,EAGjBkB,EAAOb,SAAW,CAAE5B,SAAQ6B,KAAM,UAElC1J,KAAKoK,cAAcE,EAAQvB,GAC3B/I,KAAKqK,eAAeC,EAAQvB,GAE5B/I,KAAKwB,QAAQgF,IAAIuC,EAAIuB,GACrBtK,KAAKuC,SAASoB,SAAS2G,GAEhBA,CACT,CAEAC,UAAAA,CAAWxB,EAAIyB,EAAMxH,EAAGC,EAAGwH,EAAUV,GACnC,MAAMW,EAAU,IAAIC,EAAUH,EAAM,CAClCC,WACAG,KAAMb,EACNc,WAAY,UAcd,OAZAH,EAAQ1H,EAAIA,EACZ0H,EAAQzH,EAAIA,EACZyH,EAAQR,aAAc,EACtBQ,EAAQP,YAAa,EACrBO,EAAQtB,SAAU,EAElBpJ,KAAKoK,cAAcM,EAAS3B,GAC5B/I,KAAKqK,eAAeK,EAAS3B,GAE7B/I,KAAKwB,QAAQgF,IAAIuC,EAAI2B,GACrB1K,KAAKuC,SAASoB,SAAS+G,GAEhBA,CACT,CAIAN,aAAAA,CAActB,EAAKC,GACjB,IAAI+B,EAAW,KACXC,EAAa,CAAE/H,EAAG,EAAGC,EAAG,GACxB+H,EAAiB,EAGrBlC,EAAImC,GAAG,cAAgBC,IACrB,GAAyB,WAArBlL,KAAKkD,YAA0B,OAEnC4H,EAAWI,EAAMC,KACjBrC,EAAId,MAAQ,GACZ8C,EAASM,UAAW,EAGpB,MAAMC,EAAYP,EAASQ,iBAAiBxC,EAAIyC,QAChDR,EAAW/H,EAAIqI,EAAUrI,EAAI8F,EAAI9F,EACjC+H,EAAW9H,EAAIoI,EAAUpI,EAAI6F,EAAI7F,EAEjCiI,EAAMM,oBAGR1C,EAAImC,GAAG,YAAa,KACdH,GAAYA,EAASM,WACvBtC,EAAId,MAAQ,EACZ8C,EAASM,UAAW,EAGhBpL,KAAKyL,iBACPzL,KAAKyL,gBAAgB1C,EAAI,CAAE/F,EAAG8F,EAAI9F,EAAGC,EAAG6F,EAAI7F,IAG9C6H,EAAW,QAIfhC,EAAImC,GAAG,cAAe,KACpB,GAAIH,GAAYA,EAASM,SAAU,CACjC,MAAMM,EAAcZ,EAASQ,iBAAiBxC,EAAIyC,QAElDzC,EAAI9F,EAAI0I,EAAY1I,EAAI+H,EAAW/H,EACnC8F,EAAI7F,EAAIyI,EAAYzI,EAAI8H,EAAW9H,EAGnC,MAAM3C,EAAMD,YAAYC,MACpBA,EAAM0K,GAxCa,KAyCjBhL,KAAKyL,iBACPzL,KAAKyL,gBAAgB1C,EAAI,CAAE/F,EAAG8F,EAAI9F,EAAGC,EAAG6F,EAAI7F,IAE9C+H,EAAiB1K,EAErB,GAEJ,CAEA+J,cAAAA,CAAevB,EAAKC,GAClBD,EAAImC,GAAG,QAAUC,IACU,WAArBlL,KAAKkD,cACHgI,EAAMC,KAAKQ,cAAcC,SAEvB5L,KAAK0C,gBAAgBmJ,IAAI9C,GAC3B/I,KAAK8L,eAAe/C,GAEpB/I,KAAK+L,aAAahD,IAIpB/I,KAAKgM,iBACLhM,KAAK+L,aAAahD,IAEpBmC,EAAMM,oBAGZ,CAEAO,YAAAA,CAAahD,GACX,MAAMD,EAAM9I,KAAKwB,QAAQyK,IAAIlD,GAC7B,IAAKD,EAAK,OAEV9I,KAAK0C,gBAAgBjC,IAAIsI,GAGzB,MAAMmD,EAAoBlM,KAAK4C,oBAAoBqJ,IAAIlD,GACnDmD,IACFlM,KAAKuC,SAAS4F,YAAY+D,GAC1BA,EAAkB9J,WAIpB,MAAM+J,EAAY,IAAIhI,EAGtB,GAFAgI,EAAUnH,UAAU,EAAG,OAEnB8D,EAAIW,SACN,GAA0B,cAAtBX,EAAIW,SAASC,KAAsB,CAErC,MAAMjC,MAAEA,EAAKC,OAAEA,GAAWoB,EAAIW,SAC9B0C,EAAUvE,aAAa,EAAIH,EAAQ,EAAGC,EAAS,GAC/CyE,EAAUnJ,EAAI8F,EAAI9F,EAClBmJ,EAAUlJ,EAAI6F,EAAI7F,CACpB,MAAO,GAA0B,WAAtB6F,EAAIW,SAASC,KAAmB,CAEzC,MAAM7B,OAAEA,GAAWiB,EAAIW,SACvB0C,EAAUpE,WAAW,EAAG,EAAGF,EAAS,GACpCsE,EAAUnJ,EAAI8F,EAAI9F,EAClBmJ,EAAUlJ,EAAI6F,EAAI7F,CACpB,CAIFjD,KAAKuC,SAASoB,SAASwI,GACvBnM,KAAK4C,oBAAoB4D,IAAIuC,EAAIoD,EACnC,CAEAL,cAAAA,CAAe/C,GAEb,IADY/I,KAAKwB,QAAQyK,IAAIlD,GACnB,OAEV/I,KAAK0C,gBAAgB0J,OAAOrD,GAG5B,MAAMoD,EAAYnM,KAAK4C,oBAAoBqJ,IAAIlD,GAC3CoD,IACFnM,KAAKuC,SAAS4F,YAAYgE,GAC1BA,EAAU/J,UACVpC,KAAK4C,oBAAoBwJ,OAAOrD,GAEpC,CAEAiD,cAAAA,GACEhM,KAAK0C,gBAAgBmG,QAAQE,GAAM/I,KAAK8L,eAAe/C,IACvD/I,KAAK0C,gBAAgBiF,OACvB,CAEAR,cAAAA,GACE,GAAkC,IAA9BnH,KAAK0C,gBAAgBjB,KACvB,OAGF,MAAM4K,EAAcC,MAAMC,KAAKvM,KAAK0C,iBAG9B8J,EAAaxM,KAAKyM,cAAcJ,GAGtCrM,KAAK0C,gBAAgBiF,QAGjB3H,KAAK0M,kBAAoBF,EAAWrL,OAAS,GAC/CnB,KAAK0M,iBAAiBF,GAGxB5L,QAAQC,IAAI,WAAW2L,EAAWrL,0BACpC,CAIAwL,SAAAA,CAAUC,GAgBR,GAfAhM,QAAQiM,MAAM,4CACdjM,QAAQiM,MAAM,6BACdjM,QAAQiM,MAAM,4CACdjM,QAAQiM,MAAM,yBAA0BD,GACxChM,QAAQiM,MAAM,4BAA6BD,GAC3ChM,QAAQiM,MAAM,YAAaP,MAAMQ,QAAQF,IAGzChM,QAAQiM,MAAM,gCACd7M,KAAKwB,QAAQqH,QAAQ,CAACC,EAAKC,KACzB/I,KAAK+M,aAAahE,KAEpBnI,QAAQiM,MAAM,6BAA8B7M,KAAKwB,QAAQC,MAGrDmL,GAAsC,iBAAhBA,EAExB,GAAIN,MAAMQ,QAAQF,GAChBhM,QAAQiM,MAAM,eAAeD,EAAYzL,iCACzCyL,EAAY/D,QAAQ,CAACZ,EAAS+E,KAC5BpM,QAAQiM,MAAM,kBAAkBG,KAAUC,KAAKC,UAAUjF,IACzDjI,KAAKmN,mBAAmBlF,SAErB,CAEL,MAAMmF,EAASC,OAAOD,OAAOR,GAC7BhM,QAAQiM,MAAM,eAAeO,EAAOjM,kCACpCiM,EAAOvE,QAAQ,CAACZ,EAAS+E,KACvBpM,QAAQiM,MAAM,kBAAkBG,KAAUC,KAAKC,UAAUjF,IACzDjI,KAAKmN,mBAAmBlF,IAE5B,MAEArH,QAAQiM,MAAM,gCAAiCD,GAGjDhM,QAAQiM,MAAM,4CACdjM,QAAQiM,MAAM,4BAA4B7M,KAAKwB,QAAQC,oBACvDb,QAAQiM,MAAM,0BAA2BP,MAAMC,KAAKvM,KAAKwB,QAAQ8L,SACjE1M,QAAQiM,MAAM,4CAGV7M,KAAKoD,gBACPpD,KAAKqI,sBAET,CAEAkF,UAAAA,CAAWxE,EAAIyE,GACb,MAAM1E,EAAM9I,KAAKwB,QAAQyK,IAAIlD,GAC7B,GAAKD,EAAL,CAGA,IAAK,MAAO7B,EAAKwG,KAAUJ,OAAOK,QAAQF,GACxC1E,EAAI7B,GAAOwG,EAIT3E,aAAe3E,SACGwJ,IAAhBH,EAAM/F,YAAwCkG,IAAjBH,EAAM9F,aACnBiG,IAAhBH,EAAMzD,YAA0C4D,IAAnBH,EAAMI,UAErC5N,KAAK6N,qBAAqB/E,GAZpB,CAeZ,CAEA+E,oBAAAA,CAAqB/E,GAEnBA,EAAInB,QAGAmB,EAAIrB,OAASqB,EAAIpB,SACnBoB,EAAI1E,UAAU0E,EAAIiB,OAAS,UAC3BjB,EAAIlB,SAAS,EAAG,EAAGkB,EAAIrB,MAAOqB,EAAIpB,QAClCoB,EAAIvE,WAIFuE,EAAI8E,WACN9E,EAAI8E,SAAW9E,EAAI8E,SAEvB,CAEAE,YAAAA,CAAa/E,EAAIgF,GACf,MAAMjF,EAAM9I,KAAKwB,QAAQyK,IAAIlD,GACxBD,SAEa6E,IAAdI,EAAQ/K,IAAiB8F,EAAI9F,EAAI+K,EAAQ/K,QAC3B2K,IAAdI,EAAQ9K,IAAiB6F,EAAI7F,EAAI8K,EAAQ9K,GAGzC6F,aAAe3E,SACKwJ,IAAlBI,EAAQtG,YAA0CkG,IAAnBI,EAAQrG,QAEzC9G,QAAQC,IAAI,sDAGlB,CAEAkM,YAAAA,CAAahE,GACX,MAAMD,EAAM9I,KAAKwB,QAAQyK,IAAIlD,GAC7B,GAAID,EAAK,CACP9I,KAAKuC,SAAS4F,YAAYW,GAC1B9I,KAAKwB,QAAQ4K,OAAOrD,GAGpBD,EAAI1G,QAAQ,CAAE4L,UAAU,EAAMxJ,SAAS,EAAOyJ,aAAa,IAG3D,MAAM9B,EAAYnM,KAAK4C,oBAAoBqJ,IAAIlD,GAC3CoD,IACFnM,KAAKuC,SAAS4F,YAAYgE,GAC1BA,EAAU/J,QAAQ,CAAE4L,UAAU,EAAMxJ,SAAS,EAAOyJ,aAAa,IACjEjO,KAAK4C,oBAAoBwJ,OAAOrD,IAIlC/I,KAAK0C,gBAAgB0J,OAAOrD,GAE5BnI,QAAQC,IAAI,kBAAkBkI,qCAChC,CACF,CAEA0D,aAAAA,CAAcyB,GACZ,IAAK5B,MAAMQ,QAAQoB,IAAuB,IAAfA,EAAI/M,OAE7B,YADAP,QAAQc,KAAK,kDAIfd,QAAQC,IAAI,iBAAiBqN,EAAI/M,kBAAmB+M,GAGpD,MAAMC,EAAiB,GAgCvB,OA7BAD,EAAIrF,QAAQE,IACV,MAAMD,EAAM9I,KAAKwB,QAAQyK,IAAIlD,GAC7B,GAAID,EAAK,CACP9I,KAAKuC,SAAS4F,YAAYW,GAC1B9I,KAAKwB,QAAQ4K,OAAOrD,GAGpBD,EAAI1G,QAAQ,CAAE4L,UAAU,EAAMxJ,SAAS,EAAOyJ,aAAa,IAG3D,MAAM9B,EAAYnM,KAAK4C,oBAAoBqJ,IAAIlD,GAC3CoD,IACFnM,KAAKuC,SAAS4F,YAAYgE,GAC1BA,EAAU/J,QAAQ,CAAE4L,UAAU,EAAMxJ,SAAS,EAAOyJ,aAAa,IACjEjO,KAAK4C,oBAAoBwJ,OAAOrD,IAIlC/I,KAAK0C,gBAAgB0J,OAAOrD,GAE5BoF,EAAejN,KAAK6H,EACtB,MACEnI,QAAQc,KAAK,UAAUqH,8BAI3BnI,QAAQC,IAAI,gBAAgBsN,EAAehN,+BAGpCgN,CACT,CAEAC,oBAAAA,CAAqBF,GACd5B,MAAMQ,QAAQoB,KACjBA,EAAM,CAACA,IAGT,IAAIG,GAAW,EACf,MAAMC,EAAS,GAEfJ,EAAIrF,QAAQE,IAEN/I,KAAKwB,QAAQqK,IAAI9C,KACnBuF,EAAOpN,KAAK,UAAU6H,0BACtBsF,GAAW,GAGTrO,KAAK4C,oBAAoBiJ,IAAI9C,KAC/BuF,EAAOpN,KAAK,2BAA2B6H,kBACvCsF,GAAW,GAGTrO,KAAK0C,gBAAgBmJ,IAAI9C,KAC3BuF,EAAOpN,KAAK,UAAU6H,kCACtBsF,GAAW,GAIDrO,KAAKuC,SAASyL,SAASO,KAAKC,GAASA,EAAMC,YAAc1F,KAEnEuF,EAAOpN,KAAK,UAAU6H,gCACtBsF,GAAW,KAKf,MAAMK,EAAsB1O,KAAKuC,SAASyL,SAASW,OAAOH,GAEjDA,EAAMC,YAAczO,KAAKwB,QAAQqK,IAAI2C,EAAMC,YAGhDC,EAAoBvN,OAAS,IAC/BmN,EAAOpN,KAAK,GAAGwN,EAAoBvN,kDACnCkN,GAAW,GAIb,MAAMO,EAAevB,OAAOC,KAAKuB,GAAyB1N,OAW1D,OAVIyN,EAAe,KACjBN,EAAOpN,KAAK,gCAAgC0N,uBAGzCP,EAGHzN,QAAQC,IAAI,uCAAuCqN,EAAI/M,0BAFvDP,QAAQc,KAAK,mCAAoC4M,GAK5C,CACLQ,QAAST,EACTC,OAAQA,EACRM,aAAcA,EACdG,gBAAiBL,EAAoBvN,OAEzC,CAEA6N,cAAAA,GACE,MAAMC,EAAejP,KAAKuC,SAASyL,SAAS7M,OACtC+N,EAAelP,KAAKwB,QAAQC,KAC5BmB,EAAsB5C,KAAK4C,oBAAoBnB,KAC/CiB,EAAkB1C,KAAK0C,gBAAgBjB,KACvCoB,EAAgB7C,KAAK6C,cAAcpB,KAEzC,MAAO,CACLwN,eACAC,eACAtM,sBACAF,kBACAG,gBACAsM,oBAAqBD,EAAetM,EAAsBF,EAAkBG,EAC5EuM,iBAAkB/B,OAAOC,KAAKuB,GAAyB1N,OACvDkO,qBAAsBhC,OAAOC,KAAKgC,GAA6BnO,OAEnE,CAIAgM,kBAAAA,CAAmBlF,GACjBrH,QAAQC,IAAI,0BAA2BoH,GACvCrH,QAAQC,IAAI,qBAAsB,CAChCkI,GAAId,EAAQc,GACZW,KAAMzB,EAAQyB,KACd1G,EAAGiF,EAAQjF,EACXC,EAAGgF,EAAQhF,EACXwE,MAAOQ,EAAQR,MACfC,OAAQO,EAAQP,OAChBG,OAAQI,EAAQJ,OAChBkC,MAAO9B,EAAQ8B,MACfwF,iBAAkBtH,EAAQ8B,QAI5B,MAAMA,EAAQ/J,KAAKwP,eAAevH,EAAQ8B,OAC1CnJ,QAAQC,IAAI,oBAAqBkJ,EAAO,eAAgBA,GAGxD,IAAIL,EAAOzB,EAAQyB,KACnB,IAAKA,EAEH,GADA9I,QAAQc,KAAK,wDAAyDuG,QAC/C0F,IAAnB1F,EAAQJ,OACV6B,EAAO,cACF,QAAsBiE,IAAlB1F,EAAQR,YAA0CkG,IAAnB1F,EAAQP,OAChDgC,EAAO,gBACF,SAAqBiE,IAAjB1F,EAAQuC,KAIjB,YADA5J,QAAQiM,MAAM,gCAAiC5E,GAF/CyB,EAAO,MAIT,CAGF,GAAa,cAATA,EAAsB,CAExB,IAAKzB,EAAQR,QAAUQ,EAAQP,QAAUO,EAAQR,OAAS,GAAKQ,EAAQP,QAAU,EAE/E,YADA9G,QAAQc,KAAK,8CAA+CuG,GAI9DrH,QAAQC,IAAI,2BAA4B,CACtCkI,GAAId,EAAQc,GACZ/F,EAAGiF,EAAQjF,EACXC,EAAGgF,EAAQhF,EACXwE,MAAOQ,EAAQR,MACfC,OAAQO,EAAQP,OAChBqC,MAAOA,IAET/J,KAAK8J,gBACH7B,EAAQc,GACRd,EAAQjF,EACRiF,EAAQhF,EACRgF,EAAQR,MACRQ,EAAQP,OACRqC,GAEFnJ,QAAQC,IAAI,kDAAmDb,KAAKwB,QAAQC,KAC9E,KAAoB,WAATiI,GACT9I,QAAQC,IAAI,wBAAyB,CACnCkI,GAAId,EAAQc,GACZ/F,EAAGiF,EAAQjF,EACXC,EAAGgF,EAAQhF,EACX4E,OAAQI,EAAQJ,OAChBkC,MAAOA,IAET/J,KAAKgK,aACH/B,EAAQc,GACRd,EAAQjF,EACRiF,EAAQhF,EACRgF,EAAQJ,OACRkC,GAEFnJ,QAAQC,IAAI,gCACM,SAAT6I,GACT9I,QAAQC,IAAI,sBAAuB,CACjCkI,GAAId,EAAQc,GACZyB,KAAMvC,EAAQuC,KACdxH,EAAGiF,EAAQjF,EACXC,EAAGgF,EAAQhF,EACXwH,SAAUxC,EAAQwC,SAClBV,MAAOA,IAET/J,KAAKuK,WACHtC,EAAQc,GACRd,EAAQuC,KACRvC,EAAQjF,EACRiF,EAAQhF,EACRgF,EAAQwC,SACRV,GAEFnJ,QAAQC,IAAI,8BAEZD,QAAQiM,MAAM,uBAAwBnD,EAE1C,CAEA8F,cAAAA,CAAezF,GAEb,MAAqB,iBAAVA,EACFA,EAIY,iBAAVA,EACLA,EAAM0F,WAAW,KACZC,SAAS3F,EAAM4F,UAAU,GAAI,IAG/BD,SAAS3F,EAAO,IAIlB,OACT,CAEA6F,kBAAAA,CAAmBC,EAAUrC,GAC3B5M,QAAQC,IAAI,qCAAsCgP,EAAUrC,GAC5DxN,KAAKuN,WAAWsC,EAAUrC,EAC5B,CAEAsC,kBAAAA,CAAmBD,GACjBjP,QAAQC,IAAI,0BAA2BgP,GACvC7P,KAAK+M,aAAa8C,EACpB,CAEAE,SAAAA,CAAUhH,GACR,OAAO/I,KAAKwB,QAAQyK,IAAIlD,EAC1B,CAEAiH,aAAAA,GACE,OAAO1D,MAAMC,KAAKvM,KAAKwB,QAAQkM,WAAWuC,IAAI,EAAElH,EAAID,MAAI,CACtDC,KACAW,KAAMZ,EAAIjJ,YAAYqQ,KACtBlN,EAAG8F,EAAI9F,EACPC,EAAG6F,EAAI7F,IAEX,CAEAkN,mBAAAA,GACE,OAAOnQ,KAAKuD,mBAAmBxB,UACjC,CAIAqO,kBAAAA,CAAmBC,EAAQC,EAAUtN,EAAGC,EAAG8G,GACzC,IAAInE,EAAS5F,KAAK6C,cAAcoJ,IAAIoE,GAGpC,MAAME,EAAWxG,GAA0B,iBAAVA,GAAsBA,EAAM0F,WAAW,KACpEC,SAAS3F,EAAM4F,UAAU,GAAI,IAC7B,SAEJ,IAAK/J,EAAQ,CAEXA,EAAS,IAAIpD,EAGb,MAAMgO,EAAU,IAAIC,EAAYzQ,KAAKwD,eACrCgN,EAAQE,KAAOH,EAGf,MAAMI,EAAQ,IAAIhG,EAAU2F,EAAU,CACpC7F,SAAU,GACVG,KAAM,SACNgG,WAAY,OACZC,OAAQN,EACRO,gBAAiB,EACjBC,YAAY,EACZC,gBAAiB,EACjBC,gBAAiB,GACjBC,mBAAoB,IAEtBP,EAAM3N,EAAI,GACV2N,EAAM1N,KAEN2C,EAAOjC,SAAS6M,GAChB5K,EAAOjC,SAASgN,GAChB/K,EAAOV,OAAS,IAEhBlF,KAAK6C,cAAc2D,IAAI6J,EAAQzK,GAC/B5F,KAAKuC,SAASoB,SAASiC,EACzB,CAGKA,EAAOuL,aACVvL,EAAOuL,WAAa,CAAEnO,IAAGC,IAAGmO,KAAM/Q,YAAYC,QAGhD,MAAMA,EAAMD,YAAYC,MAClB+Q,EAAK/Q,EAAMsF,EAAOuL,WAAWC,KAEnC,GAAIC,EAAK,GAAKA,EAAK,IAAK,CACtB,MAAMC,EAAatQ,KAAKkB,IAAImP,EAAK,IAAK,GACtCzL,EAAO5C,EAAI4C,EAAOuL,WAAWnO,GAAKA,EAAI4C,EAAOuL,WAAWnO,GAAKsO,EAC7D1L,EAAO3C,EAAI2C,EAAOuL,WAAWlO,GAAKA,EAAI2C,EAAOuL,WAAWlO,GAAKqO,CAC/D,MAEE1L,EAAO5C,EAAIA,EACX4C,EAAO3C,EAAIA,EAGb2C,EAAOuL,WAAa,CAAEnO,IAAGC,IAAGmO,KAAM9Q,EACpC,CAEAiR,kBAAAA,CAAmBlB,GACjB,MAAMzK,EAAS5F,KAAK6C,cAAcoJ,IAAIoE,GAClCzK,IACF5F,KAAKuC,SAAS4F,YAAYvC,GAC1BA,EAAOxD,UACPpC,KAAK6C,cAAcuJ,OAAOiE,GAE9B,CAEAmB,qBAAAA,GACE5Q,QAAQC,IAAI,gCAAgCb,KAAK6C,cAAcpB,iBAC/DzB,KAAK6C,cAAcgG,QAAQ,CAACjD,EAAQyK,KAClCrQ,KAAKuC,SAAS4F,YAAYvC,GAC1BA,EAAOxD,YAETpC,KAAK6C,cAAc8E,QACnB/G,QAAQC,IAAI,6BACd,CAEA4Q,oBAAAA,CAAqBC,EAAa,KAEhC1R,KAAK2R,gBAAkBC,YAAY,KACjC5R,KAAK6R,kBACJH,GACH9Q,QAAQC,IAAI,mCAAmC6Q,EAAa,QAC9D,CAEAI,mBAAAA,GACM9R,KAAK2R,kBACPI,cAAc/R,KAAK2R,iBACnB3R,KAAK2R,gBAAkB,KACvB/Q,QAAQC,IAAI,4BAEhB,CAEAgR,cAAAA,GACEjR,QAAQC,IAAI,uCACZ,IAAImR,EAAqB,EACrBC,EAAkB,EAGtBjS,KAAK4C,oBAAoBiG,QAAQ,CAACsD,EAAWpD,KACtC/I,KAAKwB,QAAQqK,IAAI9C,KACpB/I,KAAKuC,SAAS4F,YAAYgE,GAC1BA,EAAU/J,UACVpC,KAAK4C,oBAAoBwJ,OAAOrD,GAChCiJ,OAKJhS,KAAK0C,gBAAgBmG,QAAQE,IACtB/I,KAAKwB,QAAQqK,IAAI9C,IACpB/I,KAAK0C,gBAAgB0J,OAAOrD,KAKhC,MAAMmJ,EAAiB7R,YAAYC,MAAS,IAC5CN,KAAK6C,cAAcgG,QAAQ,CAACjD,EAAQyK,KAC9BzK,EAAOuL,YAAcvL,EAAOuL,WAAWC,KAAOc,IAChDlS,KAAKuR,mBAAmBlB,GACxB4B,OAIAD,EAAqB,GAAKC,EAAkB,EAC9CrR,QAAQC,IAAI,qBAAqBmR,iBAAkCC,qBAEnErR,QAAQC,IAAI,8CAEhB,CAIAgJ,UAAAA,GACE,MAAO,OAAS7I,KAAKmR,SAASC,SAAS,IAAIC,OAAO,EAAG,EACvD,CAEAC,QAAAA,CAASvI,GACP/J,KAAKmD,aAAe4G,CACtB,CAEAwI,cAAAA,GACE,MAAM/Q,EAAU,GAWhB,OAVAxB,KAAKwB,QAAQqH,QAAQ,CAACC,EAAKC,KAEzBvH,EAAQN,KAAK,CACX6H,KACAW,KAAMZ,EAAIjJ,YAAYqQ,KACtBlN,EAAG8F,EAAI9F,EACPC,EAAG6F,EAAI7F,MAIJ,CAAEzB,UACX,CAEAY,OAAAA,GAEMpC,KAAKuD,oBACPvD,KAAKuD,mBAAmBnB,UAItBpC,KAAKwD,eACPxD,KAAKwD,cAAcpB,UAIrBpC,KAAKwB,QAAQqH,QAAQC,IACfA,GAA8B,mBAAhBA,EAAI1G,SACpB0G,EAAI1G,YAGRpC,KAAKwB,QAAQmG,QAEb3H,KAAK4C,oBAAoBiG,QAAQsD,IAC3BA,GAA0C,mBAAtBA,EAAU/J,SAChC+J,EAAU/J,YAGdpC,KAAK4C,oBAAoB+E,QAEzB3H,KAAK6C,cAAcgG,QAAQjD,IACrBA,GAAoC,mBAAnBA,EAAOxD,SAC1BwD,EAAOxD,YAGXpC,KAAK6C,cAAc8E,OACrB,CAGAS,gBAAkB,KAClBoK,cAAgB,KAChBC,gBAAkB,KAClBjL,cAAgB,KCzwCX,MAAMkL,EACT7S,WAAAA,CAAY8S,EAAU,IAClB3S,KAAKE,eAAiByS,EAAQzS,gBAAkB,IAChDF,KAAK4S,iBAAmBD,EAAQC,kBAAoB,IACpD5S,KAAK6S,gBAAkB,IAAIpQ,IAC3BzC,KAAK8S,eAAiB,GACtB9S,KAAK+S,MAAQ,CACTC,cAAe,EACfC,eAAgB,EAChBC,WAAYC,IACZC,WAAY,EACZC,aAAc,EAEtB,CAEAC,aAAAA,CAAcC,EAAWC,GACrBxT,KAAK6S,gBAAgBrM,IAAI+M,EAAW,CAChCE,SAAUpT,YAAYC,MACtBoJ,KAAM8J,GAEd,CAEAE,WAAAA,CAAYH,GACR,MAAMI,EAAU3T,KAAK6S,gBAAgB5G,IAAIsH,GACzC,IAAKI,EACD,YAGJ,MAAMC,EAAUvT,YAAYC,MAAQqT,EAAQF,SAY5C,OAXAzT,KAAK6S,gBAAgBzG,OAAOmH,GAG5BvT,KAAK6T,cAAcD,EAASD,EAAQjK,MAGhCkK,EAAU5T,KAAK4S,mBACfhS,QAAQc,KAAK,6BAA6BV,KAAKC,MAAM2S,YAAkBD,EAAQjK,gBAC/E1J,KAAK+S,MAAMM,gBAGRO,CACX,CAEAC,aAAAA,CAAcD,EAASJ,GAEnBxT,KAAK8S,eAAe5R,KAAK,CACrB0S,UACAlK,KAAM8J,EACNM,UAAWC,KAAKzT,QAIhBN,KAAK8S,eAAe3R,OAASnB,KAAKE,gBAClCF,KAAK8S,eAAe1R,QAIxBpB,KAAK+S,MAAMC,gBACXhT,KAAK+S,MAAMG,WAAalS,KAAKkB,IAAIlC,KAAK+S,MAAMG,WAAYU,GACxD5T,KAAK+S,MAAMK,WAAapS,KAAKmB,IAAInC,KAAK+S,MAAMK,WAAYQ,GAGxD,MAAMI,EAAMhU,KAAK8S,eAAelR,OAAO,CAACqS,EAAKC,IAASD,EAAMC,EAAKN,QAAS,GAC1E5T,KAAK+S,MAAME,eAAiBe,EAAMhU,KAAK8S,eAAe3R,MAC1D,CAEAgT,aAAAA,CAAcC,GACV,GAAmC,IAA/BpU,KAAK8S,eAAe3R,OACpB,OAAO,EAIX,MAAMkT,EAASrU,KAAK8S,eACf7C,IAAIiE,GAAQA,EAAKN,SACjBU,KAAK,CAACzS,EAAGC,IAAMD,EAAIC,GAGlBkL,EAAQhM,KAAKuT,KAAMH,EAAa,IAAOC,EAAOlT,QAAU,EAC9D,OAAOkT,EAAOrT,KAAKmB,IAAI,EAAG6K,GAC9B,CAEAjL,QAAAA,GACI,MAAO,CACHiR,cAAehT,KAAK+S,MAAMC,cAC1BC,eAAgBjS,KAAKC,MAAkC,IAA5BjB,KAAK+S,MAAME,gBAAwB,IAC9DC,WAAYlT,KAAK+S,MAAMG,aAAeC,IAAW,EAAInS,KAAKC,MAA8B,IAAxBjB,KAAK+S,MAAMG,YAAoB,IAC/FE,WAAYpS,KAAKC,MAA8B,IAAxBjB,KAAK+S,MAAMK,YAAoB,IACtDoB,IAAKxT,KAAKC,MAA+B,IAAzBjB,KAAKmU,cAAc,KAAa,IAChDM,IAAKzT,KAAKC,MAA+B,IAAzBjB,KAAKmU,cAAc,KAAa,IAChDO,IAAK1T,KAAKC,MAA+B,IAAzBjB,KAAKmU,cAAc,KAAa,IAChDd,aAAcrT,KAAK+S,MAAMM,aACzBsB,YAAa3U,KAAK8S,eAAe3R,OACjC0R,gBAAiB7S,KAAK6S,gBAAgBpR,KAE9C,CAEAmT,cAAAA,CAAepB,GACX,MAAMqB,EAAW7U,KAAK8S,eAAenE,OAAOuF,GAAQA,EAAKxK,OAAS8J,GAClE,GAAwB,IAApBqB,EAAS1T,OACT,OAAO,KAGX,MAAM2T,EAAYD,EAAS5E,IAAIiE,GAAQA,EAAKN,SAASU,KAAK,CAACzS,EAAGC,IAAMD,EAAIC,GAClEkS,EAAMc,EAAUlT,OAAO,CAACqS,EAAKc,IAAQd,EAAMc,EAAK,GAEhDZ,EAAiBa,IACnB,MAAMhI,EAAQhM,KAAKuT,KAAMS,EAAI,IAAOF,EAAU3T,QAAU,EACxD,OAAO2T,EAAU9T,KAAKmB,IAAI,EAAG6K,KAGjC,MAAO,CACHwG,cACAyB,MAAOJ,EAAS1T,OAChB8R,eAAgBjS,KAAKC,MAAO+S,EAAMa,EAAS1T,OAAU,KAAO,IAC5D+R,WAAYlS,KAAKC,MAAqB,IAAf6T,EAAU,IAAY,IAC7C1B,WAAYpS,KAAKC,MAAwC,IAAlC6T,EAAUA,EAAU3T,OAAS,IAAY,IAChEqT,IAAKxT,KAAKC,MAA0B,IAApBkT,EAAc,KAAa,IAC3CM,IAAKzT,KAAKC,MAA0B,IAApBkT,EAAc,KAAa,IAC3CO,IAAK1T,KAAKC,MAA0B,IAApBkT,EAAc,KAAa,IAEnD,CAEAe,QAAAA,GACI,MAAMnC,EAAQ/S,KAAK+B,WACnBnB,QAAQC,IAAI,8BACZD,QAAQC,IAAI,mBAAmBkS,EAAMC,iBACrCpS,QAAQC,IAAI,oBAAoBkS,EAAME,oBACtCrS,QAAQC,IAAI,gBAAgBkS,EAAMG,gBAClCtS,QAAQC,IAAI,gBAAgBkS,EAAMK,gBAClCxS,QAAQC,IAAI,iBAAiBkS,EAAMyB,SACnC5T,QAAQC,IAAI,QAAQkS,EAAM0B,SAC1B7T,QAAQC,IAAI,QAAQkS,EAAM2B,SAC1B9T,QAAQC,IAAI,0BAA0BkS,EAAMM,gBAC5CzS,QAAQC,IAAI,iBAAiBkS,EAAM4B,eACnC/T,QAAQC,IAAI,qBAAqBkS,EAAMF,kBAC3C,CAEAsC,KAAAA,GACInV,KAAK6S,gBAAgBlL,QACrB3H,KAAK8S,eAAiB,GACtB9S,KAAK+S,MAAQ,CACTC,cAAe,EACfC,eAAgB,EAChBC,WAAYC,IACZC,WAAY,EACZC,aAAc,EAEtB,EAGG,MAAM+B,EACTvV,WAAAA,CAAYwV,EAAc3D,EAAa,IACnC1R,KAAKqV,aAAeA,EACpBrV,KAAK0R,WAAaA,EAClB1R,KAAKsV,cAAgB,KACrBtV,KAAKuV,WAAa,KAClBvV,KAAK2J,OACT,CAEAA,KAAAA,GACI3J,KAAKuV,WAAa3D,YAAY,KACtB5R,KAAKsV,gBACLtV,KAAKqV,aAAarV,KAAKsV,cAActS,EAAGhD,KAAKsV,cAAcrS,GAC3DjD,KAAKsV,cAAgB,OAE1BtV,KAAK0R,WACZ,CAEAhR,MAAAA,CAAOsC,EAAGC,GACNjD,KAAKsV,cAAgB,CAAEtS,IAAGC,IAC9B,CAEAuS,IAAAA,GACQxV,KAAKuV,aACLxD,cAAc/R,KAAKuV,YACnBvV,KAAKuV,WAAa,KAE1B,EAGG,MAAME,EACT5V,WAAAA,CAAY6V,EAAKC,EAAWC,GACxB5V,KAAK0V,IAAMA,EACX1V,KAAK2V,UAAYA,EACjB3V,KAAK4V,SAAWA,EAChB5V,KAAK6V,GAAK,KACV7V,KAAK8V,aAAc,EACnB9V,KAAK+V,kBAAoB,EACzB/V,KAAKgW,qBAAuB,EAC5BhW,KAAKiW,eAAiB,IAGtBjW,KAAKkW,iBAAmB,EAGxBlW,KAAKmW,eAAiB,IAAIzD,EAAe,CACrCxS,eAAgB,IAChB0S,iBAAkB,MAItB5S,KAAKoW,eAAiB,CAClBC,mBAAoB,EACpBC,qBAAsB,EACtBC,UAAWxC,KAAKzT,OAIpBN,KAAKwW,eAAiB,IAAIpB,EAAe,CAACpS,EAAGC,KACzCjD,KAAKyW,KAAK,CAAE/M,KAAM,SAAU1G,IAAGC,QAInCjD,KAAK0W,cAAgB,OACrB1W,KAAK2W,aAAe,OACpB3W,KAAK4W,gBAAkB,OACvB5W,KAAK6W,mBAAqB,OAC1B7W,KAAK8W,iBAAmB,OACxB9W,KAAK+W,eAAiB,OACtB/W,KAAKoI,gBAAkB,OACvBpI,KAAKyL,gBAAkB,OACvBzL,KAAKyS,gBAAkB,OACvBzS,KAAK0M,iBAAmB,OACxB1M,KAAKgX,QAAU,OACfhX,KAAKiX,eAAiB,OACtBjX,KAAKkX,cAAgB,MACzB,CAEAC,OAAAA,GACIvW,QAAQC,IAAI,4BAA4Bb,KAAK0V,OAE7C,IACI1V,KAAK6V,GAAK,IAAIuB,UAAUpX,KAAK0V,KAC7B1V,KAAKqX,oBACT,CAAE,MAAOxK,GACLjM,QAAQiM,MAAM,8BAA+BA,GAC7C7M,KAAKgX,QAAQnK,GACb7M,KAAKsX,mBACT,CACJ,CAEAD,kBAAAA,GACIrX,KAAK6V,GAAG0B,OAAS,KACb3W,QAAQC,IAAI,uBACZb,KAAK8V,aAAc,EACnB9V,KAAK+V,kBAAoB,EAGzB/V,KAAKyW,KAAK,CACN/M,KAAM,OACNiM,UAAW3V,KAAK2V,UAChBC,SAAU5V,KAAK4V,WAGf5V,KAAK+V,kBAAoB,GACzB/V,KAAKkX,iBAIblX,KAAK6V,GAAG2B,UAAatM,IACjB,IACI,MAAMC,EAAO8B,KAAKwK,MAAMvM,EAAMC,MAC9BnL,KAAK0X,cAAcvM,EACvB,CAAE,MAAO0B,GACLjM,QAAQiM,MAAM,mCAAoCA,GAClD7M,KAAKgX,QAAQnK,EACjB,GAGJ7M,KAAK6V,GAAG8B,QAAWzM,IACftK,QAAQC,IAAI,0BAA2BqK,EAAM0M,KAAM1M,EAAM2M,QACzD7X,KAAK8V,aAAc,EAEd5K,EAAM4M,UACP9X,KAAKsX,qBAIbtX,KAAK6V,GAAGkC,QAAWlL,IACfjM,QAAQiM,MAAM,mBAAoBA,GAClC7M,KAAKgX,QAAQnK,GAErB,CAEA6K,aAAAA,CAAcvM,GAEV,GAAIA,EAAKoI,UAAW,CAChB,MAAMK,EAAU5T,KAAKmW,eAAezC,YAAYvI,EAAKoI,WACrC,OAAZK,GAAoBA,EAAU,KAE9BhT,QAAQoX,MAAM,WAAW7M,EAAKzB,iBAAiB1I,KAAKC,MAAM2S,OAElE,CAEA,OAAQzI,EAAKzB,MACT,IAAK,eACD1J,KAAK0W,cAAcvL,GACnB,MAEJ,IAAK,cACDnL,KAAK2W,aAAaxL,GAClB,MAEJ,IAAK,iBACDnL,KAAK4W,gBAAgBzL,GACrB,MAEJ,IAAK,oBACDnL,KAAK6W,mBAAmB1L,GACxB,MAEJ,IAAK,WACDnL,KAAK8W,iBAAiB3L,EAAK8M,OAC3B,MAEJ,IAAK,SACDjY,KAAK+W,eAAe5L,GACpB,MAEJ,IAAK,eAEGA,EAAK+M,SAAW5L,MAAMQ,QAAQ3B,EAAK+M,UACnC/M,EAAK+M,QAAQrP,QAAQjD,IACjB5F,KAAK+W,eAAenR,KAG5B,MAEJ,IAAK,gBACD5F,KAAKoI,gBAAgB+C,GACrB,MAEJ,IAAK,gBAED,MAAMgN,EAAclL,KAAKC,UAAU/B,GAAMhK,OACzCnB,KAAKoW,eAAeC,oBAAsB8B,EAC1CnY,KAAKoW,eAAeE,uBACpB1V,QAAQC,IAAI,2BAA2BsX,mBAA6BnY,KAAKoW,eAAeC,6BAA6BrW,KAAKoW,eAAeE,kCACzItW,KAAKyL,gBAAgBN,GACrB,MAEJ,IAAK,gBACDnL,KAAKyS,gBAAgBtH,GACrB,MAEJ,IAAK,iBACDnL,KAAK0M,iBAAiBvB,GACtB,MAEJ,IAAK,QACDvK,QAAQiM,MAAM,gBAAiB1B,EAAKiN,SACpCpY,KAAKgX,QAAQ,IAAIqB,MAAMlN,EAAKiN,UAC5B,MAEJ,QACIxX,QAAQc,KAAK,wBAAyByJ,EAAKzB,MAEvD,CAEA+M,IAAAA,CAAKtL,EAAMmN,GAAe,GAClBtY,KAAK6V,IAAM7V,KAAK6V,GAAG0C,aAAenB,UAAUoB,MAExCF,GAA8B,WAAdnN,EAAKzB,OACrByB,EAAKoI,YAAcvT,KAAKkW,iBACxBlW,KAAKmW,eAAe7C,cAAcnI,EAAKoI,UAAWpI,EAAKzB,OAG3D1J,KAAK6V,GAAGY,KAAKxJ,KAAKC,UAAU/B,KAE5BvK,QAAQc,KAAK,6CAA8CyJ,EAEnE,CAEAsN,gBAAAA,CAAiBzV,EAAGC,GAChBjD,KAAKwW,eAAe9V,OAAOsC,EAAGC,EAClC,CAEAyV,gBAAAA,CAAiBC,GACb3Y,KAAKyW,KAAK,CACN/M,KAAM,gBACNiP,OAAQA,IACT,EACP,CAEAC,gBAAAA,CAAiB/I,EAAU9B,GACvB/N,KAAKyW,KAAK,CACN/M,KAAM,gBACN,YAAamG,EACb9B,QAASA,IACV,EACP,CAEA8K,gBAAAA,CAAiBhJ,GACb7P,KAAKyW,KAAK,CACN/M,KAAM,gBACN,YAAamG,IACd,EACP,CAEAyH,iBAAAA,GACI,GAAItX,KAAK+V,mBAAqB/V,KAAKgW,qBAG/B,OAFApV,QAAQiM,MAAM,0CACd7M,KAAKgX,QAAQ,IAAIqB,MAAM,kCAI3BrY,KAAK+V,oBACL,MAAM+C,EAAQ9Y,KAAKiW,eAAiBjV,KAAK+X,IAAI,EAAG/Y,KAAK+V,kBAAoB,GAEzEnV,QAAQC,IAAI,8BAA8BiY,gBAAoB9Y,KAAK+V,qBAAqB/V,KAAKgW,yBAC7FhW,KAAKiX,iBAEL+B,WAAW,KACPhZ,KAAKmX,WACN2B,EACP,CAEAG,iBAAAA,GACI,MAAMC,GAAkBnF,KAAKzT,MAAQN,KAAKoW,eAAeG,eACzD,MAAO,CACH4C,WAAYnZ,KAAKoW,eAAeC,mBAChC+C,aAAcpZ,KAAKoW,eAAeE,qBAClC+C,uBAAwBrZ,KAAKoW,eAAeE,qBAAuB,EAC7DtV,KAAKC,MAAMjB,KAAKoW,eAAeC,mBAAqBrW,KAAKoW,eAAeE,sBACxE,EACNgD,eAAgBJ,EAAiB,EAC3BlY,KAAKC,MAAMjB,KAAKoW,eAAeC,mBAAqB6C,GACpD,EACNA,eAAgBlY,KAAKC,MAAuB,GAAjBiY,GAAuB,GAE1D,CAEAK,eAAAA,GACI,OAAOvZ,KAAKmW,eAAepU,UAC/B,CAEAyX,qBAAAA,CAAsBhG,GAClB,OAAOxT,KAAKmW,eAAevB,eAAepB,EAC9C,CAEAiG,eAAAA,GACIzZ,KAAKmW,eAAejB,UACxB,CAEAwE,iBAAAA,GACI,MAAM3G,EAAQ/S,KAAKiZ,oBACnBrY,QAAQC,IAAI,uCAAwC,CAChD,uBAAwB,GAAGkS,EAAMoG,mBACjC,yBAA0BpG,EAAMqG,aAChC,wBAAyB,GAAGrG,EAAMsG,+BAClC,mBAAoB,GAAGtG,EAAMuG,2BAC7B,eAAgB,GAAGvG,EAAMmG,0BAEjC,CAEAS,UAAAA,GAEQ3Z,KAAKoW,eAAeE,qBAAuB,IAC3C1V,QAAQC,IAAI,qDACZb,KAAK0Z,qBAIL1Z,KAAKwW,iBACLxW,KAAKwW,eAAehB,OACpB5U,QAAQC,IAAI,kCAIZb,KAAK6V,KACL7V,KAAK6V,GAAG+D,MAAM,IAAM,mBACpB5Z,KAAK6V,GAAK,KACV7V,KAAK8V,aAAc,GAGvBlV,QAAQC,IAAI,sCAChB,CAEAgZ,iBAAAA,CAAkBC,GACd9Z,KAAKyW,KAAK,CACN/M,KAAM,iBACN,aAAcoQ,GAEtB,CAEAD,iBAAAA,CAAkBC,GACd9Z,KAAKyW,KAAK,CACN/M,KAAM,iBACN,aAAcoQ,GAEtB,EC1eG,MAAMC,EACTla,WAAAA,GACIG,KAAKga,MAAQhT,SAASiT,eAAe,cACrCja,KAAKka,UAAYlT,SAASiT,eAAe,cACzCja,KAAKma,aAAenT,SAASiT,eAAe,iBAC5Cja,KAAKoa,qBACT,CAEAA,mBAAAA,GAEIpT,SAASqT,iBAAiB,YAAYxR,QAAQyR,IAC1CA,EAAIjV,iBAAiB,QAAS,KAC1B,MAAMkV,EAAMD,EAAIE,QAAQD,IACxBva,KAAKya,UAAUF,OAKvBva,KAAKka,UAAU7U,iBAAiB,SAAUqV,UACtCpV,EAAEO,uBACI7F,KAAK2a,gBAGf3a,KAAKma,aAAa9U,iBAAiB,SAAUqV,UACzCpV,EAAEO,uBACI7F,KAAK4a,kBAEnB,CAEAH,SAAAA,CAAUF,GAENvT,SAASqT,iBAAiB,YAAYxR,QAAQyR,IAC1CA,EAAIO,UAAUC,OAAO,SAAUR,EAAIE,QAAQD,MAAQA,KAIvDvT,SAASqT,iBAAiB,cAAcxR,QAAQkS,IAC5CA,EAAKF,UAAUC,OAAO,SAAUC,EAAKhS,KAAO,GAAGwR,YAInDvT,SAASqT,iBAAiB,kBAAkBxR,QAAQmS,IAChDA,EAAIC,YAAc,IAE1B,CAEAC,SAAAA,GACI,OAAO,IAAIC,QAASC,IAChBpb,KAAKga,MAAMa,UAAUxY,OAAO,UAC5BrC,KAAKqb,YAAcD,GAE3B,CAEAE,SAAAA,GACItb,KAAKga,MAAMa,UAAUpa,IAAI,SAC7B,CAEA,iBAAMka,GACF,MAAMY,EAAQvU,SAASiT,eAAe,eAAexM,MAC/C+N,EAAWxU,SAASiT,eAAe,kBAAkBxM,MACrDgO,EAAUzU,SAASiT,eAAe,eAExC,IACI,MAAMyB,QAAiBC,MAAM,aAAc,CACvCC,OAAQ,OACRC,YAAa,UACbC,QAAS,CACL,eAAgB,oBAEpBC,KAAM9O,KAAKC,UAAU,CAAEqO,QAAOC,eAG5BrQ,QAAauQ,EAASM,OAExB7Q,EAAK2D,SAAW3D,EAAKA,MACrBnL,KAAKsb,YACLtb,KAAKqb,YAAY,CACb1F,UAAWxK,EAAKA,KAAK,cACrBkF,OAAQlF,EAAKA,KAAK,WAClBmF,SAAUnF,EAAKA,KAAKmF,YAGxBmL,EAAQR,YAAc9P,EAAK0B,OAAS,cAE5C,CAAE,MAAOA,GACLjM,QAAQiM,MAAM,eAAgBA,GAC9B4O,EAAQR,YAAc,qCAC1B,CACJ,CAEA,oBAAML,GACF,MAAMtK,EAAWtJ,SAASiT,eAAe,qBAAqBxM,MACxD8N,EAAQvU,SAASiT,eAAe,kBAAkBxM,MAClD+N,EAAWxU,SAASiT,eAAe,qBAAqBxM,MACxDgO,EAAUzU,SAASiT,eAAe,kBAExC,IACI,MAAMyB,QAAiBC,MAAM,gBAAiB,CAC1CC,OAAQ,OACRC,YAAa,UACbC,QAAS,CACL,eAAgB,oBAEpBC,KAAM9O,KAAKC,UAAU,CAAEoD,WAAUiL,QAAOC,eAGtCrQ,QAAauQ,EAASM,OAExB7Q,EAAK2D,cAEC9O,KAAKic,mBAAmBV,EAAOC,GAErCC,EAAQR,YAAc9P,EAAK0B,OAAS,qBAE5C,CAAE,MAAOA,GACLjM,QAAQiM,MAAM,sBAAuBA,GACrC4O,EAAQR,YAAc,qCAC1B,CACJ,CAEA,wBAAMgB,CAAmBV,EAAOC,GAE5Bxb,KAAKya,UAAU,SAGfzT,SAASiT,eAAe,eAAexM,MAAQ8N,EAC/CvU,SAASiT,eAAe,kBAAkBxM,MAAQ+N,aAGvCb,aACf,ECjIG,MAAMuB,EACXrc,WAAAA,CAAYE,GACVC,KAAKD,cAAgBA,EACrBC,KAAKmc,YAAc,GACnBnc,KAAKoc,WAAY,CACnB,CAGAC,mBAAAA,CAAoBpH,EAAQ,KAC1BrU,QAAQC,IAAI,cAAcoU,qBAE1B,MAAMzT,EAAU,GAGhB,IAAK,IAAI8a,EAAI,EAAGA,EAAIrH,EAAOqH,IAAK,CAC9B,MAAMtZ,EAHO,KAGFhC,KAAKmR,SAAW,IACrBlP,EAJO,KAIFjC,KAAKmR,SAAW,IACrBzI,EAAO1I,KAAKmR,SAAW,GAAM,YAAc,SAC3CpI,EAAQ/I,KAAKub,MAAsB,SAAhBvb,KAAKmR,UAE9B,IAAIlK,EAIFA,EAHW,cAATyB,EAGQ,CACRX,GAAI,aAAauT,IACjB5S,KAAM,YACN1G,IAAGC,IAAGwE,MALM,GAAqB,GAAhBzG,KAAKmR,SAKTzK,OAJA,GAAqB,GAAhB1G,KAAKmR,SAIFpI,SAIb,CACRhB,GAAI,aAAauT,IACjB5S,KAAM,SACN1G,IAAGC,IAAG4E,OAJO,GAAqB,GAAhB7G,KAAKmR,SAITpI,SAIlBvI,EAAQN,KAAK+G,EACf,CAEA,OAAOzG,CACT,CAGAgb,eAAAA,CAAgBhb,GACdZ,QAAQC,IAAI,WAAWW,EAAQL,sCAG/BnB,KAAKD,cAAcyB,QAAQqH,QAAQ,CAACC,EAAKC,KACnCA,EAAG0G,WAAW,eAChBzP,KAAKD,cAAcgN,aAAahE,KAKpCvH,EAAQqH,QAAQZ,IACdjI,KAAKD,cAAcoN,mBAAmBlF,KAGxCrH,QAAQC,IAAI,UAAUW,EAAQL,uCAAuCnB,KAAKD,cAAcyB,QAAQC,OAClG,CAGAgb,kBAAAA,CAAmBC,EAAW,KAC5B,OAAO,IAAIvB,QAASC,IAClB,MAAMnb,EAAa,GACnB,IAAIG,EAAWC,YAAYC,MACvBC,EAAa,EAEjB,MAAMoc,EAAaA,KACjB,MAAMrc,EAAMD,YAAYC,MAGxB,GAFAC,IAEID,EAAMF,GAAY,IAAM,CAC1B,MAAMwc,EAAM5b,KAAKC,MAAoB,IAAbV,GAAsBD,EAAMF,IACpDH,EAAWiB,KAAK0b,GAChBhc,QAAQC,IAAI,QAAQ+b,uBAAyB5c,KAAK6c,2BAClDtc,EAAa,EACbH,EAAWE,CACb,GAIIwc,EAAiBA,KACrBH,KAGF3c,KAAKD,cAAcD,IAAIU,OAAOC,IAAIqc,GAGlC9D,WAAW,KACThZ,KAAKD,cAAcD,IAAIU,OAAO6B,OAAOya,GAErC,MAAMC,EAAS9c,EAAW2B,OAAO,CAACC,EAAGC,IAAMD,EAAIC,EAAG,GAAK7B,EAAWkB,OAC5D6b,EAAShc,KAAKkB,OAAOjC,GACrBgd,EAASjc,KAAKmB,OAAOlC,GAErBid,EAAS,CACbR,WACAK,OAAQ/b,KAAKC,MAAM8b,GACnBC,SACAC,SACAhd,aACAkd,aAAcnd,KAAKD,cAAcyB,QAAQC,KACzC2b,eAAgBpd,KAAK6c,yBAGvBjc,QAAQC,IAAI,oBAAqBqc,GACjC9B,EAAQ8B,IACPR,IAEP,CAEAG,qBAAAA,GACE,IAAIzT,EAAU,EAId,OAHApJ,KAAKD,cAAcyB,QAAQqH,QAAQC,IAC7BA,EAAIM,SAASA,MAEZA,CACT,CAGA,iBAAMiU,CAAYC,EAAc,IAAMC,EAAQ,IAC5C3c,QAAQC,IAAI,6BAA6Byc,YAAsBC,WAE/D,MAAMC,EAASxd,KAAKD,cAAcwC,SAASS,EACrCya,EAASzd,KAAKD,cAAcwC,SAASU,EACrCya,EAAQJ,EAAcC,EACtBI,EAAQL,EAAcC,EAE5B,IAAK,IAAIjB,EAAI,EAAGA,EAAIiB,EAAOjB,IACzBtc,KAAKD,cAAcwC,SAASS,EAAIwa,EAAUE,EAAQpB,EAClDtc,KAAKD,cAAcwC,SAASU,EAAIwa,EAAUE,EAAQrB,QAG5C,IAAInB,QAAQC,GAAWwC,sBAAsBxC,IAGrDxa,QAAQC,IAAI,0BACd,CAGA,kBAAMgd,CAAaC,EAAa,CAAC,GAAK,EAAK,GAAMpB,EAAW,KAC1D9b,QAAQC,IAAI,6CAA6Cid,EAAWC,KAAK,WAEzE,MAAMC,EAAetB,EAAWoB,EAAW3c,OAE3C,IAAK,MAAM8c,KAAeH,EAAY,CACpC,MAAMI,EAAale,KAAKD,cAAcwC,SAASgE,MAAMvD,EAE/Cua,EAAQ,GACRY,GAFYF,EAAcC,GAEFX,EAE9B,IAAK,IAAIjB,EAAI,EAAGA,EAAIiB,EAAOjB,IAAK,CAC9B,MAAMhW,EAAW4X,EAAcC,EAAY7B,EAC3Ctc,KAAKD,cAAcwC,SAASgE,MAAMC,IAAIF,aAG5B6U,QAAQC,GAAWwC,sBAAsBxC,GACrD,OAEM,IAAID,QAAQC,GAAWpC,WAAWoC,EAAS4C,GACnD,CAEApd,QAAQC,IAAI,2BACd,CAGA,0BAAMud,GACJ,GAAIpe,KAAKoc,UACPxb,QAAQc,KAAK,wCADf,CAKA1B,KAAKoc,WAAY,EACjBxb,QAAQC,IAAI,8CAEZ,IAEE,MAAMwd,EAAcre,KAAKqc,oBAAoB,KAC7Crc,KAAKwc,gBAAgB6B,SAGf,IAAIlD,QAAQC,GAAWpC,WAAWoC,EAAS,MAEjDxa,QAAQC,IAAI,kBAAkBb,KAAK6c,kDAAkD7c,KAAKD,cAAcyB,QAAQC,cAGhHb,QAAQC,IAAI,2CACZ,MAAMyd,QAAsBte,KAAKyc,mBAAmB,KACpDzc,KAAKmc,YAAYjb,KAAK,CAAEqd,KAAM,YAAaD,IAG3C1d,QAAQC,IAAI,8CACZ,MAAM2d,EAAaxe,KAAKyc,mBAAmB,gBAChCY,YAAY,IAAK,IAC5B,MAAMoB,QAAmBD,EACzBxe,KAAKmc,YAAYjb,KAAK,CAAEqd,KAAM,SAAUE,IAGxC7d,QAAQC,IAAI,+CACZ,MAAM6d,EAAc1e,KAAKyc,mBAAmB,WACtCzc,KAAK6d,aAAa,CAAC,GAAK,GAAK,IAAK,IAAM,KAC9C,MAAMc,QAAoBD,EAC1B1e,KAAKmc,YAAYjb,KAAK,CAAEqd,KAAM,UAAWI,IAGzC/d,QAAQC,IAAI,2CACZ,MAAM+d,EAAiB5e,KAAK6e,2BAC5B7e,KAAKmc,YAAYjb,KAAK,CAAEqd,KAAM,aAAcK,IAG5C5e,KAAK8e,cAEP,CAAE,MAAOjS,GACPjM,QAAQiM,MAAM,2BAA4BA,EAC5C,CAAC,QACC7M,KAAKoc,WAAY,CACnB,CA9CA,CA+CF,CAEAyC,wBAAAA,GAEE,MAAME,EAAU,GAGVC,EAAYhf,KAAKD,cAAcwC,SAASS,EACxCic,EAAYjf,KAAKD,cAAcwC,SAASU,EAmC9C,MAhCsB,CACpB,CAAED,EAAG,EAAGC,EAAG,EAAGiN,KAAM,UACpB,CAAElN,EAAG,IAAMC,EAAG,IAAMiN,KAAM,WAC1B,CAAElN,GAAG,IAAOC,GAAG,IAAOiN,KAAM,WAC5B,CAAElN,EAAG,IAAMC,EAAG,EAAGiN,KAAM,SACvB,CAAElN,EAAG,EAAGC,EAAG,IAAMiN,KAAM,UAGXrH,QAAQqW,IACpBlf,KAAKD,cAAcwC,SAASS,EAAIkc,EAAIlc,EACpChD,KAAKD,cAAcwC,SAASU,EAAIic,EAAIjc,EAGpCjD,KAAKD,cAAcsI,uBAEnB,MAAM8W,EAAenf,KAAK6c,wBAC1BkC,EAAQ7d,KAAK,CACXke,SAAUF,EAAIhP,KACdmP,UAAWH,EAAIlc,EACfsc,UAAWJ,EAAIjc,EACfma,eAAgB+B,EAChBhC,aAAcnd,KAAKD,cAAcyB,QAAQC,OAG3Cb,QAAQC,IAAI,GAAGqe,EAAIhP,SAASiP,uBAI9Bnf,KAAKD,cAAcwC,SAASS,EAAIgc,EAChChf,KAAKD,cAAcwC,SAASU,EAAIgc,EAChCjf,KAAKD,cAAcsI,uBAEZ,CAAEkX,UAAWR,EACtB,CAEAD,YAAAA,GACEle,QAAQC,IAAI,sCAEZ,MAAM2e,EAAaxf,KAAKmc,YAAY5N,KAAKkR,GAAgB,WAAXA,EAAElB,MAC1CmB,EAAU1f,KAAKmc,YAAY5N,KAAKkR,GAAgB,QAAXA,EAAElB,MACvCoB,EAAW3f,KAAKmc,YAAY5N,KAAKkR,GAAgB,SAAXA,EAAElB,MACxCqB,EAAc5f,KAAKmc,YAAY5N,KAAKkR,GAAgB,YAAXA,EAAElB,MAcjD,GAZIiB,GACF5e,QAAQC,IAAI,mBAAmB2e,EAAWzC,eAAeyC,EAAWxC,eAAewC,EAAWvC,UAG5FyC,GACF9e,QAAQC,IAAI,gBAAgB6e,EAAQ3C,eAAe2C,EAAQ1C,eAAe0C,EAAQzC,UAGhF0C,GACF/e,QAAQC,IAAI,iBAAiB8e,EAAS5C,eAAe4C,EAAS3C,eAAe2C,EAAS1C,UAGpF2C,EAAa,CACf,MAAML,EAAYK,EAAYL,UACxBM,EAAaN,EAAU3d,OAAO,CAACoS,EAAKgB,IAAMhB,EAAMgB,EAAEoI,eAAgB,GAAKmC,EAAUpe,OACjF2e,EAAa9e,KAAKkB,OAAOqd,EAAUtP,IAAI+E,GAAKA,EAAEoI,iBAC9C2C,EAAa/e,KAAKmB,OAAOod,EAAUtP,IAAI+E,GAAKA,EAAEoI,iBAEpDxc,QAAQC,IAAI,8BAA8BG,KAAKC,MAAM4e,4BAAqCC,WAAoBC,aAAsBR,EAAU,GAAGpC,qBACnJ,CAGA,MAAM6C,EAAShgB,KAAKigB,oBACpBrf,QAAQC,IAAI,0BAAyBmf,EAAS,SAAW,WAEpDA,IACHpf,QAAQC,IAAI,WACR2e,GAAcA,EAAWxC,OAAS,IAAIpc,QAAQC,IAAI,yBAClD6e,GAAWA,EAAQ1C,OAAS,IAAIpc,QAAQC,IAAI,sBAC5C8e,GAAYA,EAAS3C,OAAS,IAAIpc,QAAQC,IAAI,uBAEtD,CAEAof,iBAAAA,GACE,MAAMT,EAAaxf,KAAKmc,YAAY5N,KAAKkR,GAAgB,WAAXA,EAAElB,MAC1CmB,EAAU1f,KAAKmc,YAAY5N,KAAKkR,GAAgB,QAAXA,EAAElB,MACvCoB,EAAW3f,KAAKmc,YAAY5N,KAAKkR,GAAgB,SAAXA,EAAElB,MAE9C,QAASiB,GAAcA,EAAWxC,QAAU,OACnC0C,GAAWA,EAAQ1C,QAAU,OAC7B2C,GAAYA,EAAS3C,QAAU,GAC1C,CAGA,sBAAOkD,CAAgBngB,GACrB,MAAMogB,EAAS,IAAIjE,EAAgBnc,GAEnC,OADAogB,EAAO/B,uBACA+B,CACT,EAIoB,oBAAXC,SACTA,OAAOlE,gBAAkBA,GCjU3B,MAAMmE,EACFxgB,WAAAA,GACIG,KAAKD,cAAgB,KACrBC,KAAKsgB,SAAW,KAChBtgB,KAAKugB,YAAc,KACnBvgB,KAAK2V,UAAY,KACjB3V,KAAKqQ,OAAS,KACdrQ,KAAKsQ,SAAW,KAChBtQ,KAAK4V,SAAW5V,KAAKwgB,cACrBxgB,KAAKygB,YAAc,EACvB,CAEAD,WAAAA,GAGI,IAAI5K,EADW,IAAI8K,gBAAgBN,OAAOO,SAASC,QAC7B3U,IAAI,UAE1B,IAAK2J,EAAU,CAEXA,EAAW,iBAEX,MAAMiL,EAAS,IAAIC,IAAIV,OAAOO,UAC9BE,EAAOE,aAAava,IAAI,SAAUoP,GAClCwK,OAAOY,QAAQC,aAAa,CAAA,EAAI,GAAIJ,EACxC,CAEA,OAAOjL,CACX,CAEA,UAAMsL,GAsBF,GArBAtgB,QAAQC,IAAI,gCAGZmG,SAASiT,eAAe,aAAagB,YAAcjb,KAAK4V,SAGxD5V,KAAKugB,YAAc,IAAIxG,EAGvB/Z,KAAK2V,UAAYwL,aAAaC,QAAQ,aAElCphB,KAAK2V,kBAEiB3V,KAAKqhB,oBAGvBrhB,KAAK2V,UAAY,KACjBwL,aAAaG,WAAW,gBAI3BthB,KAAK2V,UAAW,CAEjB3V,KAAKuhB,oBACL,MAAMC,QAAiBxhB,KAAKugB,YAAYrF,YACxClb,KAAK2V,UAAY6L,EAAS7L,UAC1B3V,KAAKqQ,OAASmR,EAASnR,OACvBrQ,KAAKsQ,SAAWkR,EAASlR,SACzB6Q,aAAaM,QAAQ,YAAazhB,KAAK2V,UAC3C,CAGA3V,KAAKuhB,oBAGLvhB,KAAK0hB,aAGL1hB,KAAK2hB,gBAGL3hB,KAAK4hB,kBAELhhB,QAAQC,IAAI,wCAChB,CAEA0gB,iBAAAA,GACI,MAAMM,EAAgB7a,SAASiT,eAAe,kBAC1C4H,GACAA,EAAchH,UAAUpa,IAAI,SAEpC,CAEA,qBAAM4gB,GACF,IACI,MAAM3F,QAAiBC,MAAM,eAAgB,CACzCE,YAAa,UACbC,QAAS,CACLgG,cAAiB9hB,KAAK2V,aAI9B,GAAI+F,EAASqG,GAAI,CACb,MAAM5W,QAAauQ,EAASM,OAC5B,GAAI7Q,EAAK2D,SAAW3D,EAAKA,MAAQA,EAAKA,KAAK6W,MAIvC,OAHAhiB,KAAKqQ,OAASlF,EAAKA,KAAK,WACxBnL,KAAKsQ,SAAWnF,EAAKA,KAAKmF,SAC1B1P,QAAQC,IAAI,oBAAqBb,KAAKsQ,YAG9C,CACJ,CAAE,MAAOzD,GACLjM,QAAQiM,MAAM,6BAA8BA,EAChD,CAEA,OAAO,CACX,CAEA6U,UAAAA,GACI,MAAMO,EAAYjb,SAASiT,eAAe,oBAGpCna,EAAM,IAAIoiB,EAAiB,CAC7Bza,MAAO2Y,OAAO+B,WACdza,OAAQ0Y,OAAOgC,YACfC,gBAAiB,QACjBC,SAAUlC,SAGd6B,EAAUM,YAAYziB,EAAIsF,MAE1BpF,KAAKD,cAAgB,IAAIuC,EAAcxC,GAGvCsgB,OAAOjQ,oBAAsB,IAClBnQ,KAAKD,cAAcoQ,sBAI9BiQ,OAAO7G,gBAAkB,IAChBvZ,KAAKsgB,SACHtgB,KAAKsgB,SAAS/G,kBADM,KAI/B6G,OAAO3G,gBAAkB,KAChBzZ,KAAKsgB,SAIVtgB,KAAKsgB,SAAS7G,kBAHV7Y,QAAQc,KAAK,qCAMrB0e,OAAO5G,sBAAyBhG,GACvBxT,KAAKsgB,SACHtgB,KAAKsgB,SAAS9G,sBAAsBhG,GADhB,KAK/BxT,KAAKD,cAAcyH,cAAgB,CAACxE,EAAGC,KAC/BjD,KAAKsgB,UAAYtgB,KAAKsgB,SAASxK,aAC/B9V,KAAKsgB,SAAS7H,iBAAiBzV,EAAGC,IAI1CjD,KAAKD,cAAcqI,gBAAmBuQ,IAC9B3Y,KAAKsgB,UAAYtgB,KAAKsgB,SAASxK,aAC/B9V,KAAKsgB,SAAS5H,iBAAiBC,IAIvC3Y,KAAKD,cAAc0L,gBAAkB,CAACoE,EAAU9B,KACxC/N,KAAKsgB,UAAYtgB,KAAKsgB,SAASxK,aAC/B9V,KAAKsgB,SAAS1H,iBAAiB/I,EAAU9B,IAIjD/N,KAAKD,cAAc0S,gBAAmB5C,IAC9B7P,KAAKsgB,UAAYtgB,KAAKsgB,SAASxK,aAC/B9V,KAAKsgB,SAASzH,iBAAiBhJ,IAIvC7P,KAAKD,cAAc2M,iBAAoBoN,IAC/B9Z,KAAKsgB,UAAYtgB,KAAKsgB,SAASxK,aAC/B9V,KAAKsgB,SAASzG,kBAAkBC,IAKxC9Z,KAAKD,cAAcyiB,aAAgBpb,IAC/BJ,SAASiT,eAAe,gBAAgBgB,YACpC7T,EAAKqb,OAAO,GAAGC,cAAgBtb,EAAKub,MAAM,IAGlD3iB,KAAKD,cAAc6iB,YAAc,CAAC5f,EAAGC,KACjC+D,SAASiT,eAAe,kBAAkBgB,YAAc,GAAGja,KAAKC,MAAM+B,OAAOhC,KAAKC,MAAMgC,MAG5FjD,KAAKD,cAAc8iB,aAAgBC,IAC/B9b,SAASiT,eAAe,cAAcgB,YAAc,GAAGja,KAAKC,MAAa,IAAP6hB,OAGtE9iB,KAAKD,cAAcgjB,oBAAuB9N,IACtCjO,SAASiT,eAAe,gBAAgBgB,YAAchG,GAK1DjV,KAAKD,cAAc0R,qBAAqB,KACxC7Q,QAAQC,IAAI,iDAChB,CAEA8gB,aAAAA,GAEI,MAEMqB,EAAQ,GAFkC,WAA7B5C,OAAOO,SAASsC,SAAwB,OAAS,UAEpC7C,OAAOO,SAASuC,WAAWljB,KAAK4V,WAEhE5V,KAAKsgB,SAAW,IAAI7K,EAAgBuN,EAAOhjB,KAAK2V,UAAW3V,KAAK4V,UAGhE5V,KAAKsgB,SAAS5J,cAAiBvL,IAC3BvK,QAAQiM,MAAM,mCACdjM,QAAQiM,MAAM,sBAAuB1B,GAGrC,MAAMyB,EAAczB,EAAK,iBAAmBA,EAAKyB,YACjDhM,QAAQiM,MAAM,wBAAyBD,GACvChM,QAAQiM,MAAM,2BAA4BD,GAC1ChM,QAAQiM,MAAM,sBAAuBD,EAAcA,EAAYzL,OAAS,GAGpEyL,GACAhM,QAAQiM,MAAM,6BACd7M,KAAKD,cAAc4M,UAAUC,GAC7BhM,QAAQiM,MAAM,+BAEdjM,QAAQiM,MAAM,6CAItB7M,KAAKsgB,SAAS1J,gBAAmBzL,IAE7BnL,KAAKygB,YAAYvf,KAAK,CAClB,UAAWiK,EAAKkF,QAAUlF,EAAK,WAC/BmF,SAAUnF,EAAKmF,SACfvG,MAAOoB,EAAKpB,QAEhB/J,KAAKmjB,mBAAmBnjB,KAAKygB,aAC7BzgB,KAAKojB,iBAAiB,GAAGjY,EAAKmF,kBAAmB,SAGrDtQ,KAAKsgB,SAASzJ,mBAAsB1L,IAEhC,MAAMkF,EAASlF,EAAKkF,QAAUlF,EAAK,WACnCnL,KAAKygB,YAAczgB,KAAKygB,YAAY9R,OAAO0U,IACtCA,EAAE,YAAcA,EAAEhT,UAAYA,GAEnCrQ,KAAKmjB,mBAAmBnjB,KAAKygB,aAC7BzgB,KAAKD,cAAcwR,mBAAmBlB,GACtCrQ,KAAKojB,iBAAiB,GAAGjY,EAAKmF,gBAAiB,SAGnDtQ,KAAKsgB,SAASxJ,iBAAoBmB,IAE9BjY,KAAKygB,YAAcxI,EACnBjY,KAAKmjB,mBAAmBnjB,KAAKygB,cAGjCzgB,KAAKsgB,SAASvJ,eAAkB5L,IAC5BnL,KAAKD,cAAcqQ,mBACfjF,EAAKkF,OACLlF,EAAKmF,SACLnF,EAAKnI,EACLmI,EAAKlI,EACLkI,EAAKpB,QAIb/J,KAAKsgB,SAASlY,gBAAmB+C,IAC7BnL,KAAKD,cAAcoN,mBAAmBhC,EAAKwN,SAG/C3Y,KAAKsgB,SAAS7U,gBAAmBN,IAE7B,MAAM0E,EAAW1E,EAAK,cAAgBA,EAAK0E,SAC3C7P,KAAKD,cAAc6P,mBAAmBC,EAAU1E,EAAKqC,QAGzDxN,KAAKsgB,SAAS7N,gBAAmBtH,IAE7B,MAAMkF,EAASlF,EAAKkF,QAAUlF,EAAK,WACnCnL,KAAKygB,YAAczgB,KAAKygB,YAAY9R,OAAO0U,IACtCA,EAAE,YAAcA,EAAEhT,UAAYA,GAEnCrQ,KAAKmjB,mBAAmBnjB,KAAKygB,aAC7BzgB,KAAKD,cAAcwR,mBAAmBlB,GACtCrQ,KAAKojB,iBAAiB,GAAGjY,EAAKmF,gBAAiB,SAGnDtQ,KAAKsgB,SAAS5T,iBAAoBvB,IAC9B,MAAM2O,EAAY3O,EAAK,eAAiBA,EAAK2O,WAAa,GAC1DlZ,QAAQC,IAAI,oCAAqCiZ,GAG7CA,EAAU3Y,OAAS,IACnB2Y,EAAUjR,QAAQgH,IACd7P,KAAKD,cAAcgN,aAAa8C,KAEpCjP,QAAQC,IAAI,qCAAqCiZ,EAAU3Y,oBAInEnB,KAAKsgB,SAAStJ,QAAWnK,IACrBjM,QAAQiM,MAAM,mBAAoBA,GAClC7M,KAAKojB,iBAAiB,mBAAoB,UAG9CpjB,KAAKsgB,SAASrJ,eAAiB,KAC3BjX,KAAKojB,iBAAiB,kBAAmB,YAG7CpjB,KAAKsgB,SAASpJ,cAAgB,KAC1BlX,KAAKojB,iBAAiB,cAAe,YAIzCpjB,KAAKsgB,SAASnJ,SAClB,CAEAyK,eAAAA,GAEI5a,SAASqT,iBAAiB,aAAaxR,QAAQyR,IAC3CA,EAAIjV,iBAAiB,QAAS,KAC1B,MAAM+B,EAAOkT,EAAIE,QAAQpT,KACzBpH,KAAKD,cAAcmH,QAAQE,GAG3BJ,SAASqT,iBAAiB,aAAaxR,QAAQ/G,GAC3CA,EAAE+Y,UAAUxY,OAAO,WACvBiY,EAAIO,UAAUpa,IAAI,cAKNuG,SAASiT,eAAe,gBAChC5U,iBAAiB,SAAWC,IACpCtF,KAAKD,cAAcuS,SAAShN,EAAEge,OAAO7V,SAIzCzG,SAAS3B,iBAAiB,UAAYC,IAElC,GAAyB,UAArBA,EAAEge,OAAOC,QAEb,OAAOje,EAAE2B,IAAIuc,eACT,IAAK,IACDxjB,KAAKyjB,WAAW,UAChB,MACJ,IAAK,IACDzjB,KAAKyjB,WAAW,aAChB,MACJ,IAAK,IACDzjB,KAAKyjB,WAAW,UAChB,MACJ,IAAK,IACGne,EAAEoe,SAAWpe,EAAEsG,WACftG,EAAEO,iBACF7F,KAAK2jB,sBAET,MACJ,IAAK,SACL,IAAK,YACIre,EAAEge,OAAOM,oBACVte,EAAEO,iBACF7F,KAAKD,cAAcoH,kBAEvB,MACJ,IAAK,KACG7B,EAAEoe,SAAWpe,EAAEue,WACfve,EAAEO,iBACEP,EAAEsG,SACF5L,KAAKD,cAAc+jB,OAEnB9jB,KAAKD,cAAcgkB,WAQvC,MAAMC,EAAYhd,SAASiT,eAAe,cACtC+J,GACAA,EAAU3e,iBAAiB,QAASqV,qBACrBuJ,UAGvB,CAEAR,UAAAA,CAAWrc,GACPpH,KAAKD,cAAcmH,QAAQE,GAG3BJ,SAASqT,iBAAiB,aAAaxR,QAAQyR,IACvCA,EAAIE,QAAQpT,OAASA,EACrBkT,EAAIO,UAAUpa,IAAI,UAElB6Z,EAAIO,UAAUxY,OAAO,WAGjC,CAEA8gB,kBAAAA,CAAmBlL,EAAQ,IACvB,MAAMgK,EAAYjb,SAASiT,eAAe,mBAC1CgI,EAAUiC,UAAY,GAEtBjM,EAAMpP,QAAQsb,IACV,MAAMC,EAAWpd,SAASqd,cAAc,OACxCD,EAASE,UAAY,YAErB,MAAMhU,EAAW6T,EAAK7T,SAChBvG,EAAQoa,EAAKpa,MACnBqa,EAASF,UAAY,2EACuCna,qCAChDuG,yBAEZ2R,EAAUM,YAAY6B,IAE9B,CAEAhB,gBAAAA,CAAiBhL,EAAS1O,EAAO,QAE7B9I,QAAQC,IAAI,IAAI6I,EAAKgZ,kBAAkBtK,IAG3C,CAEA,YAAM6L,GACF,UACUtI,MAAM,cAAe,CACvBC,OAAQ,OACRE,QAAS,CACL,eAAgB,mBAChBgG,cAAiB9hB,KAAK2V,YAGlC,CAAE,MAAO9I,GACLjM,QAAQiM,MAAM,gBAAiBA,EACnC,CAGAsU,aAAaG,WAAW,aAGpBthB,KAAKD,eACLC,KAAKD,cAAc+R,sBAInB9R,KAAKsgB,UACLtgB,KAAKsgB,SAAS3G,aAIlByG,OAAOO,SAAS4D,QACpB,CAEA,wBAAMZ,GAGF,GAFA/iB,QAAQC,IAAI,2FAEPb,KAAKD,cAKV,IACI,MAAMogB,EAAS,IAAIjE,EAAgBlc,KAAKD,qBAClCogB,EAAO/B,uBACbxd,QAAQC,IAAI,0CAChB,CAAE,MAAOgM,GACLjM,QAAQiM,MAAM,2BAA4BA,EAC9C,MAVIjM,QAAQiM,MAAM,iCAWtB,EAIJ,GAA4B,YAAxB7F,SAASuR,WACTvR,SAAS3B,iBAAiB,mBAAoB,KAC1C,MAAMvF,EAAM,IAAIugB,EAChBvgB,EAAIohB,OACJd,OAAOoE,aAAe1kB,QAEvB,CACH,MAAMA,EAAM,IAAIugB,EAChBvgB,EAAIohB,OACJd,OAAOoE,aAAe1kB,CAC1B"}
{"version":3,"file":"index-legacy-Bsvl23fm.js","sources":["../../src/canvas.js","../../src/websocket.js","../../src/auth.js","../../src/main.js"],"sourcesContent":["// src/canvas.js\n// Complete PixiJS Canvas Manager for CollabCanvas\nimport * as PIXI from 'pixi.js';\n\nexport class PerformanceMonitor {\n  constructor(app, canvasManager) {\n    this.app = app;\n    this.canvasManager = canvasManager;\n    this.fpsHistory = [];\n    this.maxHistorySize = 60;\n    this.currentFps = 60;\n    this.lastTime = performance.now();\n    this.frameCount = 0;\n\n    // Bind ticker update\n    this.app.ticker.add(this.update.bind(this));\n\n    console.log('PerformanceMonitor initialized');\n  }\n\n  update(deltaTime) {\n    // Calculate FPS based on delta time (in seconds)\n    const now = performance.now();\n    const deltaMs = now - this.lastTime;\n\n    if (deltaMs > 0) {\n      this.currentFps = Math.round(1000 / deltaMs);\n    }\n\n    this.lastTime = now;\n\n    // Add to history\n    this.fpsHistory.push(this.currentFps);\n    if (this.fpsHistory.length > this.maxHistorySize) {\n      this.fpsHistory.shift(); // Remove oldest entry\n    }\n\n    // Check for low FPS and log warnings\n    if (this.currentFps < 55) {\n      const avgFps = this.getAverageFps();\n      const objectCount = this.canvasManager ? this.canvasManager.objects.size : 0;\n      console.warn(`⚠️ Low FPS detected: ${this.currentFps} FPS (avg: ${avgFps.toFixed(1)}, objects: ${objectCount})`);\n    }\n  }\n\n  getAverageFps() {\n    if (this.fpsHistory.length === 0) return 60;\n    const sum = this.fpsHistory.reduce((a, b) => a + b, 0);\n    return sum / this.fpsHistory.length;\n  }\n\n  getStats() {\n    if (this.fpsHistory.length === 0) {\n      return {\n        current: this.currentFps,\n        average: 60,\n        min: 60,\n        max: 60\n      };\n    }\n\n    return {\n      current: this.currentFps,\n      average: Math.round(this.getAverageFps() * 10) / 10,\n      min: Math.min(...this.fpsHistory),\n      max: Math.max(...this.fpsHistory)\n    };\n  }\n\n  destroy() {\n    if (this.app && this.app.ticker) {\n      this.app.ticker.remove(this.update.bind(this));\n    }\n  }\n}\n\nexport class CanvasManager {\n  constructor(app) {\n    this.app = app;\n    this.viewport = new PIXI.Container();\n    this.objects = new Map(); // objectId -> PIXI Graphics\n    this.selectedObjects = new Set();\n    this.selectionIndicators = new Map(); // objectId -> selection box Graphics\n    this.remoteCursors = new Map(); // userId -> cursor container\n\n    // State\n    this.isPanning = false;\n    this.panStart = { x: 0, y: 0 };\n    this.currentTool = 'select'; // 'select', 'rectangle', 'circle', 'text'\n    this.currentColor = 0x3498db; // Default blue\n\n    // Drag state (centralized for performance)\n    this.isDragging = false;\n    this.draggedObject = null;\n    this.draggedObjectId = null;\n    this.dragOffset = { x: 0, y: 0 };\n    this.lastDragUpdate = 0;\n\n    // Viewport culling\n    this.cullingEnabled = true;\n    this.cullingPadding = 200; // Extra padding around viewport for smooth scrolling\n    this.lastViewportBounds = null;\n\n    // Performance monitoring\n    this.performanceMonitor = new PerformanceMonitor(app, this);\n\n    // Shared cursor texture for performance optimization\n    this.cursorTexture = this.createSharedCursorTexture();\n\n    // Viewport setup\n    this.app.stage.addChild(this.viewport);\n    this.viewport.sortableChildren = true;\n\n    // Grid background (optional visual aid)\n    this.drawGrid();\n\n    // Setup interaction\n    this.setupPanZoom();\n    this.setupCentralizedDrag(); // NEW: Centralized drag handler\n    this.setupKeyboardShortcuts();\n    this.setupToolHandlers();\n    this.setupViewportCulling();\n\n    console.log('Canvas initialized');\n  }\n\n  createSharedCursorTexture() {\n    // Create cursor shape using Graphics\n    const graphics = new PIXI.Graphics();\n\n    // Draw cursor pointer (triangle)\n    graphics.beginFill(0xFFFFFF); // White fill (will be tinted)\n    graphics.moveTo(0, 0);\n    graphics.lineTo(12, 18);\n    graphics.lineTo(6, 18);\n    graphics.lineTo(0, 24);\n    graphics.endFill();\n\n    // Render to texture\n    const texture = this.app.renderer.generateTexture(graphics, {\n      resolution: 1,\n      scaleMode: PIXI.SCALE_MODES.LINEAR\n    });\n\n    // Clean up graphics object\n    graphics.destroy();\n\n    return texture;\n  }\n\n  // ==================== Grid ====================\n  \n  drawGrid() {\n    const grid = new PIXI.Graphics();\n    grid.lineStyle(1, 0x333333, 0.3);\n    \n    const gridSize = 50;\n    const gridExtent = 5000;\n    \n    // Vertical lines\n    for (let x = -gridExtent; x <= gridExtent; x += gridSize) {\n      grid.moveTo(x, -gridExtent);\n      grid.lineTo(x, gridExtent);\n    }\n    \n    // Horizontal lines\n    for (let y = -gridExtent; y <= gridExtent; y += gridSize) {\n      grid.moveTo(-gridExtent, y);\n      grid.lineTo(gridExtent, y);\n    }\n    \n    grid.zIndex = -1;\n    this.viewport.addChild(grid);\n  }\n  \n  // ==================== Pan & Zoom ====================\n  \n  setupPanZoom() {\n    const canvas = this.app.view;\n    \n    // Pan with middle mouse or Alt+drag\n    canvas.addEventListener('mousedown', (e) => {\n      if (e.button === 1 || (e.button === 0 && e.altKey)) {\n        this.isPanning = true;\n        this.panStart = { x: e.clientX, y: e.clientY };\n        canvas.style.cursor = 'grabbing';\n        e.preventDefault();\n      }\n    });\n    \n    canvas.addEventListener('mousemove', (e) => {\n      if (this.isPanning) {\n        const dx = e.clientX - this.panStart.x;\n        const dy = e.clientY - this.panStart.y;\n        \n        this.viewport.x += dx;\n        this.viewport.y += dy;\n        \n        this.panStart = { x: e.clientX, y: e.clientY };\n      }\n    });\n    \n    canvas.addEventListener('mouseup', () => {\n      if (this.isPanning) {\n        this.isPanning = false;\n        canvas.style.cursor = 'default';\n      }\n    });\n    \n    // Zoom with mouse wheel\n    canvas.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      \n      const zoomFactor = e.deltaY > 0 ? 0.9 : 1.1;\n      const mouseX = e.clientX;\n      const mouseY = e.clientY;\n      \n      // Get position before zoom\n      const worldPosBefore = this.screenToWorld(mouseX, mouseY);\n      \n      // Apply zoom\n      const newScale = this.viewport.scale.x * zoomFactor;\n      if (newScale >= 0.1 && newScale <= 10) {\n        this.viewport.scale.set(newScale);\n        \n        // Adjust position to keep mouse over same world point\n        const worldPosAfter = this.screenToWorld(mouseX, mouseY);\n        this.viewport.x += (worldPosAfter.x - worldPosBefore.x) * this.viewport.scale.x;\n        this.viewport.y += (worldPosAfter.y - worldPosBefore.y) * this.viewport.scale.y;\n      }\n    }, { passive: false });\n  }\n\n  // ==================== Centralized Drag (Performance Optimized) ====================\n\n  setupCentralizedDrag() {\n    const canvas = this.app.view;\n\n    // Global mousemove handler (only one for all objects)\n    canvas.addEventListener('mousemove', (e) => {\n      if (this.isDragging && this.draggedObject) {\n        const worldPos = this.screenToWorld(e.clientX, e.clientY);\n\n        // Update position immediately\n        this.draggedObject.x = worldPos.x - this.dragOffset.x;\n        this.draggedObject.y = worldPos.y - this.dragOffset.y;\n\n        // Throttle network updates\n        const now = performance.now();\n        if (now - this.lastDragUpdate >= 16) { // 60 FPS\n          if (this.onObjectUpdated) {\n            this.onObjectUpdated(this.draggedObjectId, {\n              x: this.draggedObject.x,\n              y: this.draggedObject.y\n            });\n          }\n          this.lastDragUpdate = now;\n        }\n      }\n    });\n\n    // Global mouseup handler\n    canvas.addEventListener('mouseup', () => {\n      if (this.isDragging && this.draggedObject) {\n        this.draggedObject.alpha = 1;\n\n        // Send final position\n        if (this.onObjectUpdated) {\n          this.onObjectUpdated(this.draggedObjectId, {\n            x: this.draggedObject.x,\n            y: this.draggedObject.y\n          });\n        }\n\n        // Reset drag state\n        this.isDragging = false;\n        this.draggedObject = null;\n        this.draggedObjectId = null;\n      }\n    });\n  }\n\n  screenToWorld(screenX, screenY) {\n    return {\n      x: (screenX - this.viewport.x) / this.viewport.scale.x,\n      y: (screenY - this.viewport.y) / this.viewport.scale.y\n    };\n  }\n  \n  worldToScreen(worldX, worldY) {\n    return {\n      x: worldX * this.viewport.scale.x + this.viewport.x,\n      y: worldY * this.viewport.scale.y + this.viewport.y\n    };\n  }\n  \n  // ==================== Keyboard Shortcuts ====================\n  \n  setupKeyboardShortcuts() {\n    document.addEventListener('keydown', (e) => {\n      // Tool shortcuts\n      if (e.key === 'r' || e.key === 'R') {\n        this.setTool('rectangle');\n      } else if (e.key === 'c' || e.key === 'C') {\n        this.setTool('circle');\n      } else if (e.key === 't' || e.key === 'T') {\n        this.setTool('text');\n      } else if (e.key === 'v' || e.key === 'V' || e.key === 'Escape') {\n        this.setTool('select');\n      } else if (e.key === 'Delete' || e.key === 'Backspace') {\n        this.deleteSelected();\n      }\n    });\n  }\n  \n  setTool(tool) {\n    this.currentTool = tool;\n    console.log('Tool:', tool);\n    // Update UI indicator if you have one\n  }\n  \n  // ==================== Tool Handlers ====================\n  \n  setupToolHandlers() {\n    const canvas = this.app.view;\n    let drawStart = null;\n    let previewShape = null;\n    let lastPreviewUpdate = 0;\n    let previewUpdatePending = false;\n\n    // Track cursor movement\n    canvas.addEventListener('mousemove', (e) => {\n      const worldPos = this.screenToWorld(e.clientX, e.clientY);\n\n      // Notify about cursor movement\n      if (this.onCursorMoved) {\n        this.onCursorMoved(worldPos.x, worldPos.y);\n      }\n\n      // Handle preview shape drawing with RAF throttling\n      if (drawStart && previewShape && !previewUpdatePending) {\n        previewUpdatePending = true;\n        requestAnimationFrame(() => {\n          const now = performance.now();\n          // Throttle preview updates to 60 FPS\n          if (now - lastPreviewUpdate >= 16) {\n            const currentWorldPos = this.screenToWorld(e.clientX, e.clientY);\n            const width = currentWorldPos.x - drawStart.x;\n            const height = currentWorldPos.y - drawStart.y;\n\n            previewShape.clear();\n            previewShape.beginFill(this.currentColor);\n\n            if (this.currentTool === 'rectangle') {\n              previewShape.drawRect(drawStart.x, drawStart.y, width, height);\n            } else if (this.currentTool === 'circle') {\n              const radius = Math.sqrt(width * width + height * height);\n              previewShape.drawCircle(drawStart.x, drawStart.y, radius);\n            }\n\n            previewShape.endFill();\n            lastPreviewUpdate = now;\n          }\n          previewUpdatePending = false;\n        });\n      }\n    });\n\n    canvas.addEventListener('mousedown', (e) => {\n      if (e.button !== 0 || e.altKey) return; // Left click only, not panning\n      \n      const worldPos = this.screenToWorld(e.clientX, e.clientY);\n      \n      if (this.currentTool === 'rectangle' || this.currentTool === 'circle') {\n        drawStart = worldPos;\n        \n        // Create preview shape\n        previewShape = new PIXI.Graphics();\n        previewShape.alpha = 0.5;\n        this.viewport.addChild(previewShape);\n      }\n    });\n\n    canvas.addEventListener('mouseup', (e) => {\n      if (drawStart && previewShape) {\n        const worldPos = this.screenToWorld(e.clientX, e.clientY);\n        \n        // Create actual object\n        const objData = this.createToolObject(drawStart, worldPos);\n        \n        // Clean up preview\n        this.viewport.removeChild(previewShape);\n        previewShape = null;\n        drawStart = null;\n        \n        // Notify about new object (callback to WebSocket)\n        if (this.onObjectCreated) {\n          this.onObjectCreated(objData);\n        }\n      }\n    });\n  }\n\n  // ==================== Viewport Culling ====================\n\n  setupViewportCulling() {\n    // Listen for viewport changes (pan and zoom)\n    this.app.ticker.add(() => {\n      if (this.cullingEnabled) {\n        this.updateVisibleObjects();\n      }\n    });\n  }\n\n  updateVisibleObjects() {\n    // Calculate current viewport bounds in world coordinates\n    const viewportBounds = this.getViewportBounds();\n\n    // Check if viewport has changed significantly\n    if (!this.lastViewportBounds ||\n        Math.abs(viewportBounds.left - this.lastViewportBounds.left) > 50 ||\n        Math.abs(viewportBounds.top - this.lastViewportBounds.top) > 50 ||\n        Math.abs(viewportBounds.right - this.lastViewportBounds.right) > 50 ||\n        Math.abs(viewportBounds.bottom - this.lastViewportBounds.bottom) > 50) {\n\n      this.lastViewportBounds = viewportBounds;\n\n      // Update visibility for all objects\n      this.objects.forEach((obj, id) => {\n        const objBounds = this.getObjectBounds(obj);\n        const isVisible = this.isBoundsVisible(objBounds, viewportBounds);\n\n        // Only change visibility if it actually changed to avoid unnecessary operations\n        if (obj.visible !== isVisible) {\n          obj.visible = isVisible;\n        }\n      });\n    }\n  }\n\n  getViewportBounds() {\n    // Get screen dimensions\n    const screenWidth = this.app.renderer.width;\n    const screenHeight = this.app.renderer.height;\n\n    // Convert screen corners to world coordinates\n    const topLeft = this.screenToWorld(0, 0);\n    const bottomRight = this.screenToWorld(screenWidth, screenHeight);\n\n    return {\n      left: topLeft.x - this.cullingPadding,\n      top: topLeft.y - this.cullingPadding,\n      right: bottomRight.x + this.cullingPadding,\n      bottom: bottomRight.y + this.cullingPadding\n    };\n  }\n\n  getObjectBounds(obj) {\n    // Calculate object bounds based on type\n    if (obj.userData) {\n      if (obj.userData.type === 'rectangle') {\n        return {\n          left: obj.x,\n          top: obj.y,\n          right: obj.x + obj.userData.width,\n          bottom: obj.y + obj.userData.height\n        };\n      } else if (obj.userData.type === 'circle') {\n        const radius = obj.userData.radius;\n        return {\n          left: obj.x - radius,\n          top: obj.y - radius,\n          right: obj.x + radius,\n          bottom: obj.y + radius\n        };\n      }\n    }\n\n    // Fallback for objects without userData (like text)\n    if (obj.width && obj.height) {\n      return {\n        left: obj.x,\n        top: obj.y,\n        right: obj.x + obj.width,\n        bottom: obj.y + obj.height\n      };\n    }\n\n    // Last resort - treat as point\n    return {\n      left: obj.x,\n      top: obj.y,\n      right: obj.x,\n      bottom: obj.y\n    };\n  }\n\n  isBoundsVisible(objBounds, viewportBounds) {\n    // Check if object bounds intersect with viewport bounds\n    return !(objBounds.right < viewportBounds.left ||\n             objBounds.left > viewportBounds.right ||\n             objBounds.bottom < viewportBounds.top ||\n             objBounds.top > viewportBounds.bottom);\n  }\n\n  createToolObject(start, end) {\n    const id = this.generateId();\n\n    if (this.currentTool === 'rectangle') {\n      const width = Math.abs(end.x - start.x);\n      const height = Math.abs(end.y - start.y);\n      const x = Math.min(start.x, end.x);\n      const y = Math.min(start.y, end.y);\n\n      this.createRectangle(id, x, y, width, height, this.currentColor);\n\n      return {\n        id,\n        type: 'rectangle',\n        x, y, width, height,\n        color: this.colorToHexString(this.currentColor)\n      };\n    } else if (this.currentTool === 'circle') {\n      const dx = end.x - start.x;\n      const dy = end.y - start.y;\n      const radius = Math.sqrt(dx * dx + dy * dy);\n\n      this.createCircle(id, start.x, start.y, radius, this.currentColor);\n\n      return {\n        id,\n        type: 'circle',\n        x: start.x,\n        y: start.y,\n        radius,\n        color: this.colorToHexString(this.currentColor)\n      };\n    }\n  }\n  \n  // ==================== Object Creation ====================\n  \n  createRectangle(id, x, y, width, height, color) {\n    const rect = new PIXI.Graphics();\n    rect.beginFill(color);\n    rect.drawRect(0, 0, width, height);\n    rect.endFill();\n    rect.x = x;\n    rect.y = y;\n    rect.interactive = true;\n    rect.buttonMode = true;\n    rect.visible = true; // Start visible, culling will handle visibility\n\n    // Store dimensions for selection box\n    rect.userData = { width, height, type: 'rectangle' };\n\n    this.makeDraggable(rect, id);\n    this.makeSelectable(rect, id);\n\n    this.objects.set(id, rect);\n    this.viewport.addChild(rect);\n\n    return rect;\n  }\n  \n  createCircle(id, x, y, radius, color) {\n    const circle = new PIXI.Graphics();\n    circle.beginFill(color);\n    circle.drawCircle(0, 0, radius);\n    circle.endFill();\n    circle.x = x;\n    circle.y = y;\n    circle.interactive = true;\n    circle.buttonMode = true;\n    circle.visible = true; // Start visible, culling will handle visibility\n\n    // Store dimensions for selection box\n    circle.userData = { radius, type: 'circle' };\n\n    this.makeDraggable(circle, id);\n    this.makeSelectable(circle, id);\n\n    this.objects.set(id, circle);\n    this.viewport.addChild(circle);\n\n    return circle;\n  }\n  \n  createText(id, text, x, y, fontSize, color) {\n    const textObj = new PIXI.Text(text, {\n      fontSize,\n      fill: color,\n      fontFamily: 'Arial'\n    });\n    textObj.x = x;\n    textObj.y = y;\n    textObj.interactive = true;\n    textObj.buttonMode = true;\n    textObj.visible = true; // Start visible, culling will handle visibility\n\n    this.makeDraggable(textObj, id);\n    this.makeSelectable(textObj, id);\n\n    this.objects.set(id, textObj);\n    this.viewport.addChild(textObj);\n\n    return textObj;\n  }\n  \n  // ==================== Interaction ====================\n  \n  makeDraggable(obj, id) {\n    // Only handle pointerdown - centralized handler does the rest\n    obj.on('pointerdown', (event) => {\n      if (this.currentTool !== 'select') return;\n\n      const worldPos = this.screenToWorld(event.data.global.x, event.data.global.y);\n\n      // Set centralized drag state\n      this.isDragging = true;\n      this.draggedObject = obj;\n      this.draggedObjectId = id;\n      this.dragOffset.x = worldPos.x - obj.x;\n      this.dragOffset.y = worldPos.y - obj.y;\n\n      obj.alpha = 0.7;\n      event.stopPropagation();\n    });\n  }\n  \n  makeSelectable(obj, id) {\n    obj.on('click', (event) => {\n      if (this.currentTool === 'select') {\n        if (event.data.originalEvent.shiftKey) {\n          // Multi-select\n          if (this.selectedObjects.has(id)) {\n            this.deselectObject(id);\n          } else {\n            this.selectObject(id);\n          }\n        } else {\n          // Single select\n          this.clearSelection();\n          this.selectObject(id);\n        }\n        event.stopPropagation();\n      }\n    });\n  }\n  \n  selectObject(id) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    this.selectedObjects.add(id);\n\n    // Remove existing selection indicator if any\n    const existingIndicator = this.selectionIndicators.get(id);\n    if (existingIndicator) {\n      this.viewport.removeChild(existingIndicator);\n      existingIndicator.destroy();\n    }\n\n    // Create selection indicator\n    const indicator = new PIXI.Graphics();\n    indicator.lineStyle(2, 0x00FF00);\n\n    if (obj.userData) {\n      if (obj.userData.type === 'rectangle') {\n        // Draw selection box around rectangle\n        const { width, height } = obj.userData;\n        indicator.drawRect(-2, -2, width + 4, height + 4);\n        indicator.x = obj.x;\n        indicator.y = obj.y;\n      } else if (obj.userData.type === 'circle') {\n        // Draw selection box around circle\n        const { radius } = obj.userData;\n        indicator.drawCircle(0, 0, radius + 2);\n        indicator.x = obj.x;\n        indicator.y = obj.y;\n      }\n    }\n\n    // Add to viewport and store reference\n    this.viewport.addChild(indicator);\n    this.selectionIndicators.set(id, indicator);\n  }\n\n  deselectObject(id) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    this.selectedObjects.delete(id);\n\n    // Remove selection indicator\n    const indicator = this.selectionIndicators.get(id);\n    if (indicator) {\n      this.viewport.removeChild(indicator);\n      indicator.destroy();\n      this.selectionIndicators.delete(id);\n    }\n  }\n  \n  clearSelection() {\n    this.selectedObjects.forEach(id => this.deselectObject(id));\n    this.selectedObjects.clear();\n  }\n  \n  deleteSelected() {\n    if (this.selectedObjects.size === 0) {\n      return;\n    }\n\n    const idsToDelete = Array.from(this.selectedObjects);\n\n    // Use bulk deletion for better performance\n    const deletedIds = this.deleteObjects(idsToDelete);\n\n    // Clear selection\n    this.selectedObjects.clear();\n\n    // Notify about bulk deletion\n    if (this.onObjectsDeleted && deletedIds.length > 0) {\n      this.onObjectsDeleted(deletedIds);\n    }\n\n    console.log(`Deleted ${deletedIds.length} selected objects`);\n  }\n  \n  // ==================== Object Management ====================\n\n  loadState(canvasState) {\n    console.error('========================================');\n    console.error('=== LOAD STATE CALLED ===');\n    console.error('========================================');\n    console.error('Canvas state received:', canvasState);\n    console.error('Canvas state type:', typeof canvasState);\n    console.error('Is array?', Array.isArray(canvasState));\n\n    // Clear existing objects\n    console.error('Clearing existing objects...');\n    this.objects.forEach((obj, id) => {\n      this.deleteObject(id);\n    });\n    console.error('Objects cleared. Map size:', this.objects.size);\n\n    // Load objects from state\n    if (canvasState && typeof canvasState === 'object') {\n      // If it's an array, iterate through it\n      if (Array.isArray(canvasState)) {\n        console.error(`=== Loading ${canvasState.length} objects from ARRAY ===`);\n        canvasState.forEach((objData, index) => {\n          console.error(`Loading object ${index}:`, JSON.stringify(objData));\n          this.createRemoteObject(objData);\n        });\n      } else {\n        // If it's an object/hash, iterate through its values\n        const values = Object.values(canvasState);\n        console.error(`=== Loading ${values.length} objects from OBJECT ===`);\n        values.forEach((objData, index) => {\n          console.error(`Loading object ${index}:`, JSON.stringify(objData));\n          this.createRemoteObject(objData);\n        });\n      }\n    } else {\n      console.error('!!! INVALID canvas state !!!:', canvasState);\n    }\n\n    console.error('========================================');\n    console.error(`=== LOAD STATE COMPLETE: ${this.objects.size} objects ===`);\n    console.error('Current objects in map:', Array.from(this.objects.keys()));\n    console.error('========================================');\n\n    // Trigger viewport culling after loading objects\n    if (this.cullingEnabled) {\n      this.updateVisibleObjects();\n    }\n  }\n\n  applyDelta(id, delta) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    // Apply all properties from delta\n    for (const [key, value] of Object.entries(delta)) {\n      obj[key] = value;\n    }\n\n    // Handle special cases for Graphics objects\n    if (obj instanceof PIXI.Graphics) {\n      if (delta.width !== undefined || delta.height !== undefined ||\n          delta.color !== undefined || delta.rotation !== undefined) {\n        // Trigger redraw for visual properties\n        this.redrawGraphicsObject(obj);\n      }\n    }\n  }\n\n  redrawGraphicsObject(obj) {\n    // Clear and redraw the graphics object based on its current properties\n    obj.clear();\n\n    // Basic rectangle drawing - you might want to extend this for other shapes\n    if (obj.width && obj.height) {\n      obj.beginFill(obj.color || 0xFF0000);\n      obj.drawRect(0, 0, obj.width, obj.height);\n      obj.endFill();\n    }\n\n    // Apply rotation if set\n    if (obj.rotation) {\n      obj.rotation = obj.rotation;\n    }\n  }\n\n  updateObject(id, updates) {\n    const obj = this.objects.get(id);\n    if (!obj) return;\n\n    if (updates.x !== undefined) obj.x = updates.x;\n    if (updates.y !== undefined) obj.y = updates.y;\n\n    // For Graphics objects, need to redraw if dimensions change\n    if (obj instanceof PIXI.Graphics) {\n      if (updates.width !== undefined || updates.height !== undefined) {\n        // Recreate the shape - this is simplistic, you might want a better approach\n        console.log('Dimension updates for Graphics require recreation');\n      }\n    }\n  }\n\n  deleteObject(id) {\n    const obj = this.objects.get(id);\n    if (obj) {\n      this.viewport.removeChild(obj);\n      this.objects.delete(id);\n\n      // Destroy object but preserve shared textures\n      obj.destroy({ children: true, texture: false, baseTexture: false });\n\n      // Clean up selection indicator if it exists\n      const indicator = this.selectionIndicators.get(id);\n      if (indicator) {\n        this.viewport.removeChild(indicator);\n        indicator.destroy({ children: true, texture: false, baseTexture: false });\n        this.selectionIndicators.delete(id);\n      }\n\n      // Remove from selected objects set\n      this.selectedObjects.delete(id);\n\n      console.log(`Deleted object ${id} with proper texture preservation`);\n    }\n  }\n\n  deleteObjects(ids) {\n    if (!Array.isArray(ids) || ids.length === 0) {\n      console.warn('deleteObjects: Expected non-empty array of IDs');\n      return;\n    }\n\n    console.log(`Bulk deleting ${ids.length} objects:`, ids);\n\n    // Collect objects to delete for broadcasting\n    const deletedObjects = [];\n\n    // Delete each object\n    ids.forEach(id => {\n      const obj = this.objects.get(id);\n      if (obj) {\n        this.viewport.removeChild(obj);\n        this.objects.delete(id);\n\n        // Destroy object but preserve shared textures\n        obj.destroy({ children: true, texture: false, baseTexture: false });\n\n        // Clean up selection indicator if it exists\n        const indicator = this.selectionIndicators.get(id);\n        if (indicator) {\n          this.viewport.removeChild(indicator);\n          indicator.destroy({ children: true, texture: false, baseTexture: false });\n          this.selectionIndicators.delete(id);\n        }\n\n        // Remove from selected objects set\n        this.selectedObjects.delete(id);\n\n        deletedObjects.push(id);\n      } else {\n        console.warn(`Object ${id} not found for deletion`);\n      }\n    });\n\n    console.log(`Bulk deleted ${deletedObjects.length} objects successfully`);\n\n    // Return deleted IDs for broadcasting\n    return deletedObjects;\n  }\n\n  verifyObjectDeletion(ids) {\n    if (!Array.isArray(ids)) {\n      ids = [ids];\n    }\n\n    let allClean = true;\n    const issues = [];\n\n    ids.forEach(id => {\n      // Check if object still exists in maps\n      if (this.objects.has(id)) {\n        issues.push(`Object ${id} still in objects map`);\n        allClean = false;\n      }\n\n      if (this.selectionIndicators.has(id)) {\n        issues.push(`Selection indicator for ${id} still exists`);\n        allClean = false;\n      }\n\n      if (this.selectedObjects.has(id)) {\n        issues.push(`Object ${id} still in selectedObjects set`);\n        allClean = false;\n      }\n\n      // Check if PIXI object still has parent (indicating it's still in scene)\n      const obj = this.viewport.children.find(child => child._objectId === id);\n      if (obj) {\n        issues.push(`Object ${id} still in viewport children`);\n        allClean = false;\n      }\n    });\n\n    // Check for orphaned PIXI objects in viewport\n    const orphanedPixiObjects = this.viewport.children.filter(child => {\n      // Look for objects that don't have corresponding entries in our maps\n      return child._objectId && !this.objects.has(child._objectId);\n    });\n\n    if (orphanedPixiObjects.length > 0) {\n      issues.push(`${orphanedPixiObjects.length} orphaned PIXI objects found in viewport`);\n      allClean = false;\n    }\n\n    // Check texture memory (basic check)\n    const textureCount = Object.keys(PIXI.utils.TextureCache).length;\n    if (textureCount > 100) { // Arbitrary threshold\n      issues.push(`High texture count detected: ${textureCount} textures in cache`);\n    }\n\n    if (!allClean) {\n      console.warn('Memory leak verification failed:', issues);\n    } else {\n      console.log(`Memory leak verification passed for ${ids.length} deleted objects`);\n    }\n\n    return {\n      success: allClean,\n      issues: issues,\n      textureCount: textureCount,\n      orphanedObjects: orphanedPixiObjects.length\n    };\n  }\n\n  getMemoryStats() {\n    const pixiChildren = this.viewport.children.length;\n    const objectsInMap = this.objects.size;\n    const selectionIndicators = this.selectionIndicators.size;\n    const selectedObjects = this.selectedObjects.size;\n    const remoteCursors = this.remoteCursors.size;\n\n    return {\n      pixiChildren,\n      objectsInMap,\n      selectionIndicators,\n      selectedObjects,\n      remoteCursors,\n      totalTrackedObjects: objectsInMap + selectionIndicators + selectedObjects + remoteCursors,\n      textureCacheSize: Object.keys(PIXI.utils.TextureCache).length,\n      baseTextureCacheSize: Object.keys(PIXI.utils.BaseTextureCache).length\n    };\n  }\n\n  // ==================== Remote Object Sync ====================\n\n  createRemoteObject(objData) {\n    console.log('Creating remote object:', objData);\n    console.log('Object properties:', {\n      id: objData.id,\n      type: objData.type,\n      x: objData.x,\n      y: objData.y,\n      width: objData.width,\n      height: objData.height,\n      radius: objData.radius,\n      color: objData.color,\n      colorType: typeof objData.color\n    });\n\n    // Convert color to proper format (ensure it's a number)\n    const color = this.normalizeColor(objData.color);\n    console.log('Normalized color:', color, 'type:', typeof color);\n\n    // Infer type from data if missing (backwards compatibility)\n    let type = objData.type;\n    if (!type) {\n      console.warn('Object missing type field, inferring from properties:', objData);\n      if (objData.radius !== undefined) {\n        type = 'circle';\n      } else if (objData.width !== undefined && objData.height !== undefined) {\n        type = 'rectangle';\n      } else if (objData.text !== undefined) {\n        type = 'text';\n      } else {\n        console.error('Cannot infer type for object:', objData);\n        return;\n      }\n    }\n\n    if (type === 'rectangle') {\n      // Validate dimensions\n      if (!objData.width || !objData.height || objData.width <= 0 || objData.height <= 0) {\n        console.warn('Skipping rectangle with invalid dimensions:', objData);\n        return;\n      }\n\n      console.log('Creating rectangle with:', {\n        id: objData.id,\n        x: objData.x,\n        y: objData.y,\n        width: objData.width,\n        height: objData.height,\n        color: color\n      });\n      this.createRectangle(\n        objData.id,\n        objData.x,\n        objData.y,\n        objData.width,\n        objData.height,\n        color\n      );\n      console.log('Rectangle created successfully. Objects in map:', this.objects.size);\n    } else if (type === 'circle') {\n      console.log('Creating circle with:', {\n        id: objData.id,\n        x: objData.x,\n        y: objData.y,\n        radius: objData.radius,\n        color: color\n      });\n      this.createCircle(\n        objData.id,\n        objData.x,\n        objData.y,\n        objData.radius,\n        color\n      );\n      console.log('Circle created successfully');\n    } else if (type === 'text') {\n      console.log('Creating text with:', {\n        id: objData.id,\n        text: objData.text,\n        x: objData.x,\n        y: objData.y,\n        fontSize: objData.fontSize,\n        color: color\n      });\n      this.createText(\n        objData.id,\n        objData.text,\n        objData.x,\n        objData.y,\n        objData.fontSize,\n        color\n      );\n      console.log('Text created successfully');\n    } else {\n      console.error('Unknown object type:', type);\n    }\n  }\n\n  normalizeColor(color) {\n    // If it's already a number (0xRRGGBB format), return it\n    if (typeof color === 'number') {\n      return color;\n    }\n\n    // If it's a hex string like \"#3498db\", convert to number\n    if (typeof color === 'string') {\n      if (color.startsWith('#')) {\n        return parseInt(color.substring(1), 16);\n      }\n      // If it's a string number like \"3498db\", convert to number\n      return parseInt(color, 16);\n    }\n\n    // Default color if something goes wrong\n    return 0x3498db;\n  }\n\n  updateRemoteObject(objectId, delta) {\n    console.log('Updating remote object with delta:', objectId, delta);\n    this.applyDelta(objectId, delta);\n  }\n\n  deleteRemoteObject(objectId) {\n    console.log('Deleting remote object:', objectId);\n    this.deleteObject(objectId);\n  }\n  \n  getObject(id) {\n    return this.objects.get(id);\n  }\n  \n  getAllObjects() {\n    return Array.from(this.objects.entries()).map(([id, obj]) => ({\n      id,\n      type: obj.constructor.name,\n      x: obj.x,\n      y: obj.y\n    }));\n  }\n\n  getPerformanceStats() {\n    return this.performanceMonitor.getStats();\n  }\n  \n  // ==================== Remote Cursors ====================\n  \n  updateRemoteCursor(userId, username, x, y, color) {\n    let cursor = this.remoteCursors.get(userId);\n\n    // Convert color string (like \"#FF6B6B\") to number\n    const colorNum = color && typeof color === 'string' && color.startsWith('#')\n      ? parseInt(color.substring(1), 16)\n      : 0xFF6B6B;\n\n    if (!cursor) {\n      // Create new cursor\n      cursor = new PIXI.Container();\n\n      // Cursor pointer using shared texture and sprite\n      const pointer = new PIXI.Sprite(this.cursorTexture);\n      pointer.tint = colorNum; // Apply color using tint instead of recreating graphics\n\n      // Username label\n      const label = new PIXI.Text(username, {\n        fontSize: 12,\n        fill: 0xFFFFFF,\n        fontWeight: 'bold',\n        stroke: colorNum,\n        strokeThickness: 2,\n        dropShadow: true,\n        dropShadowColor: 0x000000,\n        dropShadowAlpha: 0.7,\n        dropShadowDistance: 1\n      });\n      label.x = 15;\n      label.y = -5; // Position above cursor tip\n\n      cursor.addChild(pointer);\n      cursor.addChild(label);\n      cursor.zIndex = 1000;\n\n      this.remoteCursors.set(userId, cursor);\n      this.viewport.addChild(cursor);\n    }\n\n    // Add interpolation for smooth rendering despite batching/throttling\n    if (!cursor.lastUpdate) {\n      cursor.lastUpdate = { x, y, time: performance.now() };\n    }\n\n    const now = performance.now();\n    const dt = now - cursor.lastUpdate.time;\n\n    if (dt > 0 && dt < 100) { // Interpolate over last 100ms for smoothness\n      const lerpFactor = Math.min(dt / 100, 1);\n      cursor.x = cursor.lastUpdate.x + (x - cursor.lastUpdate.x) * lerpFactor;\n      cursor.y = cursor.lastUpdate.y + (y - cursor.lastUpdate.y) * lerpFactor;\n    } else {\n      // Large time gap or first update - jump to position\n      cursor.x = x;\n      cursor.y = y;\n    }\n\n    cursor.lastUpdate = { x, y, time: now };\n  }\n\n  removeRemoteCursor(userId) {\n    const cursor = this.remoteCursors.get(userId);\n    if (cursor) {\n      this.viewport.removeChild(cursor);\n      cursor.destroy();\n      this.remoteCursors.delete(userId);\n    }\n  }\n\n  clearAllRemoteCursors() {\n    console.log(`Clearing all remote cursors (${this.remoteCursors.size} cursors)`)\n    this.remoteCursors.forEach((cursor, userId) => {\n      this.viewport.removeChild(cursor)\n      cursor.destroy()\n    })\n    this.remoteCursors.clear()\n    console.log('All remote cursors cleared')\n  }\n\n  startPeriodicCleanup(intervalMs = 60000) {\n    // Run cleanup every minute to catch any orphaned objects\n    this.cleanupInterval = setInterval(() => {\n      this.performCleanup()\n    }, intervalMs)\n    console.log(`Started periodic cleanup (every ${intervalMs / 1000}s)`)\n  }\n\n  stopPeriodicCleanup() {\n    if (this.cleanupInterval) {\n      clearInterval(this.cleanupInterval)\n      this.cleanupInterval = null\n      console.log('Stopped periodic cleanup')\n    }\n  }\n\n  performCleanup() {\n    console.log('=== Performing periodic cleanup ===')\n    let orphanedIndicators = 0\n    let orphanedCursors = 0\n\n    // Clean up selection indicators for deleted objects\n    this.selectionIndicators.forEach((indicator, id) => {\n      if (!this.objects.has(id)) {\n        this.viewport.removeChild(indicator)\n        indicator.destroy()\n        this.selectionIndicators.delete(id)\n        orphanedIndicators++\n      }\n    })\n\n    // Clean up selected objects that no longer exist\n    this.selectedObjects.forEach(id => {\n      if (!this.objects.has(id)) {\n        this.selectedObjects.delete(id)\n      }\n    })\n\n    // Clean up remote cursors that haven't updated in a while (>5 minutes)\n    const fiveMinutesAgo = performance.now() - (5 * 60 * 1000)\n    this.remoteCursors.forEach((cursor, userId) => {\n      if (cursor.lastUpdate && cursor.lastUpdate.time < fiveMinutesAgo) {\n        this.removeRemoteCursor(userId)\n        orphanedCursors++\n      }\n    })\n\n    if (orphanedIndicators > 0 || orphanedCursors > 0) {\n      console.log(`Cleanup complete: ${orphanedIndicators} indicators, ${orphanedCursors} cursors removed`)\n    } else {\n      console.log('Cleanup complete: No orphaned objects found')\n    }\n  }\n\n  // ==================== Utilities ====================\n  \n  generateId() {\n    return 'obj-' + Math.random().toString(36).substr(2, 9);\n  }\n  \n  setColor(color) {\n    this.currentColor = color;\n  }\n\n  colorToHexString(color) {\n    // Convert JavaScript color number (0x3498db) to CSS hex string (\"#3498db\")\n    if (typeof color === 'number') {\n      return '#' + color.toString(16).padStart(6, '0');\n    }\n    // If it's already a string with #, return as-is\n    if (typeof color === 'string' && color.startsWith('#')) {\n      return color;\n    }\n    // Default fallback\n    return '#3498db';\n  }\n\n  getCanvasState() {\n    const objects = [];\n    this.objects.forEach((obj, id) => {\n      // Serialize object data\n      objects.push({\n        id,\n        type: obj.constructor.name,\n        x: obj.x,\n        y: obj.y,\n        // Add more properties as needed\n      });\n    });\n    return { objects };\n  }\n\n  destroy() {\n    // Clean up performance monitor\n    if (this.performanceMonitor) {\n      this.performanceMonitor.destroy();\n    }\n\n    // Clean up shared cursor texture\n    if (this.cursorTexture) {\n      this.cursorTexture.destroy();\n    }\n\n    // Clean up PIXI objects\n    this.objects.forEach(obj => {\n      if (obj && typeof obj.destroy === 'function') {\n        obj.destroy();\n      }\n    });\n    this.objects.clear();\n\n    this.selectionIndicators.forEach(indicator => {\n      if (indicator && typeof indicator.destroy === 'function') {\n        indicator.destroy();\n      }\n    });\n    this.selectionIndicators.clear();\n\n    this.remoteCursors.forEach(cursor => {\n      if (cursor && typeof cursor.destroy === 'function') {\n        cursor.destroy();\n      }\n    });\n    this.remoteCursors.clear();\n  }\n  \n  // Callbacks - set these from outside\n  onObjectCreated = null;\n  onObjectMoved = null;\n  onObjectDeleted = null;\n  onCursorMoved = null;\n}\n","// websocket.js - WebSocket client for real-time synchronization\n\nexport class LatencyMonitor {\n    constructor(options = {}) {\n        this.maxHistorySize = options.maxHistorySize || 1000\n        this.warningThreshold = options.warningThreshold || 100 // 100ms\n        this.pendingMessages = new Map() // messageId -> { sentTime, type }\n        this.latencyHistory = [] // Array of latency measurements\n        this.stats = {\n            totalMessages: 0,\n            averageLatency: 0,\n            minLatency: Infinity,\n            maxLatency: 0,\n            warningCount: 0\n        }\n    }\n\n    startTracking(messageId, messageType) {\n        this.pendingMessages.set(messageId, {\n            sentTime: performance.now(),\n            type: messageType\n        })\n    }\n\n    endTracking(messageId) {\n        const pending = this.pendingMessages.get(messageId)\n        if (!pending) {\n            return null // Message not found or already tracked\n        }\n\n        const latency = performance.now() - pending.sentTime\n        this.pendingMessages.delete(messageId)\n\n        // Record latency\n        this.recordLatency(latency, pending.type)\n\n        // Warn if high latency\n        if (latency > this.warningThreshold) {\n            console.warn(`⚠️ High latency detected: ${Math.round(latency)}ms for ${pending.type} message`)\n            this.stats.warningCount++\n        }\n\n        return latency\n    }\n\n    recordLatency(latency, messageType) {\n        // Add to history\n        this.latencyHistory.push({\n            latency,\n            type: messageType,\n            timestamp: Date.now()\n        })\n\n        // Trim history if too large\n        if (this.latencyHistory.length > this.maxHistorySize) {\n            this.latencyHistory.shift()\n        }\n\n        // Update stats\n        this.stats.totalMessages++\n        this.stats.minLatency = Math.min(this.stats.minLatency, latency)\n        this.stats.maxLatency = Math.max(this.stats.maxLatency, latency)\n\n        // Recalculate average\n        const sum = this.latencyHistory.reduce((acc, item) => acc + item.latency, 0)\n        this.stats.averageLatency = sum / this.latencyHistory.length\n    }\n\n    getPercentile(percentile) {\n        if (this.latencyHistory.length === 0) {\n            return 0\n        }\n\n        // Sort latencies\n        const sorted = this.latencyHistory\n            .map(item => item.latency)\n            .sort((a, b) => a - b)\n\n        // Calculate percentile index\n        const index = Math.ceil((percentile / 100) * sorted.length) - 1\n        return sorted[Math.max(0, index)]\n    }\n\n    getStats() {\n        return {\n            totalMessages: this.stats.totalMessages,\n            averageLatency: Math.round(this.stats.averageLatency * 100) / 100,\n            minLatency: this.stats.minLatency === Infinity ? 0 : Math.round(this.stats.minLatency * 100) / 100,\n            maxLatency: Math.round(this.stats.maxLatency * 100) / 100,\n            p50: Math.round(this.getPercentile(50) * 100) / 100,\n            p95: Math.round(this.getPercentile(95) * 100) / 100,\n            p99: Math.round(this.getPercentile(99) * 100) / 100,\n            warningCount: this.stats.warningCount,\n            historySize: this.latencyHistory.length,\n            pendingMessages: this.pendingMessages.size\n        }\n    }\n\n    getStatsByType(messageType) {\n        const filtered = this.latencyHistory.filter(item => item.type === messageType)\n        if (filtered.length === 0) {\n            return null\n        }\n\n        const latencies = filtered.map(item => item.latency).sort((a, b) => a - b)\n        const sum = latencies.reduce((acc, val) => acc + val, 0)\n\n        const getPercentile = (p) => {\n            const index = Math.ceil((p / 100) * latencies.length) - 1\n            return latencies[Math.max(0, index)]\n        }\n\n        return {\n            messageType,\n            count: filtered.length,\n            averageLatency: Math.round((sum / filtered.length) * 100) / 100,\n            minLatency: Math.round(latencies[0] * 100) / 100,\n            maxLatency: Math.round(latencies[latencies.length - 1] * 100) / 100,\n            p50: Math.round(getPercentile(50) * 100) / 100,\n            p95: Math.round(getPercentile(95) * 100) / 100,\n            p99: Math.round(getPercentile(99) * 100) / 100\n        }\n    }\n\n    logStats() {\n        const stats = this.getStats()\n        console.log('=== Latency Statistics ===')\n        console.log(`Total messages: ${stats.totalMessages}`)\n        console.log(`Average latency: ${stats.averageLatency}ms`)\n        console.log(`Min latency: ${stats.minLatency}ms`)\n        console.log(`Max latency: ${stats.maxLatency}ms`)\n        console.log(`P50 (median): ${stats.p50}ms`)\n        console.log(`P95: ${stats.p95}ms`)\n        console.log(`P99: ${stats.p99}ms`)\n        console.log(`High latency warnings: ${stats.warningCount}`)\n        console.log(`History size: ${stats.historySize}`)\n        console.log(`Pending messages: ${stats.pendingMessages}`)\n    }\n\n    reset() {\n        this.pendingMessages.clear()\n        this.latencyHistory = []\n        this.stats = {\n            totalMessages: 0,\n            averageLatency: 0,\n            minLatency: Infinity,\n            maxLatency: 0,\n            warningCount: 0\n        }\n    }\n}\n\nexport class CursorThrottle {\n    constructor(sendCallback, intervalMs = 50) { // 20/sec = 50ms\n        this.sendCallback = sendCallback\n        this.intervalMs = intervalMs\n        this.pendingCursor = null\n        this.intervalId = null\n        this.start()\n    }\n\n    start() {\n        this.intervalId = setInterval(() => {\n            if (this.pendingCursor) {\n                this.sendCallback(this.pendingCursor.x, this.pendingCursor.y)\n                this.pendingCursor = null\n            }\n        }, this.intervalMs)\n    }\n\n    update(x, y) {\n        this.pendingCursor = { x, y } // Always update to latest\n    }\n\n    stop() {\n        if (this.intervalId) {\n            clearInterval(this.intervalId)\n            this.intervalId = null\n        }\n    }\n}\n\nexport class WebSocketClient {\n    constructor(url, sessionId, canvasId) {\n        this.url = url\n        this.sessionId = sessionId\n        this.canvasId = canvasId\n        this.ws = null\n        this.isConnected = false\n        this.reconnectAttempts = 0\n        this.maxReconnectAttempts = 5\n        this.reconnectDelay = 1000\n\n        // Message ID counter for latency tracking\n        this.messageIdCounter = 0\n\n        // Latency monitoring\n        this.latencyMonitor = new LatencyMonitor({\n            maxHistorySize: 1000,\n            warningThreshold: 100 // 100ms\n        })\n\n        // Bandwidth tracking for delta compression testing\n        this.bandwidthStats = {\n            totalBytesReceived: 0,\n            objectUpdateMessages: 0,\n            startTime: Date.now()\n        }\n\n        // Cursor throttling using CursorThrottle class\n        this.cursorThrottle = new CursorThrottle((x, y) => {\n            this.send({ type: 'cursor', x, y })\n        })\n\n        // Callbacks\n        this.onAuthSuccess = () => {}\n        this.onAuthFailed = () => {}\n        this.onUserConnected = () => {}\n        this.onUserDisconnected = () => {}\n        this.onPresenceUpdate = () => {}\n        this.onCursorUpdate = () => {}\n        this.onObjectCreated = () => {}\n        this.onObjectUpdated = () => {}\n        this.onObjectDeleted = () => {}\n        this.onObjectsDeleted = () => {}\n        this.onError = () => {}\n        this.onReconnecting = () => {}\n        this.onReconnected = () => {}\n    }\n\n    connect() {\n        console.log(`Connecting to WebSocket: ${this.url}`)\n\n        try {\n            this.ws = new WebSocket(this.url)\n            this.setupEventHandlers()\n        } catch (error) {\n            console.error('WebSocket connection error:', error)\n            this.onError(error)\n            this.scheduleReconnect()\n        }\n    }\n\n    setupEventHandlers() {\n        this.ws.onopen = () => {\n            console.log('WebSocket connected')\n            this.isConnected = true\n            this.reconnectAttempts = 0\n\n            // Send authentication message\n            this.send({\n                type: 'auth',\n                sessionId: this.sessionId,\n                canvasId: this.canvasId\n            })\n\n            if (this.reconnectAttempts > 0) {\n                this.onReconnected()\n            }\n        }\n\n        this.ws.onmessage = (event) => {\n            try {\n                const data = JSON.parse(event.data)\n                this.handleMessage(data)\n            } catch (error) {\n                console.error('Error parsing WebSocket message:', error)\n                this.onError(error)\n            }\n        }\n\n        this.ws.onclose = (event) => {\n            console.log('WebSocket disconnected:', event.code, event.reason)\n            this.isConnected = false\n\n            if (!event.wasClean) {\n                this.scheduleReconnect()\n            }\n        }\n\n        this.ws.onerror = (error) => {\n            console.error('WebSocket error:', error)\n            this.onError(error)\n        }\n    }\n\n    handleMessage(data) {\n        // Track latency if message has an ID (response to our request)\n        if (data.messageId) {\n            const latency = this.latencyMonitor.endTracking(data.messageId)\n            if (latency !== null && latency < 100) {\n                // Only log sub-100ms latencies at debug level\n                console.debug(`Message ${data.type} latency: ${Math.round(latency)}ms`)\n            }\n        }\n\n        switch (data.type) {\n            case 'auth-success':\n                this.onAuthSuccess(data)\n                break\n\n            case 'auth-failed':\n                this.onAuthFailed(data)\n                break\n\n            case 'user-connected':\n                this.onUserConnected(data)\n                break\n\n            case 'user-disconnected':\n                this.onUserDisconnected(data)\n                break\n\n            case 'presence':\n                this.onPresenceUpdate(data.users)\n                break\n\n            case 'cursor':\n                this.onCursorUpdate(data)\n                break\n\n            case 'cursor-batch':\n                // Handle batched cursor updates\n                if (data.cursors && Array.isArray(data.cursors)) {\n                    data.cursors.forEach(cursor => {\n                        this.onCursorUpdate(cursor)\n                    })\n                }\n                break\n\n            case 'object-create':\n                this.onObjectCreated(data)\n                break\n\n            case 'object-update':\n                // Track bandwidth for delta compression testing\n                const messageSize = JSON.stringify(data).length\n                this.bandwidthStats.totalBytesReceived += messageSize\n                this.bandwidthStats.objectUpdateMessages++\n                console.log(`Object update received: ${messageSize} bytes (total: ${this.bandwidthStats.totalBytesReceived} bytes, ${this.bandwidthStats.objectUpdateMessages} messages)`)\n                this.onObjectUpdated(data)\n                break\n\n            case 'object-delete':\n                this.onObjectDeleted(data)\n                break\n\n            case 'objects-delete':\n                this.onObjectsDeleted(data)\n                break\n\n            case 'error':\n                console.error('Server error:', data.message)\n                this.onError(new Error(data.message))\n                break\n\n            default:\n                console.warn('Unknown message type:', data.type)\n        }\n    }\n\n    send(data, trackLatency = false) {\n        if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n            // Add message ID for latency tracking if requested\n            if (trackLatency && data.type !== 'cursor') {\n                data.messageId = ++this.messageIdCounter\n                this.latencyMonitor.startTracking(data.messageId, data.type)\n            }\n\n            this.ws.send(JSON.stringify(data))\n        } else {\n            console.warn('WebSocket not connected, message not sent:', data)\n        }\n    }\n\n    sendCursorUpdate(x, y) {\n        this.cursorThrottle.update(x, y)\n    }\n\n    sendObjectCreate(object) {\n        this.send({\n            type: 'object-create',\n            object: object\n        }, true) // Enable latency tracking\n    }\n\n    sendObjectUpdate(objectId, updates) {\n        this.send({\n            type: 'object-update',\n            'object-id': objectId,\n            updates: updates\n        }, true) // Enable latency tracking\n    }\n\n    sendObjectDelete(objectId) {\n        this.send({\n            type: 'object-delete',\n            'object-id': objectId\n        }, true) // Enable latency tracking\n    }\n\n    scheduleReconnect() {\n        if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n            console.error('Max reconnection attempts reached')\n            this.onError(new Error('Unable to reconnect to server'))\n            return\n        }\n\n        this.reconnectAttempts++\n        const delay = this.reconnectDelay * Math.pow(2, this.reconnectAttempts - 1)\n\n        console.log(`Attempting to reconnect in ${delay}ms (attempt ${this.reconnectAttempts}/${this.maxReconnectAttempts})`)\n        this.onReconnecting()\n\n        setTimeout(() => {\n            this.connect()\n        }, delay)\n    }\n\n    getBandwidthStats() {\n        const elapsedMinutes = (Date.now() - this.bandwidthStats.startTime) / (1000 * 60)\n        return {\n            totalBytes: this.bandwidthStats.totalBytesReceived,\n            messageCount: this.bandwidthStats.objectUpdateMessages,\n            averageBytesPerMessage: this.bandwidthStats.objectUpdateMessages > 0\n                ? Math.round(this.bandwidthStats.totalBytesReceived / this.bandwidthStats.objectUpdateMessages)\n                : 0,\n            bytesPerMinute: elapsedMinutes > 0\n                ? Math.round(this.bandwidthStats.totalBytesReceived / elapsedMinutes)\n                : 0,\n            elapsedMinutes: Math.round(elapsedMinutes * 10) / 10\n        }\n    }\n\n    getLatencyStats() {\n        return this.latencyMonitor.getStats()\n    }\n\n    getLatencyStatsByType(messageType) {\n        return this.latencyMonitor.getStatsByType(messageType)\n    }\n\n    logLatencyStats() {\n        this.latencyMonitor.logStats()\n    }\n\n    logBandwidthStats() {\n        const stats = this.getBandwidthStats()\n        console.log('Bandwidth Stats (Delta Compression):', {\n            'Total bytes received': `${stats.totalBytes} bytes`,\n            'Object update messages': stats.messageCount,\n            'Avg bytes per message': `${stats.averageBytesPerMessage} bytes`,\n            'Bytes per minute': `${stats.bytesPerMinute} bytes/min`,\n            'Elapsed time': `${stats.elapsedMinutes} minutes`\n        })\n    }\n\n    disconnect() {\n        // Log final bandwidth stats before disconnecting\n        if (this.bandwidthStats.objectUpdateMessages > 0) {\n            console.log('=== Final Bandwidth Stats (Delta Compression) ===')\n            this.logBandwidthStats()\n        }\n\n        // Stop cursor throttle timer\n        if (this.cursorThrottle) {\n            this.cursorThrottle.stop()\n            console.log('Stopped cursor throttle timer')\n        }\n\n        // Close WebSocket connection\n        if (this.ws) {\n            this.ws.close(1000, 'User disconnect')\n            this.ws = null\n            this.isConnected = false\n        }\n\n        console.log('=== Disconnect cleanup complete ===')\n    }\n\n    sendObjectsDelete(objectIds) {\n        this.send({\n            type: 'objects-delete',\n            'object-ids': objectIds\n        })\n    }\n\n    sendObjectsDelete(objectIds) {\n        this.send({\n            type: 'objects-delete',\n            'object-ids': objectIds\n        })\n    }\n}","// auth.js - Authentication UI and logic for CollabCanvas\n\nexport class AuthManager {\n    constructor() {\n        this.modal = document.getElementById('auth-modal')\n        this.loginForm = document.getElementById('login-form')\n        this.registerForm = document.getElementById('register-form')\n        this.setupEventListeners()\n    }\n\n    setupEventListeners() {\n        // Tab switching\n        document.querySelectorAll('.tab-btn').forEach(btn => {\n            btn.addEventListener('click', () => {\n                const tab = btn.dataset.tab\n                this.switchTab(tab)\n            })\n        })\n\n        // Form submissions\n        this.loginForm.addEventListener('submit', async (e) => {\n            e.preventDefault()\n            await this.handleLogin()\n        })\n\n        this.registerForm.addEventListener('submit', async (e) => {\n            e.preventDefault()\n            await this.handleRegister()\n        })\n    }\n\n    switchTab(tab) {\n        // Update tab buttons\n        document.querySelectorAll('.tab-btn').forEach(btn => {\n            btn.classList.toggle('active', btn.dataset.tab === tab)\n        })\n\n        // Update forms\n        document.querySelectorAll('.auth-form').forEach(form => {\n            form.classList.toggle('active', form.id === `${tab}-form`)\n        })\n\n        // Clear errors\n        document.querySelectorAll('.error-message').forEach(err => {\n            err.textContent = ''\n        })\n    }\n\n    showModal() {\n        return new Promise((resolve) => {\n            this.modal.classList.remove('hidden')\n            this.resolveAuth = resolve\n        })\n    }\n\n    hideModal() {\n        this.modal.classList.add('hidden')\n    }\n\n    async handleLogin() {\n        const email = document.getElementById('login-email').value\n        const password = document.getElementById('login-password').value\n        const errorEl = document.getElementById('login-error')\n\n        try {\n            const response = await fetch('/api/login', {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ email, password })\n            })\n\n            const data = await response.json()\n\n            if (data.success && data.data) {\n                this.hideModal()\n                this.resolveAuth({\n                    sessionId: data.data['session-id'],\n                    userId: data.data['user-id'],\n                    username: data.data.username\n                })\n            } else {\n                errorEl.textContent = data.error || 'Login failed'\n            }\n        } catch (error) {\n            console.error('Login error:', error)\n            errorEl.textContent = 'Connection error. Please try again.'\n        }\n    }\n\n    async handleRegister() {\n        const username = document.getElementById('register-username').value\n        const email = document.getElementById('register-email').value\n        const password = document.getElementById('register-password').value\n        const errorEl = document.getElementById('register-error')\n\n        try {\n            const response = await fetch('/api/register', {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ username, email, password })\n            })\n\n            const data = await response.json()\n\n            if (data.success) {\n                // Auto-login after registration\n                await this.loginAfterRegister(email, password)\n            } else {\n                errorEl.textContent = data.error || 'Registration failed'\n            }\n        } catch (error) {\n            console.error('Registration error:', error)\n            errorEl.textContent = 'Connection error. Please try again.'\n        }\n    }\n\n    async loginAfterRegister(email, password) {\n        // Switch to login tab\n        this.switchTab('login')\n\n        // Fill in credentials\n        document.getElementById('login-email').value = email\n        document.getElementById('login-password').value = password\n\n        // Auto-submit\n        await this.handleLogin()\n    }\n}","// main.js - Application entry point for CollabCanvas\n\nimport './styles.css'\nimport * as PIXI from 'pixi.js'\nimport { CanvasManager } from './canvas.js'\nimport { WebSocketClient } from './websocket.js'\nimport { AuthManager } from './auth.js'\n\nclass CollabCanvas {\n    constructor() {\n        this.canvasManager = null\n        this.wsClient = null\n        this.authManager = null\n        this.sessionId = null\n        this.userId = null\n        this.username = null\n        this.canvasId = this.getCanvasId()\n        this.activeUsers = [] // Track active users\n    }\n\n    getCanvasId() {\n        // Get canvas ID from URL or use default shared canvas\n        const params = new URLSearchParams(window.location.search)\n        let canvasId = params.get('canvas')\n\n        if (!canvasId) {\n            // Use a fixed default canvas so all users join the same one\n            canvasId = 'default-canvas'\n            // Update URL without reload\n            const newUrl = new URL(window.location)\n            newUrl.searchParams.set('canvas', canvasId)\n            window.history.replaceState({}, '', newUrl)\n        }\n\n        return canvasId\n    }\n\n    async init() {\n        console.log('Initializing CollabCanvas...')\n\n        // Update canvas ID in status bar\n        document.getElementById('canvas-id').textContent = this.canvasId\n\n        // Initialize authentication\n        this.authManager = new AuthManager()\n\n        // Check for existing session\n        this.sessionId = localStorage.getItem('sessionId')\n\n        if (this.sessionId) {\n            // Validate session with backend\n            const isValid = await this.validateSession()\n\n            if (!isValid) {\n                this.sessionId = null\n                localStorage.removeItem('sessionId')\n            }\n        }\n\n        if (!this.sessionId) {\n            // Hide loading screen and show auth modal\n            this.hideLoadingScreen()\n            const authData = await this.authManager.showModal()\n            this.sessionId = authData.sessionId\n            this.userId = authData.userId\n            this.username = authData.username\n            localStorage.setItem('sessionId', this.sessionId)\n        }\n\n        // Hide loading screen (session is valid)\n        this.hideLoadingScreen()\n\n        // Initialize canvas\n        this.initCanvas()\n\n        // Initialize WebSocket connection\n        this.initWebSocket()\n\n        // Setup UI event handlers\n        this.setupUIHandlers()\n\n        console.log('CollabCanvas initialized successfully')\n    }\n\n    hideLoadingScreen() {\n        const loadingScreen = document.getElementById('loading-screen')\n        if (loadingScreen) {\n            loadingScreen.classList.add('hidden')\n        }\n    }\n\n    async validateSession() {\n        try {\n            const response = await fetch('/api/session', {\n                credentials: 'include',\n                headers: {\n                    'Authorization': this.sessionId\n                }\n            })\n\n            if (response.ok) {\n                const data = await response.json()\n                if (data.success && data.data && data.data.valid) {\n                    this.userId = data.data['user-id']\n                    this.username = data.data.username\n                    console.log('Session restored:', this.username)\n                    return true\n                }\n            }\n        } catch (error) {\n            console.error('Session validation failed:', error)\n        }\n\n        return false\n    }\n\n    initCanvas() {\n        const container = document.getElementById('canvas-container')\n\n        // Create PixiJS application\n        const app = new PIXI.Application({\n            width: window.innerWidth,\n            height: window.innerHeight,\n            backgroundColor: 0x1a1a1a,\n            resizeTo: window\n        })\n\n        container.appendChild(app.view)\n\n        this.canvasManager = new CanvasManager(app)\n\n        // Make performance stats available globally for console access\n        window.getPerformanceStats = () => {\n            return this.canvasManager.getPerformanceStats();\n        };\n\n        // Make latency stats available globally\n        window.getLatencyStats = () => {\n            if (!this.wsClient) return null;\n            return this.wsClient.getLatencyStats();\n        };\n\n        window.logLatencyStats = () => {\n            if (!this.wsClient) {\n                console.warn('WebSocket client not initialized');\n                return;\n            }\n            this.wsClient.logLatencyStats();\n        };\n\n        window.getLatencyStatsByType = (messageType) => {\n            if (!this.wsClient) return null;\n            return this.wsClient.getLatencyStatsByType(messageType);\n        };\n\n        // Set up canvas callbacks for WebSocket synchronization\n        this.canvasManager.onCursorMoved = (x, y) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendCursorUpdate(x, y)\n            }\n        }\n\n        this.canvasManager.onObjectCreated = (object) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectCreate(object)\n            }\n        }\n\n        this.canvasManager.onObjectUpdated = (objectId, updates) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectUpdate(objectId, updates)\n            }\n        }\n\n        this.canvasManager.onObjectDeleted = (objectId) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectDelete(objectId)\n            }\n        }\n\n        this.canvasManager.onObjectsDeleted = (objectIds) => {\n            if (this.wsClient && this.wsClient.isConnected) {\n                this.wsClient.sendObjectsDelete(objectIds)\n            }\n        }\n\n        // Update status bar callbacks\n        this.canvasManager.onToolChange = (tool) => {\n            document.getElementById('current-tool').textContent =\n                tool.charAt(0).toUpperCase() + tool.slice(1)\n        }\n\n        this.canvasManager.onMouseMove = (x, y) => {\n            document.getElementById('mouse-position').textContent = `${Math.round(x)}, ${Math.round(y)}`\n        }\n\n        this.canvasManager.onZoomChange = (zoom) => {\n            document.getElementById('zoom-level').textContent = `${Math.round(zoom * 100)}%`\n        }\n\n        this.canvasManager.onObjectCountChange = (count) => {\n            document.getElementById('object-count').textContent = count\n        }\n\n        // Start periodic memory cleanup (every 60 seconds)\n        // This removes orphaned selection indicators and inactive cursors\n        this.canvasManager.startPeriodicCleanup(60000)\n        console.log('Started periodic memory cleanup (60s interval)')\n    }\n\n    initWebSocket() {\n        // Use wss:// for HTTPS pages, ws:// for HTTP\n        const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:'\n        // window.location.host includes port if non-standard (e.g., localhost:8080)\n        const wsUrl = `${wsProtocol}//${window.location.host}/ws/${this.canvasId}`\n\n        this.wsClient = new WebSocketClient(wsUrl, this.sessionId, this.canvasId)\n\n        // Set up WebSocket callbacks\n        this.wsClient.onAuthSuccess = (data) => {\n            console.error('=== WebSocket authenticated ===')\n            console.error('Auth data received:', data)\n\n            // Backend sends 'canvas-state' (kebab-case), not 'canvasState'\n            const canvasState = data['canvas-state'] || data.canvasState\n            console.error('canvasState exists?', !!canvasState)\n            console.error('canvasState type:', typeof canvasState)\n            console.error('canvasState length:', canvasState ? canvasState.length : 0)\n\n            // Load initial canvas state\n            if (canvasState) {\n                console.error('=== CALLING loadState ===')\n                this.canvasManager.loadState(canvasState)\n                console.error('=== loadState RETURNED ===')\n            } else {\n                console.error('=== NO CANVAS STATE IN AUTH RESPONSE ===')\n            }\n        }\n\n        this.wsClient.onUserConnected = (data) => {\n            // Add new user to active users list\n            this.activeUsers.push({\n                'user-id': data.userId || data['user-id'],\n                username: data.username,\n                color: data.color\n            })\n            this.updatePresenceList(this.activeUsers)\n            this.showNotification(`${data.username} joined`, 'info')\n        }\n\n        this.wsClient.onUserDisconnected = (data) => {\n            // Remove user from active users list\n            const userId = data.userId || data['user-id']\n            this.activeUsers = this.activeUsers.filter(u =>\n                (u['user-id'] || u.userId) !== userId\n            )\n            this.updatePresenceList(this.activeUsers)\n            this.canvasManager.removeRemoteCursor(userId)\n            this.showNotification(`${data.username} left`, 'info')\n        }\n\n        this.wsClient.onPresenceUpdate = (users) => {\n            // Replace entire active users list with server's authoritative list\n            this.activeUsers = users\n            this.updatePresenceList(this.activeUsers)\n        }\n\n        this.wsClient.onCursorUpdate = (data) => {\n            this.canvasManager.updateRemoteCursor(\n                data.userId,\n                data.username,\n                data.x,\n                data.y,\n                data.color\n            )\n        }\n\n        this.wsClient.onObjectCreated = (data) => {\n            this.canvasManager.createRemoteObject(data.object)\n        }\n\n        this.wsClient.onObjectUpdated = (data) => {\n            // Backend sends 'object-id' (kebab-case)\n            const objectId = data['object-id'] || data.objectId\n            this.canvasManager.updateRemoteObject(objectId, data.delta)\n        }\n\n        this.wsClient.onObjectDeleted = (data) => {\n            // Remove user from active users list\n            const userId = data.userId || data['user-id']\n            this.activeUsers = this.activeUsers.filter(u =>\n                (u['user-id'] || u.userId) !== userId\n            )\n            this.updatePresenceList(this.activeUsers)\n            this.canvasManager.removeRemoteCursor(userId)\n            this.showNotification(`${data.username} left`, 'info')\n        }\n\n        this.wsClient.onObjectsDeleted = (data) => {\n            const objectIds = data['object-ids'] || data.objectIds || []\n            console.log('Received bulk delete for objects:', objectIds)\n\n            // Handle remote bulk deletion\n            if (objectIds.length > 0) {\n                objectIds.forEach(objectId => {\n                    this.canvasManager.deleteObject(objectId)\n                })\n                console.log(`Processed remote bulk deletion of ${objectIds.length} objects`)\n            }\n        }\n\n        this.wsClient.onError = (error) => {\n            console.error('WebSocket error:', error)\n            this.showNotification('Connection error', 'error')\n        }\n\n        this.wsClient.onReconnecting = () => {\n            this.showNotification('Reconnecting...', 'warning')\n        }\n\n        this.wsClient.onReconnected = () => {\n            this.showNotification('Reconnected', 'success')\n        }\n\n        // Connect to WebSocket\n        this.wsClient.connect()\n    }\n\n    setupUIHandlers() {\n        // Tool buttons\n        document.querySelectorAll('.tool-btn').forEach(btn => {\n            btn.addEventListener('click', () => {\n                const tool = btn.dataset.tool\n                this.canvasManager.setTool(tool)\n\n                // Update active button\n                document.querySelectorAll('.tool-btn').forEach(b =>\n                    b.classList.remove('active'))\n                btn.classList.add('active')\n            })\n        })\n\n        // Color picker\n        const colorPicker = document.getElementById('color-picker')\n        colorPicker.addEventListener('change', (e) => {\n            this.canvasManager.setColor(e.target.value)\n        })\n\n        // Keyboard shortcuts\n        document.addEventListener('keydown', (e) => {\n            // Prevent shortcuts when typing in inputs\n            if (e.target.tagName === 'INPUT') return\n\n            switch(e.key.toLowerCase()) {\n                case 'v':\n                    this.selectTool('select')\n                    break\n                case 'r':\n                    this.selectTool('rectangle')\n                    break\n                case 'c':\n                    this.selectTool('circle')\n                    break\n                case 'p':\n                    if (e.ctrlKey && e.shiftKey) {\n                        e.preventDefault()\n                        this.runPerformanceTest()\n                    }\n                    break\n                case 'delete':\n                case 'backspace':\n                    if (!e.target.isContentEditable) {\n                        e.preventDefault()\n                        this.canvasManager.deleteSelected()\n                    }\n                    break\n                case 'z':\n                    if (e.ctrlKey || e.metaKey) {\n                        e.preventDefault()\n                        if (e.shiftKey) {\n                            this.canvasManager.redo()\n                        } else {\n                            this.canvasManager.undo()\n                        }\n                    }\n                    break\n            }\n        })\n\n        // Logout button (if added to UI)\n        const logoutBtn = document.getElementById('logout-btn')\n        if (logoutBtn) {\n            logoutBtn.addEventListener('click', async () => {\n                await this.logout()\n            })\n        }\n    }\n\n    selectTool(tool) {\n        this.canvasManager.setTool(tool)\n\n        // Update UI\n        document.querySelectorAll('.tool-btn').forEach(btn => {\n            if (btn.dataset.tool === tool) {\n                btn.classList.add('active')\n            } else {\n                btn.classList.remove('active')\n            }\n        })\n    }\n\n    updatePresenceList(users = []) {\n        const container = document.getElementById('users-container')\n        container.innerHTML = ''\n\n        users.forEach(user => {\n            const userItem = document.createElement('div')\n            userItem.className = 'user-item'\n            // Handle both kebab-case and camelCase keys\n            const username = user.username\n            const color = user.color\n            userItem.innerHTML = `\n                <span class=\"user-indicator\" style=\"background-color: ${color}\"></span>\n                <span>${username}</span>\n            `\n            container.appendChild(userItem)\n        })\n    }\n\n    showNotification(message, type = 'info') {\n        // Simple notification system (can be enhanced with a library)\n        console.log(`[${type.toUpperCase()}] ${message}`)\n\n        // TODO: Implement visual notifications\n    }\n\n    async logout() {\n        try {\n            await fetch('/api/logout', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': this.sessionId\n                }\n            })\n        } catch (error) {\n            console.error('Logout error:', error)\n        }\n\n        // Clean up\n        localStorage.removeItem('sessionId')\n\n        // Stop periodic cleanup timer\n        if (this.canvasManager) {\n            this.canvasManager.stopPeriodicCleanup()\n        }\n\n        // Disconnect WebSocket (also cleans up cursor throttle)\n        if (this.wsClient) {\n            this.wsClient.disconnect()\n        }\n\n        // Reload page to show login\n        window.location.reload()\n    }\n\n    async runPerformanceTest() {\n        console.log('Performance testing is not available in production build');\n        console.log('Use development build (npm run dev) for performance testing');\n    }\n}\n\n// Initialize application when DOM is ready\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n        const app = new CollabCanvas()\n        app.init()\n        window.collabCanvas = app // For debugging\n    })\n} else {\n    const app = new CollabCanvas()\n    app.init()\n    window.collabCanvas = app // For debugging\n}"],"names":["PerformanceMonitor","constructor","app","canvasManager","this","fpsHistory","maxHistorySize","currentFps","lastTime","performance","now","frameCount","ticker","add","update","bind","console","log","deltaTime","deltaMs","Math","round","push","length","shift","avgFps","getAverageFps","objectCount","objects","size","warn","toFixed","reduce","a","b","getStats","current","average","min","max","destroy","remove","CanvasManager","viewport","PIXI.Container","Map","selectedObjects","Set","selectionIndicators","remoteCursors","isPanning","panStart","x","y","currentTool","currentColor","isDragging","draggedObject","draggedObjectId","dragOffset","lastDragUpdate","cullingEnabled","cullingPadding","lastViewportBounds","performanceMonitor","cursorTexture","createSharedCursorTexture","stage","addChild","sortableChildren","drawGrid","setupPanZoom","setupCentralizedDrag","setupKeyboardShortcuts","setupToolHandlers","setupViewportCulling","graphics","PIXI.Graphics","beginFill","moveTo","lineTo","endFill","texture","renderer","generateTexture","resolution","scaleMode","PIXI.SCALE_MODES","LINEAR","grid","lineStyle","gridExtent","zIndex","canvas","view","addEventListener","e","button","altKey","clientX","clientY","style","cursor","preventDefault","dx","dy","zoomFactor","deltaY","mouseX","mouseY","worldPosBefore","screenToWorld","newScale","scale","set","worldPosAfter","passive","worldPos","onObjectUpdated","alpha","screenX","screenY","worldToScreen","worldX","worldY","document","key","setTool","deleteSelected","tool","drawStart","previewShape","lastPreviewUpdate","previewUpdatePending","onCursorMoved","requestAnimationFrame","currentWorldPos","width","height","clear","drawRect","radius","sqrt","drawCircle","objData","createToolObject","removeChild","onObjectCreated","updateVisibleObjects","viewportBounds","getViewportBounds","abs","left","top","right","bottom","forEach","obj","id","objBounds","getObjectBounds","isVisible","isBoundsVisible","visible","screenWidth","screenHeight","topLeft","bottomRight","userData","type","start","end","generateId","createRectangle","color","colorToHexString","createCircle","rect","interactive","buttonMode","makeDraggable","makeSelectable","circle","createText","text","fontSize","textObj","PIXI.Text","fill","fontFamily","on","event","data","global","stopPropagation","originalEvent","shiftKey","has","deselectObject","selectObject","clearSelection","get","existingIndicator","indicator","delete","idsToDelete","Array","from","deletedIds","deleteObjects","onObjectsDeleted","loadState","canvasState","error","isArray","deleteObject","index","JSON","stringify","createRemoteObject","values","Object","keys","applyDelta","delta","value","entries","undefined","rotation","redrawGraphicsObject","updateObject","updates","children","baseTexture","ids","deletedObjects","verifyObjectDeletion","allClean","issues","find","child","_objectId","orphanedPixiObjects","filter","textureCount","PIXI.utils.TextureCache","success","orphanedObjects","getMemoryStats","pixiChildren","objectsInMap","totalTrackedObjects","textureCacheSize","baseTextureCacheSize","PIXI.utils.BaseTextureCache","colorType","normalizeColor","startsWith","parseInt","substring","updateRemoteObject","objectId","deleteRemoteObject","getObject","getAllObjects","map","name","getPerformanceStats","updateRemoteCursor","userId","username","colorNum","pointer","PIXI.Sprite","tint","label","fontWeight","stroke","strokeThickness","dropShadow","dropShadowColor","dropShadowAlpha","dropShadowDistance","lastUpdate","time","dt","lerpFactor","removeRemoteCursor","clearAllRemoteCursors","startPeriodicCleanup","intervalMs","cleanupInterval","setInterval","performCleanup","stopPeriodicCleanup","clearInterval","orphanedIndicators","orphanedCursors","fiveMinutesAgo","random","toString","substr","setColor","padStart","getCanvasState","onObjectMoved","onObjectDeleted","LatencyMonitor","options","warningThreshold","pendingMessages","latencyHistory","stats","totalMessages","averageLatency","minLatency","Infinity","maxLatency","warningCount","startTracking","messageId","messageType","sentTime","endTracking","pending","latency","recordLatency","timestamp","Date","sum","acc","item","getPercentile","percentile","sorted","sort","ceil","p50","p95","p99","historySize","getStatsByType","filtered","latencies","val","p","count","logStats","reset","CursorThrottle","sendCallback","pendingCursor","intervalId","stop","WebSocketClient","url","sessionId","canvasId","ws","isConnected","reconnectAttempts","maxReconnectAttempts","reconnectDelay","messageIdCounter","latencyMonitor","bandwidthStats","totalBytesReceived","objectUpdateMessages","startTime","cursorThrottle","send","onAuthSuccess","onAuthFailed","onUserConnected","onUserDisconnected","onPresenceUpdate","onCursorUpdate","onError","onReconnecting","onReconnected","connect","WebSocket","setupEventHandlers","scheduleReconnect","onopen","onmessage","parse","handleMessage","onclose","code","reason","wasClean","onerror","debug","users","cursors","messageSize","message","Error","trackLatency","readyState","OPEN","sendCursorUpdate","sendObjectCreate","object","sendObjectUpdate","sendObjectDelete","delay","pow","setTimeout","getBandwidthStats","elapsedMinutes","totalBytes","messageCount","averageBytesPerMessage","bytesPerMinute","getLatencyStats","getLatencyStatsByType","logLatencyStats","logBandwidthStats","disconnect","close","sendObjectsDelete","objectIds","AuthManager","modal","getElementById","loginForm","registerForm","setupEventListeners","querySelectorAll","btn","tab","dataset","switchTab","async","handleLogin","handleRegister","classList","toggle","form","err","textContent","showModal","Promise","resolve","resolveAuth","hideModal","email","password","errorEl","response","fetch","method","credentials","headers","body","json","loginAfterRegister","CollabCanvas","wsClient","authManager","getCanvasId","activeUsers","URLSearchParams","window","location","search","newUrl","URL","searchParams","history","replaceState","init","localStorage","getItem","validateSession","removeItem","hideLoadingScreen","authData","setItem","initCanvas","initWebSocket","setupUIHandlers","loadingScreen","Authorization","ok","valid","container","PIXI.Application","innerWidth","innerHeight","backgroundColor","resizeTo","appendChild","onToolChange","charAt","toUpperCase","slice","onMouseMove","onZoomChange","zoom","onObjectCountChange","wsUrl","protocol","host","updatePresenceList","showNotification","u","target","tagName","toLowerCase","selectTool","ctrlKey","runPerformanceTest","isContentEditable","metaKey","redo","undo","logoutBtn","logout","innerHTML","user","userItem","createElement","className","reload","collabCanvas"],"mappings":"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"}